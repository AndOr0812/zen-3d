// github.com/shawn0326/zen-3d
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.zen3d={})}(this,function(t){"use strict";var e,r,i,n,u=(r="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=new Array(36),n=0,function(){for(var t=0;t<36;t++)8===t||13===t||18===t||23===t?i[t]="-":14===t?i[t]="4":(n<=2&&(n=33554432+16777216*Math.random()|0),e=15&n,n>>=4,i[t]=r[19===t?3&e|8:e]);return i.join("")}),a=function(){if(!window.navigator)return!0;var t=navigator.userAgent.toLowerCase();return-1!=t.indexOf("mobile")||-1!=t.indexOf("android")}(),f=!!document;function s(t){return 0==(t&t-1)&&0!==t}function _(t){return Math.pow(2,Math.round(Math.log(t)/Math.LN2))}function c(t){return t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,++t}var l,d,o,h,p,m,v,g,x,y,M,E,T,b,S,w,A,P,L,N,C,R,O,I,U,F,D,z,B,G,k,V,H,j,X,W,Y={MESH:"mesh",SKINNED_MESH:"skinned_mesh",LIGHT:"light",CAMERA:"camera",SCENE:"scene",GROUP:"group",POINT:"point",LINE:"line",LINE_LOOP:"line_loop",LINE_SEGMENTS:"line_segments",CANVAS2D:"canvas2d"},q={AMBIENT:"ambient",DIRECT:"direct",POINT:"point",SPOT:"spot"},Z={BASIC:"basic",LAMBERT:"lambert",PHONG:"phong",PBR:"pbr",POINT:"point",LINE:"line",LINE_LOOP:"lineloop",LINE_DASHED:"linedashed",CANVAS2D:"canvas2d",SHADER:"shader",DEPTH:"depth",DISTANCE:"distance"},K={NORMAL:"normal",EXP2:"exp2"},Q={NONE:"none",NORMAL:"normal",ADD:"add",CUSTOM:"custom"},J={ADD:32774,SUBTRACT:32778,REVERSE_SUBTRACT:32779},$={ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775},tt={NONE:"none",FRONT:"front",BACK:"back",FRONT_AND_BACK:"front_and_back"},et={FRONT:"front",BACK:"back",DOUBLE:"double"},rt={SMOOTH_SHADING:"smooth_shading",FLAT_SHADING:"flat_shading"},it={TEXTURE_2D:3553,TEXTURE_CUBE_MAP:34067},nt={DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410},at={BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,HALF_FLOAT:5131,UNSIGNED_INT_24_8:34042,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635},st={NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987},ot={REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648},ht={FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,BYTE:65535,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126},ut={FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,FLOAT:5126,BYTE:65535,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123},ct={STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048},lt={HARD:"hard",PCF_SOFT:"pcf_soft"},dt={LINEAR:"linear",SRGB:"sRGB",RGBE:"RGBE",RGBM7:"RGBM7",RGBM16:"RGBM16",RGBD:"RGBD",GAMMA:"Gamma"},pt={MULTIPLY:"ENVMAP_BLENDING_MULTIPLY",MIX:"ENVMAP_BLENDING_MIX",ADD:"ENVMAP_BLENDING_ADD"},ft={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6};function _t(){this.eventMap={}}function mt(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function vt(t,e,r){this.x=t||0,this.y=e||0,this.z=r||0}function gt(t,e){this.origin=void 0!==t?t:new vt,this.direction=void 0!==e?e:new vt}function xt(t,e,r,i){this.ray=new gt(t,e),this.near=r||0,this.far=i||1/0}function yt(t,e){return t.distance-e.distance}function Mt(t,e,r,i){if(t.raycast(e,r),!0===i)for(var n=t.children,a=0,s=n.length;a<s;a++)Mt(n[a],e,r,!0)}function Et(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._order=i||Et.DefaultOrder}function Tt(t,e){this.x=t||0,this.y=e||0}function bt(t,e,r,i){this.x=t||0,this.y=e||0,this.z=r||0,this.w=void 0!==i?i:1}function St(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1])}function wt(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._w=void 0!==i?i:1}function At(t,e){this.min=void 0!==t?t:new Tt(1/0,1/0),this.max=void 0!==e?e:new Tt(-1/0,-1/0)}function Pt(t,e){this.min=void 0!==t?t:new vt(1/0,1/0,1/0),this.max=void 0!==e?e:new vt(-1/0,-1/0,-1/0)}function Lt(t,e){this.center=void 0!==t?t:new vt,this.radius=void 0!==e?e:0}function Nt(t,e){this.normal=void 0!==t?t:new vt(1,0,0),this.constant=void 0!==e?e:0}function Ct(t,e,r,i,n,a){this.planes=[void 0!==t?t:new Nt,void 0!==e?e:new Nt,void 0!==r?r:new Nt,void 0!==i?i:new Nt,void 0!==n?n:new Nt,void 0!==a?a:new Nt]}function Rt(t,e,r){return this.r=0,this.g=0,void(this.b=0)===e&&void 0===r?this.setHex(t):this.setRGB(t,e,r)}function Ot(t,e,r){this.a=void 0!==t?t:new vt,this.b=void 0!==e?e:new vt,this.c=void 0!==r?r:new vt}function It(t,e){this.posPoints=void 0,this.ctrlPoints=void 0,this.segCount=0,this.set(t,e)}function Ut(t,e,r){this.radius=void 0!==t?t:1,this.phi=void 0!==e?e:0,this.theta=void 0!==r?r:0}function Ft(){_t.call(this),this.uuid=u(),this.textureType="",this.border=0,this.pixelFormat=nt.RGBA,this.pixelType=at.UNSIGNED_BYTE,this.magFilter=st.LINEAR,this.minFilter=st.LINEAR_MIPMAP_LINEAR,this.wrapS=ot.CLAMP_TO_EDGE,this.wrapT=ot.CLAMP_TO_EDGE,this.anisotropy=1,this.generateMipmaps=!0,this.encoding=dt.LINEAR,this.flipY=!0,this.version=0}function Dt(){this.crossOrigin=void 0,this.path=void 0}function zt(){this.path=void 0,this.responseType=void 0,this.withCredentials=void 0,this.mimeType=void 0,this.requestHeader=void 0}function Bt(){}function Gt(){Ft.call(this),this.textureType=it.TEXTURE_2D,this.image=null,this.mipmaps=[],this.offset=new Tt,this.repeat=new Tt(1,1),this.center=new Tt,this.rotation=0,this.matrix=new St,this.matrixAutoUpdate=!0}function kt(){Ft.call(this),this.textureType=it.TEXTURE_CUBE_MAP,this.images=[],this.flipY=!1}function Vt(t,e,r){Gt.call(this),this.image={data:t,width:e,height:r},this.pixelType=at.FLOAT,this.magFilter=st.NEAREST,this.minFilter=st.NEAREST,this.generateMipmaps=!1,this.flipY=!1}function Ht(t,e){Gt.call(this),this.image={width:t,height:e},this.pixelType=at.UNSIGNED_SHORT,this.pixelFormat=nt.DEPTH_COMPONENT,this.magFilter=st.NEAREST,this.minFilter=st.NEAREST,this.generateMipmaps=!1,this.flipY=!1}function jt(){this.uuid=u(),this.name="",this.type="",this.position=new vt,this.scale=new vt(1,1,1);var t=this.euler=new Et,e=this.quaternion=new wt;t.onChange(function(){e.setFromEuler(t,!1)}),e.onChange(function(){t.setFromQuaternion(e,void 0,!1)}),this.matrix=new mt,this.worldMatrix=new mt,this.children=new Array,this.parent=null,this.castShadow=!1,this.receiveShadow=!1,this.shadowType=lt.PCF_SOFT,this.frustumCulled=!0,this.visible=!0,this.userData={}}function Xt(){jt.call(this),this.type="bone",this.offsetMatrix=new mt}function Wt(t){t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.boneTexture=void 0,this.boneTextureSize=0}function Yt(t,e,r,i,n){if(.5<=i)for(var a=0;a!==n;++a)t[e+a]=t[r+a]}function qt(t,e,r,i){wt.slerpFlat(t,e,t,e,t,r,i)}function Zt(t,e,r,i,n){for(var a=1-i,s=0;s!==n;++s){var o=e+s;t[o]=t[o]*a+t[r+s]*i}}function Kt(t,e,r,i){this.target=null,this.property="",this.parseBinding(t,e),this.valueSize=i;var n,a=Float64Array;switch(r){case"quaternion":n=qt;break;case"string":case"bool":a=Array,n=Yt;break;default:n=Zt}this.buffer=new a(2*i),this._mixBufferFunction=n,this.cumulativeWeight=0,this.referenceCount=0,this.useCount=0}function Qt(){this._clips={},this._bindings={},this._activeClips={}}function Jt(t,e,r,i,n){this.target=t,this.propertyPath=e,this.name=this.target.uuid+"."+e,this.times=r,this.values=i,this.valueSize=i.length/r.length,this.interpolant=void 0===n||n}function $t(t,e,r,i,n){Jt.call(this,t,e,r,i,n)}function te(t,e,r,i,n){Jt.call(this,t,e,r,i,n)}function ee(t){this.name=t||"",this.tracks=[],this.loop=!0,this.startFrame=0,this.endFrame=0,this.frame=0}function re(t,e,r,i,n){Jt.call(this,t,e,r,i,n)}function ie(t,e,r,i,n){Jt.call(this,t,e,r,i,n)}function ne(t,e,r,i,n){Jt.call(this,t,e,r,i,n)}function ae(t,e,r,i,n){Jt.call(this,t,e,r,i,n)}function se(t,e,r){this.uuid=u(),this.array=t,this.size=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===r,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function oe(){_t.call(this),this.uuid=u(),this.attributes={},this.index=null,this.usageType=ct.STATIC_DRAW,this.boundingBox=new Pt,this.boundingSphere=new Lt,this.dirtyRange={enable:!1,start:0,count:0},this.groups=[]}function he(t,e,r,i,n,a){oe.call(this),this.buildGeometry(t,e,r,i,n,a)}function ue(t,e,r,i,n,a,s,o){oe.call(this),this.buildGeometry(t,e,r,i,n,a,s,o)}function ce(t,e,r){se.call(this,t,e),this.meshPerAttribute=r||1}function le(){oe.call(this),this.maxInstancedCount=void 0}function de(t,e){this.uuid=u(),this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function pe(t,e,r){de.call(this,t,e),this.meshPerAttribute=r||1}function fe(t,e,r,i){this.uuid=u(),this.data=t,this.size=e,this.offset=r,this.normalized=!0===i}function _e(t,e,r,i){oe.call(this),this.buildGeometry(t,e,r,i)}function me(t,e,r,i,n,a,s){oe.call(this),this.buildGeometry(t,e,r,i,n,a,s)}function ve(){this.type="",this.opacity=1,this.transparent=!1,this.blending=Q.NORMAL,this.blendSrc=$.SRC_ALPHA,this.blendDst=$.ONE_MINUS_SRC_ALPHA,this.blendEquation=J.ADD,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.premultipliedAlpha=!1,this.vertexColors=!1,this.diffuse=new Rt(16777215),this.diffuseMap=null,this.normalMap=null,this.aoMap=null,this.aoMapIntensity=1,this.bumpMap=null,this.bumpScale=1,this.envMap=null,this.envMapIntensity=1,this.envMapCombine=pt.MULTIPLY,this.emissive=new Rt(0),this.emissiveMap=null,this.emissiveIntensity=1,this.depthTest=!0,this.depthWrite=!0,this.colorWrite=!0,this.alphaTest=0,this.side=et.FRONT,this.shading=rt.SMOOTH_SHADING,this.acceptLight=!1,this.drawMode=ft.TRIANGLES}function ge(){ve.call(this),this.type=Z.BASIC}function xe(){ve.call(this),this.type=Z.LAMBERT,this.acceptLight=!0}function ye(){ve.call(this),this.type=Z.PHONG,this.shininess=30,this.specular=new Rt(6710886),this.specularMap=null,this.acceptLight=!0}function Me(){ve.call(this),this.type=Z.PBR,this.roughness=.5,this.metalness=.5,this.roughnessMap=null,this.metalnessMap=null,this.acceptLight=!0}function Ee(){ve.call(this),this.type=Z.POINT,this.size=1,this.sizeAttenuation=!0,this.drawMode=ft.POINTS}function Te(){ve.call(this),this.type=Z.LINE,this.lineWidth=1,this.drawMode=ft.LINES}function be(){ve.call(this),this.type=Z.LINE_LOOP,this.lineWidth=1,this.drawMode=ft.LINE_LOOP}function Se(){ve.call(this),this.type=Z.LINE_DASHED,this.lineWidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.drawMode=ft.LINE_STRIP}function we(t,e,r){ve.call(this),this.type=Z.SHADER,this.vertexShader=t||"",this.fragmentShader=e||"",this.defines={},this.uniforms=r||{}}function Ae(){ve.call(this),this.type=Z.DEPTH,this.blending=Q.NONE,this.packToRGBA=!1}function Pe(){ve.call(this),this.type=Z.DISTANCE,this.blending=Q.NONE}Object.assign(_t.prototype,{addEventListener:function(t,e,r){var i=this.eventMap[t];i||(i=this.eventMap[t]=[]),i.push({listener:e,thisObject:r||this})},removeEventListener:function(t,e,r){var i=this.eventMap[t];if(i)for(var n=0,a=i.length;n<a;n++){var s=i[n];if(s.listener==e&&s.thisObject==(r||this)){i.splice(n,1);break}}},dispatchEvent:function(t){(t.target=this).notifyListener(t)},notifyListener:function(t){var e=this.eventMap[t.type];if(e)for(var r=0,i=e.length;r<i;r++){var n=e[r];n.listener.call(n.thisObject,t)}}}),Object.assign(mt.prototype,{identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},set:function(t,e,r,i,n,a,s,o,h,u,c,l,d,p,f,_){var m=this.elements;return m[0]=t,m[4]=e,m[8]=r,m[12]=i,m[1]=n,m[5]=a,m[9]=s,m[13]=o,m[2]=h,m[6]=u,m[10]=c,m[14]=l,m[3]=d,m[7]=p,m[11]=f,m[15]=_,this},copy:function(t){return this.elements.set(t.elements),this},makeTranslation:function(t,e,r){return this.set(1,0,0,t,0,1,0,e,0,0,1,r,0,0,0,1),this},multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var r=t.elements,i=e.elements,n=this.elements,a=r[0],s=r[4],o=r[8],h=r[12],u=r[1],c=r[5],l=r[9],d=r[13],p=r[2],f=r[6],_=r[10],m=r[14],v=r[3],g=r[7],x=r[11],y=r[15],M=i[0],E=i[4],T=i[8],b=i[12],S=i[1],w=i[5],A=i[9],P=i[13],L=i[2],N=i[6],C=i[10],R=i[14],O=i[3],I=i[7],U=i[11],F=i[15];return n[0]=a*M+s*S+o*L+h*O,n[4]=a*E+s*w+o*N+h*I,n[8]=a*T+s*A+o*C+h*U,n[12]=a*b+s*P+o*R+h*F,n[1]=u*M+c*S+l*L+d*O,n[5]=u*E+c*w+l*N+d*I,n[9]=u*T+c*A+l*C+d*U,n[13]=u*b+c*P+l*R+d*F,n[2]=p*M+f*S+_*L+m*O,n[6]=p*E+f*w+_*N+m*I,n[10]=p*T+f*A+_*C+m*U,n[14]=p*b+f*P+_*R+m*F,n[3]=v*M+g*S+x*L+y*O,n[7]=v*E+g*w+x*N+y*I,n[11]=v*T+g*A+x*C+y*U,n[15]=v*b+g*P+x*R+y*F,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},inverse:function(){return this.getInverse(this)},getInverse:function(t){var e=this.elements,r=t.elements,i=r[0],n=r[1],a=r[2],s=r[3],o=r[4],h=r[5],u=r[6],c=r[7],l=r[8],d=r[9],p=r[10],f=r[11],_=r[12],m=r[13],v=r[14],g=r[15],x=d*v*c-m*p*c+m*u*f-h*v*f-d*u*g+h*p*g,y=_*p*c-l*v*c-_*u*f+o*v*f+l*u*g-o*p*g,M=l*m*c-_*d*c+_*h*f-o*m*f-l*h*g+o*d*g,E=_*d*u-l*m*u-_*h*p+o*m*p+l*h*v-o*d*v,T=i*x+n*y+a*M+s*E;if(0===T)return console.warn("can't invert matrix, determinant is 0"),this.identity();var b=1/T;return e[0]=x*b,e[1]=(m*p*s-d*v*s-m*a*f+n*v*f+d*a*g-n*p*g)*b,e[2]=(h*v*s-m*u*s+m*a*c-n*v*c-h*a*g+n*u*g)*b,e[3]=(d*u*s-h*p*s-d*a*c+n*p*c+h*a*f-n*u*f)*b,e[4]=y*b,e[5]=(l*v*s-_*p*s+_*a*f-i*v*f-l*a*g+i*p*g)*b,e[6]=(_*u*s-o*v*s-_*a*c+i*v*c+o*a*g-i*u*g)*b,e[7]=(o*p*s-l*u*s+l*a*c-i*p*c-o*a*f+i*u*f)*b,e[8]=M*b,e[9]=(_*d*s-l*m*s-_*n*f+i*m*f+l*n*g-i*d*g)*b,e[10]=(o*m*s-_*h*s+_*n*c-i*m*c-o*n*g+i*h*g)*b,e[11]=(l*h*s-o*d*s-l*n*c+i*d*c+o*n*f-i*h*f)*b,e[12]=E*b,e[13]=(l*m*a-_*d*a+_*n*p-i*m*p-l*n*v+i*d*v)*b,e[14]=(_*h*a-o*m*a-_*n*u+i*m*u+o*n*v-i*h*v)*b,e[15]=(o*d*a-l*h*a+l*n*u-i*d*u-o*n*p+i*h*p)*b,this},transform:(m=new mt,function(t,e,r){var i=r.toMatrix4(m).elements,n=this.elements;return n[0]=i[0]*e.x,n[1]=i[1]*e.x,n[2]=i[2]*e.x,n[3]=0,n[4]=i[4]*e.y,n[5]=i[5]*e.y,n[6]=i[6]*e.y,n[7]=0,n[8]=i[8]*e.z,n[9]=i[9]*e.z,n[10]=i[10]*e.z,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this}),makeRotationFromQuaternion:function(t){var e=this.elements,r=t.x,i=t.y,n=t.z,a=t.w,s=r+r,o=i+i,h=n+n,u=r*s,c=r*o,l=r*h,d=i*o,p=i*h,f=n*h,_=a*s,m=a*o,v=a*h;return e[0]=1-(d+f),e[4]=c-v,e[8]=l+m,e[1]=c+v,e[5]=1-(u+f),e[9]=p-_,e[2]=l-m,e[6]=p+_,e[10]=1-(u+d),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAtRH:(o=new vt,h=new vt,p=new vt,function(t,e,r){var i=this.elements;return p.subVectors(t,e),0===p.getLengthSquared()&&(p.z=1),p.normalize(),o.crossVectors(r,p),0===o.getLengthSquared()&&(1===Math.abs(r.z)?p.x+=1e-4:p.z+=1e-4,p.normalize(),o.crossVectors(r,p)),o.normalize(),h.crossVectors(p,o),i[0]=o.x,i[4]=h.x,i[8]=p.x,i[1]=o.y,i[5]=h.y,i[9]=p.y,i[2]=o.z,i[6]=h.z,i[10]=p.z,this}),decompose:(l=new vt,d=new mt,function(t,e,r){var i=this.elements,n=l.set(i[0],i[1],i[2]).getLength(),a=l.set(i[4],i[5],i[6]).getLength(),s=l.set(i[8],i[9],i[10]).getLength();this.determinant()<0&&(n=-n),t.x=i[12],t.y=i[13],t.z=i[14],d.elements.set(this.elements);var o=1/n,h=1/a,u=1/s;return d.elements[0]*=o,d.elements[1]*=o,d.elements[2]*=o,d.elements[4]*=h,d.elements[5]*=h,d.elements[6]*=h,d.elements[8]*=u,d.elements[9]*=u,d.elements[10]*=u,e.setFromRotationMatrix(d),r.x=n,r.y=a,r.z=s,this}),determinant:function(){var t=this.elements,e=t[0],r=t[4],i=t[8],n=t[12],a=t[1],s=t[5],o=t[9],h=t[13],u=t[2],c=t[6],l=t[10],d=t[14];return t[3]*(+n*o*c-i*h*c-n*s*l+r*h*l+i*s*d-r*o*d)+t[7]*(+e*o*d-e*h*l+n*a*l-i*a*d+i*h*u-n*o*u)+t[11]*(+e*h*c-e*s*d-n*a*c+r*a*d+n*s*u-r*h*u)+t[15]*(-i*s*u-e*o*c+e*s*l+i*a*c-r*a*l+r*o*u)},fromArray:function(t,e){void 0===e&&(e=0);for(var r=0;r<16;r++)this.elements[r]=t[r+e];return this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],r=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,r,i))},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t[e+9]=r[9],t[e+10]=r[10],t[e+11]=r[11],t[e+12]=r[12],t[e+13]=r[13],t[e+14]=r[14],t[e+15]=r[15],t}}),Object.assign(vt.prototype,{lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t)},set:function(t,e,r){return this.x=t||0,this.y=e||0,this.z=r||0,this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},getLength:function(){return Math.sqrt(this.getLengthSquared())},getLengthSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z},normalize:function(t){t=t||1;var e=this.getLength();if(0!=e){var r=t/e;return this.x*=r,this.y*=r,this.z*=r,this}},subtract:function(t,e){return e||(e=new vt),e.set(this.x-t.x,this.y-t.y,this.z-t.z),e},multiply:function(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this},crossVectors:function(t,e){var r=t.x,i=t.y,n=t.z,a=e.x,s=e.y,o=e.z;return this.x=i*o-n*s,this.y=n*a-r*o,this.z=r*s-i*a,this},cross:function(t){var e=this.x,r=this.y,i=this.z;return this.x=r*t.z-i*t.y,this.y=i*t.x-e*t.z,this.z=e*t.y-r*t.x,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},applyQuaternion:function(t){var e=this.x,r=this.y,i=this.z,n=t._x,a=t._y,s=t._z,o=t._w,h=o*e+a*i-s*r,u=o*r+s*e-n*i,c=o*i+n*r-a*e,l=-n*e-a*r-s*i;return this.x=h*o+l*-n+u*-s-c*-a,this.y=u*o+l*-a+c*-n-h*-s,this.z=c*o+l*-s+h*-a-u*-n,this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[4]*r+n[8]*i+n[12],this.y=n[1]*e+n[5]*r+n[9]*i+n[13],this.z=n[2]*e+n[6]*r+n[10]*i+n[14],this},applyMatrix3:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[3]*r+n[6]*i,this.y=n[1]*e+n[4]*r+n[7]*i,this.z=n[2]*e+n[5]*r+n[8]*i,this},transformDirection:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[4]*r+n[8]*i,this.y=n[1]*e+n[5]*r+n[9]*i,this.z=n[2]*e+n[6]*r+n[10]*i,this.normalize()},setFromMatrixPosition:function(t){return this.setFromMatrixColumn(t,3)},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,4*e)},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},add:function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},sub:function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y,i=this.z-t.z;return e*e+r*r+i*i},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},setFromSpherical:function(t){var e=Math.sin(t.phi)*t.radius;return this.x=e*Math.sin(t.theta),this.y=Math.cos(t.phi)*t.radius,this.z=e*Math.cos(t.theta),this},unproject:function(t){return void 0===v&&(v=new mt),v.multiplyMatrices(t.worldMatrix,v.getInverse(t.projectionMatrix)),this.applyProjection(v)},applyProjection:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements,a=1/(n[3]*e+n[7]*r+n[11]*i+n[15]);return this.x=(n[0]*e+n[4]*r+n[8]*i+n[12])*a,this.y=(n[1]*e+n[5]*r+n[9]*i+n[13])*a,this.z=(n[2]*e+n[6]*r+n[10]*i+n[14])*a,this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},clone:function(){return new vt(this.x,this.y,this.z)}}),Object.assign(gt.prototype,{set:function(t,e){this.origin.copy(t),this.direction.copy(e)},at:function(t,e){return(e||new vt).copy(this.direction).multiplyScalar(t).add(this.origin)},intersectsSphere:(E=new vt,function(t,e){E.subVectors(t.center,this.origin);var r=E.dot(this.direction),i=E.dot(E)-r*r,n=t.radius*t.radius;if(n<i)return null;var a=Math.sqrt(n-i),s=r-a,o=r+a;return s<0&&o<0?null:s<0?this.at(o,e):this.at(s,e)}),intersectsBox:function(t,e){var r,i,n,a,s,o,h=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,l=this.origin;return 0<=h?(r=(t.min.x-l.x)*h,i=(t.max.x-l.x)*h):(r=(t.max.x-l.x)*h,i=(t.min.x-l.x)*h),0<=u?(n=(t.min.y-l.y)*u,a=(t.max.y-l.y)*u):(n=(t.max.y-l.y)*u,a=(t.min.y-l.y)*u),a<r||i<n?null:((r<n||r!=r)&&(r=n),(a<i||i!=i)&&(i=a),0<=c?(s=(t.min.z-l.z)*c,o=(t.max.z-l.z)*c):(s=(t.max.z-l.z)*c,o=(t.min.z-l.z)*c),o<r||i<s?null:((r<s||r!=r)&&(r=s),(o<i||i!=i)&&(i=o),i<0?null:this.at(0<=r?r:i,e)))},intersectTriangle:(g=new vt,x=new vt,y=new vt,M=new vt,function(t,e,r,i,n){x.subVectors(e,t),y.subVectors(r,t),M.crossVectors(x,y);var a,s=this.direction.dot(M);if(0<s){if(i)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}g.subVectors(this.origin,t);var o=a*this.direction.dot(y.crossVectors(g,y));if(o<0)return null;var h=a*this.direction.dot(x.cross(g));if(h<0)return null;if(s<o+h)return null;var u=-a*g.dot(M);return u<0?null:this.at(u/s,n)}),copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},applyMatrix4:function(t){return this.direction.add(this.origin).applyMatrix4(t),this.origin.applyMatrix4(t),this.direction.sub(this.origin),this.direction.normalize(),this}}),Object.assign(xt.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){this.ray.origin.setFromMatrixPosition(e.worldMatrix),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize()},intersectObject:function(t,e){var r=[];return Mt(t,this,r,e),r.sort(yt),r},intersectObjects:function(t,e){var r=[];if(!1===Array.isArray(t))return console.warn("Raycaster.intersectObjects: objects is not an Array."),r;for(var i=0,n=t.length;i<n;i++)Mt(t[i],this,r,e);return r.sort(yt),r}}),Et.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],Et.DefaultOrder="XYZ",Object.defineProperties(Et.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this.onChangeCallback()}}}),Object.assign(Et.prototype,{copyFrom:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},set:function(t,e,r,i){return this._x=t||0,this._y=e||0,this._z=r||0,this._order=i||this._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e,r){var i=function(t,e,r){return Math.max(e,Math.min(r,t))},n=t.elements,a=n[0],s=n[4],o=n[8],h=n[1],u=n[5],c=n[9],l=n[2],d=n[6],p=n[10];return"XYZ"===(e=e||this._order)?(this._y=Math.asin(i(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(-c,p),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(d,u),this._z=0)):"YXZ"===e?(this._x=Math.asin(-i(c,-1,1)),Math.abs(c)<.99999?(this._y=Math.atan2(o,p),this._z=Math.atan2(h,u)):(this._y=Math.atan2(-l,a),this._z=0)):"ZXY"===e?(this._x=Math.asin(i(d,-1,1)),Math.abs(d)<.99999?(this._y=Math.atan2(-l,p),this._z=Math.atan2(-s,u)):(this._y=0,this._z=Math.atan2(h,a))):"ZYX"===e?(this._y=Math.asin(-i(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(d,p),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-s,u))):"YZX"===e?(this._z=Math.asin(i(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(-c,u),this._y=Math.atan2(-l,a)):(this._x=0,this._y=Math.atan2(o,p))):"XZY"===e?(this._z=Math.asin(-i(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(d,u),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-c,p),this._y=0)):console.warn("given unsupported order: "+e),this._order=e,!1!==r&&this.onChangeCallback(),this},setFromQuaternion:(T=new mt,function(t,e,r){return t.toMatrix4(T),this.setFromRotationMatrix(T,e,r)}),onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(Tt.prototype,{set:function(t,e){return this.x=t||0,this.y=e||0,this},lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},getLength:function(){return Math.sqrt(this.getLengthSquared())},getLengthSquared:function(){return this.x*this.x+this.y*this.y},normalize:function(t){t=t||1;var e=this.getLength();if(0!=e){var r=t/e;return this.x*=r,this.y*=r,this}},subtract:function(t,e){return e||(e=new Tt),e.set(this.x-t.x,this.y-t.y),e},copy:function(t){return this.x=t.x,this.y=t.y,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y;return e*e+r*r},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},add:function(t){return this.x+=t.x,this.y+=t.y,this},clone:function(){return new Tt(this.x,this.y)}}),Object.assign(bt.prototype,{lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t)},set:function(t,e,r,i){return this.x=t||0,this.y=e||0,this.z=r||0,this.w=void 0!==i?i:1,this},normalize:function(){return this.multiplyScalar(1/(this.getLength()||1))},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},getLengthSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},getLength:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z,n=this.w,a=t.elements;return this.x=a[0]*e+a[4]*r+a[8]*i+a[12]*n,this.y=a[1]*e+a[5]*r+a[9]*i+a[13]*n,this.z=a[2]*e+a[6]*r+a[10]*i+a[14]*n,this.w=a[3]*e+a[7]*r+a[11]*i+a[15]*n,this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},add:function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}}),Object.assign(St.prototype,{identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},inverse:function(){return this.getInverse(this)},getInverse:function(t){var e=t.elements,r=this.elements,i=e[0],n=e[1],a=e[2],s=e[3],o=e[4],h=e[5],u=e[6],c=e[7],l=e[8],d=l*o-h*c,p=h*u-l*s,f=c*s-o*u,_=i*d+n*p+a*f;if(0===_){return console.warn("zen3d.Matrix3: .getInverse() can't invert matrix, determinant is 0"),this.identity()}var m=1/_;return r[0]=d*m,r[1]=(a*c-l*n)*m,r[2]=(h*n-a*o)*m,r[3]=p*m,r[4]=(l*i-a*u)*m,r[5]=(a*s-h*i)*m,r[6]=f*m,r[7]=(n*u-c*i)*m,r[8]=(o*i-n*s)*m,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},set:function(t,e,r,i,n,a,s,o,h){var u=this.elements;return u[0]=t,u[3]=e,u[6]=r,u[1]=i,u[4]=n,u[7]=a,u[2]=s,u[5]=o,u[8]=h,this},copy:function(t){return this.elements.set(t.elements),this},multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var r=t.elements,i=e.elements,n=this.elements,a=r[0],s=r[3],o=r[6],h=r[1],u=r[4],c=r[7],l=r[2],d=r[5],p=r[8],f=i[0],_=i[3],m=i[6],v=i[1],g=i[4],x=i[7],y=i[2],M=i[5],E=i[8];return n[0]=a*f+s*v+o*y,n[3]=a*_+s*g+o*M,n[6]=a*m+s*x+o*E,n[1]=h*f+u*v+c*y,n[4]=h*_+u*g+c*M,n[7]=h*m+u*x+c*E,n[2]=l*f+d*v+p*y,n[5]=l*_+d*g+p*M,n[8]=l*m+d*x+p*E,this},transform:function(t,e,r,i,n,a,s){var o=this.elements,h=1,u=0;if(n%360){var c=n;h=Math.cos(c),u=Math.sin(c)}return o[0]=h*r,o[3]=-u*i,o[6]=t,o[1]=u*r,o[4]=h*i,o[7]=e,o[2]=0,o[5]=0,o[8]=1,(a||s)&&(o[6]-=a*o[0]+s*o[3],o[7]-=a*o[1]+s*o[4]),this},setUvTransform:function(t,e,r,i,n,a,s){var o=Math.cos(n),h=Math.sin(n);this.set(r*o,r*h,-r*(o*a+h*s)+a+t,-i*h,i*o,-i*(-h*a+o*s)+s+e,0,0,1)},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}}),Object.defineProperties(wt.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this.onChangeCallback()}}}),Object.assign(wt.prototype,{normalize:function(t){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},lerpQuaternions:function(t,e,r){var i=t._w,n=t._x,a=t._y,s=t._z,o=e._w,h=e._x,u=e._y,c=e._z,l=i*o+n*h+a*u+s*c;l<0&&(l=-l,o=-o,h=-h,u=-u,c=-c),this._w=i+r*(o-i),this._x=n+r*(h-n),this._y=a+r*(u-a),this._z=s+r*(c-s);var d=1/Math.sqrt(this._w*this._w+this._x*this._x+this._y*this._y+this._z*this._z);return this._w*=d,this._x*=d,this._y*=d,this._z*=d,this.onChangeCallback(),this},slerpQuaternions:function(t,e,r){var i=t._w,n=t._x,a=t._y,s=t._z,o=e._w,h=e._x,u=e._y,c=e._z,l=i*o+n*h+a*u+s*c;if(l<0&&(l=-l,o=-o,h=-h,u=-u,c=-c),l<.95){var d=Math.acos(l),p=1/Math.sin(d),f=Math.sin(d*(1-r))*p,_=Math.sin(d*r)*p;this._w=i*f+o*_,this._x=n*f+h*_,this._y=a*f+u*_,this._z=s*f+c*_}else{this._w=i+r*(o-i),this._x=n+r*(h-n),this._y=a+r*(u-a),this._z=s+r*(c-s);var m=1/Math.sqrt(this._w*this._w+this._x*this._x+this._y*this._y+this._z*this._z);this._w*=m,this._x*=m,this._y*=m,this._z*=m}return this.onChangeCallback(),this},set:function(t,e,r,i){return this._x=t||0,this._y=e||0,this._z=r||0,this._w=void 0!==i?i:1,this.onChangeCallback(),this},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=void 0!==t.w?t.w:1,this.onChangeCallback(),this},setFromEuler:function(t,e){var r=Math.cos(t._x/2),i=Math.cos(t._y/2),n=Math.cos(t._z/2),a=Math.sin(t._x/2),s=Math.sin(t._y/2),o=Math.sin(t._z/2),h=t._order;return"XYZ"===h?(this._x=a*i*n+r*s*o,this._y=r*s*n-a*i*o,this._z=r*i*o+a*s*n,this._w=r*i*n-a*s*o):"YXZ"===h?(this._x=a*i*n+r*s*o,this._y=r*s*n-a*i*o,this._z=r*i*o-a*s*n,this._w=r*i*n+a*s*o):"ZXY"===h?(this._x=a*i*n-r*s*o,this._y=r*s*n+a*i*o,this._z=r*i*o+a*s*n,this._w=r*i*n-a*s*o):"ZYX"===h?(this._x=a*i*n-r*s*o,this._y=r*s*n+a*i*o,this._z=r*i*o-a*s*n,this._w=r*i*n+a*s*o):"YZX"===h?(this._x=a*i*n+r*s*o,this._y=r*s*n+a*i*o,this._z=r*i*o-a*s*n,this._w=r*i*n-a*s*o):"XZY"===h&&(this._x=a*i*n-r*s*o,this._y=r*s*n-a*i*o,this._z=r*i*o+a*s*n,this._w=r*i*n+a*s*o),!1!==e&&this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e,r=t.elements,i=r[0],n=r[4],a=r[8],s=r[1],o=r[5],h=r[9],u=r[2],c=r[6],l=r[10],d=i+o+l;return 0<d?(e=.5/Math.sqrt(d+1),this._w=.25/e,this._x=(c-h)*e,this._y=(a-u)*e,this._z=(s-n)*e):o<i&&l<i?(e=2*Math.sqrt(1+i-o-l),this._w=(c-h)/e,this._x=.25*e,this._y=(n+s)/e,this._z=(a+u)/e):l<o?(e=2*Math.sqrt(1+o-i-l),this._w=(a-u)/e,this._x=(n+s)/e,this._y=.25*e,this._z=(h+c)/e):(e=2*Math.sqrt(1+l-i-o),this._w=(s-n)/e,this._x=(a+u)/e,this._y=(h+c)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:(S=new vt,function(t,e){return void 0===S&&(S=new vt),(b=t.dot(e)+1)<1e-6?(b=0,Math.abs(t.x)>Math.abs(t.z)?S.set(-t.y,t.x,0):S.set(0,-t.z,t.y)):S.crossVectors(t,e),this._x=S.x,this._y=S.y,this._z=S.z,this._w=b,this.normalize()}),multiply:function(t){return this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var r=t._x,i=t._y,n=t._z,a=t._w,s=e._x,o=e._y,h=e._z,u=e._w;return this._x=r*u+a*s+i*h-n*o,this._y=i*u+a*o+n*s-r*h,this._z=n*u+a*h+r*o-i*s,this._w=a*u-r*s-i*o-n*h,this.onChangeCallback(),this},toMatrix4:function(t){t||(t=new mt);var e=t.elements,r=2*this._x*this._y,i=2*this._x*this._z,n=2*this._x*this._w,a=2*this._y*this._z,s=2*this._y*this._w,o=2*this._z*this._w,h=this._x*this._x,u=this._y*this._y,c=this._z*this._z,l=this._w*this._w;return e[0]=h-u-c+l,e[4]=r-o,e[8]=i+s,e[12]=0,e[1]=r+o,e[5]=-h+u-c+l,e[9]=a-n,e[13]=0,e[2]=i-s,e[6]=a+n,e[10]=-h-u+c+l,e[14]=0,e[3]=0,e[7]=0,e[11]=0,e[15]=1,t},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},setFromAxisAngle:function(t,e){var r=e/2,i=Math.sin(r);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(wt,{slerpFlat:function(t,e,r,i,n,a,s){var o=r[i+0],h=r[i+1],u=r[i+2],c=r[i+3],l=n[a+0],d=n[a+1],p=n[a+2],f=n[a+3];if(c!==f||o!==l||h!==d||u!==p){var _=1-s,m=o*l+h*d+u*p+c*f,v=0<=m?1:-1,g=1-m*m;if(g>Number.EPSILON){var x=Math.sqrt(g),y=Math.atan2(x,m*v);_=Math.sin(_*y)/x,s=Math.sin(s*y)/x}var M=s*v;if(o=o*_+l*M,h=h*_+d*M,u=u*_+p*M,c=c*_+f*M,_===1-s){var E=1/Math.sqrt(o*o+h*h+u*u+c*c);o*=E,h*=E,u*=E,c*=E}}t[e]=o,t[e+1]=h,t[e+2]=u,t[e+3]=c}}),Object.assign(At.prototype,{set:function(t,e,r,i){this.min.set(t,e),this.max.set(r,i)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this}}),Object.assign(Pt.prototype,{set:function(t,e){this.min.copy(t),this.max.copy(e)},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},setFromArray:function(t,e){for(var r=1/0,i=1/0,n=1/0,a=-1/0,s=-1/0,o=-1/0,h=void 0!==e?e:3,u=0,c=t.length;u<c;u+=h){var l=t[u],d=t[u+1],p=t[u+2];l<r&&(r=l),d<i&&(i=d),p<n&&(n=p),a<l&&(a=l),s<d&&(s=d),o<p&&(o=p)}return this.min.set(r,i,n),this.max.set(a,s,o),this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)},getCenter:function(t){var e=t||new vt;return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},applyMatrix4:(w=[new vt,new vt,new vt,new vt,new vt,new vt,new vt,new vt],function(t){return this.isEmpty()||(w[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),w[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),w[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),w[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),w[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),w[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),w[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),w[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(w)),this}),copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this}}),Object.assign(Lt.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromArray:(A=new Pt,P=new vt,function(t,e){var r=void 0!==e?e:3,i=this.center;A.setFromArray(t,r).getCenter(i);for(var n=0,a=0,s=t.length;a<s;a+=r){var o=t[a],h=t[a+1],u=t[a+2];P.set(o,h,u),n=Math.max(n,i.distanceToSquared(P))}return this.radius=Math.sqrt(n),this}),applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},getBoundingBox:function(t){var e=t||new Pt;return e.set(this.center,this.center),e.expandByScalar(this.radius),e},clone:function(){return(new Lt).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this}}),Object.assign(Nt.prototype,{set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,r,i){return this.normal.set(t,e,r),this.constant=i,this},normalize:function(){var t=1/this.normal.getLength();return this.normal.multiplyScalar(t),this.constant*=t,this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},coplanarPoint:function(t){return(t||new vt).copy(this.normal).multiplyScalar(-this.constant)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},applyMatrix4:(L=new vt,N=new St,function(t,e){var r=e||N.setFromMatrix4(t).inverse().transpose(),i=this.coplanarPoint(L).applyMatrix4(t),n=this.normal.applyMatrix3(r).normalize();return this.constant=-i.dot(n),this})}),Object.assign(Ct.prototype,{set:function(t,e,r,i,n,a){var s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(r),s[3].copy(i),s[4].copy(n),s[5].copy(a),this},setFromMatrix:function(t){var e=this.planes,r=t.elements,i=r[0],n=r[1],a=r[2],s=r[3],o=r[4],h=r[5],u=r[6],c=r[7],l=r[8],d=r[9],p=r[10],f=r[11],_=r[12],m=r[13],v=r[14],g=r[15];return e[0].setComponents(s-i,c-o,f-l,g-_).normalize(),e[1].setComponents(s+i,c+o,f+l,g+_).normalize(),e[2].setComponents(s+n,c+h,f+d,g+m).normalize(),e[3].setComponents(s-n,c-h,f-d,g-m).normalize(),e[4].setComponents(s-a,c-u,f-p,g-v).normalize(),e[5].setComponents(s+a,c+u,f+p,g+v).normalize(),this},intersectsSphere:function(t){for(var e=this.planes,r=t.center,i=-t.radius,n=0;n<6;n++){if(e[n].distanceToPoint(r)<i)return!1}return!0},intersectsBox:(C=new vt,R=new vt,function(t){for(var e=this.planes,r=0;r<6;r++){var i=e[r];C.x=0<i.normal.x?t.min.x:t.max.x,R.x=0<i.normal.x?t.max.x:t.min.x,C.y=0<i.normal.y?t.min.y:t.max.y,R.y=0<i.normal.y?t.max.y:t.min.y,C.z=0<i.normal.z?t.min.z:t.max.z,R.z=0<i.normal.z?t.max.z:t.min.z;var n=i.distanceToPoint(C),a=i.distanceToPoint(R);if(n<0&&a<0)return!1}return!0})}),Object.assign(Rt.prototype,{lerpColors:function(t,e,r){this.r=r*(e.r-t.r)+t.r,this.g=r*(e.g-t.g)+t.g,this.b=r*(e.b-t.b)+t.b,this.r=this.r,this.g=this.g,this.b=this.b},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,r){return this.r=t,this.g=e,this.b=r,this},setHSL:function(){function s(t,e,r){return r<0&&(r+=1),1<r&&(r-=1),r<1/6?t+6*(e-t)*r:r<.5?e:r<2/3?t+6*(e-t)*(2/3-r):t}return function(t,e,r){var i;if(t=(t%(i=1)+i)%i,e=Math.max(0,Math.min(1,e)),r=Math.max(0,Math.min(1,r)),0===e)this.r=this.g=this.b=r;else{var n=r<=.5?r*(1+e):r+e-r*e,a=2*r-n;this.r=s(a,n,t+1/3),this.g=s(a,n,t),this.b=s(a,n,t-1/3)}return this}}(),fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}}),Object.assign(Ot.prototype,{set:function(t,e,r){return this.a.copy(t),this.b.copy(e),this.c.copy(r),this}}),Ot.normal=(O=new vt,function(t,e,r,i){var n=i||new vt;n.subVectors(r,e),O.subVectors(t,e),n.cross(O);var a=n.getLengthSquared();return 0<a?n.multiplyScalar(1/Math.sqrt(a)):n.set(0,0,0)}),Ot.barycoordFromPoint=(I=new vt,U=new vt,F=new vt,function(t,e,r,i,n){I.subVectors(i,e),U.subVectors(r,e),F.subVectors(t,e);var a=I.dot(I),s=I.dot(U),o=I.dot(F),h=U.dot(U),u=U.dot(F),c=a*h-s*s,l=n||new vt;if(0===c)return l.set(-2,-1,-1);var d=1/c,p=(h*o-s*u)*d,f=(a*u-s*o)*d;return l.set(1-p-f,f,p)}),Ot.containsPoint=(D=new vt,function(t,e,r,i){var n=Ot.barycoordFromPoint(t,e,r,i,D);return 0<=n.x&&0<=n.y&&n.x+n.y<=1}),Object.assign(It.prototype,{set:function(t,e){this.posPoints=t,this.ctrlPoints=e,t.length!==e.length&&console.warn("Curve: posPoints and ctrlPoints's length not equal!"),this.segCount=t.length-1},calc:(z=new Tt,B=new Tt,G=new Tt,k=new Tt,function(t){for(var e=0;e<this.segCount;e++)if(t>=this.posPoints[e].x&&t<=this.posPoints[e+1].x){z.copy(this.posPoints[e]),G.copy(this.posPoints[e+1]),B.copy(this.ctrlPoints[e]),k.copy(this.ctrlPoints[e+1]);break}return z||z.copy(this.posPoints[this.posPoints.length-1]),B||B.copy(this.ctrlPoints[this.ctrlPoints.length-1]),G.copy(G||z),k.copy(k||B),t=(t-z.x)/(G.x-z.x),this._cubic_bezier(z.y,B.y,k.y,G.y,t)}),averageXSampler:function(t){t<2&&console.warn("Curve: sampler num less than 2!");for(var e=[],r=this.posPoints[0].x,i=this.posPoints[this.posPoints.length-1].x,n=(i-r)/(t-1),a=0,s=0;s<t;s++)a=s===t-1?i:r+s*n,e.push(a,this.calc(a));return e},_cubic_bezier:function(t,e,r,i,n){return t=this._mix(t,e,n),e=this._mix(e,r,n),r=this._mix(r,i,n),t=this._mix(t,e,n),e=this._mix(e,r,n),t=this._mix(t,e,n)},_mix:function(t,e,r){return t*(1-r)+e*r}}),Object.assign(Ut.prototype,{set:function(t,e,r){return this.radius=t,this.phi=e,this.theta=r,this},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},clone:function(){return(new this.constructor).copy(this)},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(t){return this.radius=t.getLength(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t.x,t.z),this.phi=Math.acos(Math.min(1,Math.max(-1,t.y/this.radius)))),this}}),Ft.prototype=Object.assign(Object.create(_t.prototype),{constructor:Ft,clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.textureType=t.textureType,this.border=t.border,this.pixelFormat=t.pixelFormat,this.pixelType=t.pixelType,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.anisotropy=t.anisotropy,this.generateMipmaps=t.generateMipmaps,this.encoding=t.encoding,this.flipY=t.flipY,this.version=t.version,this},dispose:function(){this.dispatchEvent({type:"dispose"}),this.version=0}}),Object.assign(Dt.prototype,{load:function(t,e,r,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t);var n=document.createElementNS("http://www.w3.org/1999/xhtml","img");return n.addEventListener("load",function(){e&&e(this)},!1),n.addEventListener("error",function(t){i&&i(t)},!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(n.crossOrigin=this.crossOrigin),n.src=t,n},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(zt.prototype,{load:function(t,r,e,i){void 0===t&&(t=""),null!=this.path&&(t=this.path+t);var n=t.match(/^data:(.*?)(;base64)?,(.*)$/);if(n){var a=n[1],s=!!n[2],o=n[3];o=window.decodeURIComponent(o),s&&(o=window.atob(o));try{var h,u=(this.responseType||"").toLowerCase();switch(u){case"arraybuffer":case"blob":h=new ArrayBuffer(o.length);for(var c=new Uint8Array(h),l=0;l<o.length;l++)c[l]=o.charCodeAt(l);"blob"===u&&(h=new Blob([h],{type:a}));break;case"document":var d=new DOMParser;h=d.parseFromString(o,a);break;case"json":h=JSON.parse(o);break;default:h=o}window.setTimeout(function(){r&&r(h)},0)}catch(t){window.setTimeout(function(){i&&i(t)},0)}}else{var p=new XMLHttpRequest;for(var f in p.open("GET",t,!0),p.addEventListener("load",function(t){var e=t.target.response;200===this.status?r&&r(e):0===this.status?(console.warn("THREE.FileLoader: HTTP Status 0 received."),r&&r(e)):i&&i(t)},!1),void 0!==e&&p.addEventListener("progress",function(t){e(t)},!1),void 0!==i&&p.addEventListener("error",function(t){i(t)},!1),void 0!==this.responseType&&(p.responseType=this.responseType),void 0!==this.withCredentials&&(p.withCredentials=this.withCredentials),p.overrideMimeType&&p.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)p.setRequestHeader(f,this.requestHeader[f]);p.send(null)}},setPath:function(t){return this.path=t,this},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}}),Object.assign(Bt.prototype,{load:function(t,e,r,i){var n=this,a=new zt;a.setResponseType("arraybuffer"),a.load(t,function(t){void 0!==e&&e(n.parse(t))},r,i)},parse:function(t){var e=0,r=1,i=2,n=3,a=9,s=10,o=11,l=48,d=4,p=0,f=1,_=2,m=3;t.length<19&&console.error("TGALoader.parse: Not enough data to contain header.");var h=new Uint8Array(t),u=0,v={id_length:h[u++],colormap_type:h[u++],image_type:h[u++],colormap_index:h[u++]|h[u++]<<8,colormap_length:h[u++]|h[u++]<<8,colormap_size:h[u++],origin:[h[u++]|h[u++]<<8,h[u++]|h[u++]<<8],width:h[u++]|h[u++]<<8,height:h[u++]|h[u++]<<8,pixel_size:h[u++],flags:h[u++]};!function(t){switch(t.image_type){case r:case a:(256<t.colormap_length||24!==t.colormap_size||1!==t.colormap_type)&&console.error("TGALoader.parse.tgaCheckHeader: Invalid type colormap data for indexed type");break;case i:case n:case s:case o:t.colormap_type&&console.error("TGALoader.parse.tgaCheckHeader: Invalid type colormap data for colormap type");break;case e:console.error("TGALoader.parse.tgaCheckHeader: No data");default:console.error('TGALoader.parse.tgaCheckHeader: Invalid type " '+t.image_type+'"')}(t.width<=0||t.height<=0)&&console.error("TGALoader.parse.tgaCheckHeader: Invalid image size"),8!==t.pixel_size&&16!==t.pixel_size&&24!==t.pixel_size&&32!==t.pixel_size&&console.error('TGALoader.parse.tgaCheckHeader: Invalid pixel size "'+t.pixel_size+'"')}(v),v.id_length+u>t.length&&console.error("TGALoader.parse: No data"),u+=v.id_length;var c=!1,g=!1,x=!1;switch(v.image_type){case a:g=c=!0;break;case r:g=!0;break;case s:c=!0;break;case i:break;case o:x=c=!0;break;case n:x=!0}var y=document.createElement("canvas");y.width=v.width,y.height=v.height;var M=y.getContext("2d"),E=M.createImageData(v.width,v.height),T=function(t,e,r,i,n){var a,s,o,h;if(s=r.pixel_size>>3,o=r.width*r.height*s,e&&(h=n.subarray(i,i+=r.colormap_length*(r.colormap_size>>3))),t){var u,c,l;a=new Uint8Array(o);for(var d=0,p=new Uint8Array(s);d<o;)if(c=1+(127&(u=n[i++])),128&u){for(l=0;l<s;++l)p[l]=n[i++];for(l=0;l<c;++l)a.set(p,d+l*s);d+=s*c}else{for(c*=s,l=0;l<c;++l)a[d+l]=n[i++];d+=c}}else a=n.subarray(i,i+=e?r.width*r.height:o);return{pixel_data:a,palettes:h}}(c,g,v,u,h);!function(t,e,r,i,n){var a,s,o,h,u,c;switch((v.flags&l)>>d){default:case _:u=e,s=a=0,h=o=1,c=r;break;case p:a=0,u=e,s=r-(o=1),c=h=-1;break;case m:a=e-1,u=o=-1,s=0,h=1,c=r;break;case f:a=e-1,s=r-1,c=h=u=o=-1}if(x)switch(v.pixel_size){case 8:!function(t,e,r,i,n,a,s,o){var h,u,c,l=0,d=v.width;for(c=e;c!==i;c+=r)for(u=n;u!==s;u+=a,l++)h=o[l],t[4*(u+d*c)+0]=h,t[4*(u+d*c)+1]=h,t[4*(u+d*c)+2]=h,t[4*(u+d*c)+3]=255}(t,s,h,c,a,o,u,i);break;case 16:!function(t,e,r,i,n,a,s,o){var h,u,c=0,l=v.width;for(u=e;u!==i;u+=r)for(h=n;h!==s;h+=a,c+=2)t[4*(h+l*u)+0]=o[c+0],t[4*(h+l*u)+1]=o[c+0],t[4*(h+l*u)+2]=o[c+0],t[4*(h+l*u)+3]=o[c+1]}(t,s,h,c,a,o,u,i);break;default:console.error("TGALoader.parse.getTgaRGBA: not support this format")}else switch(v.pixel_size){case 8:!function(t,e,r,i,n,a,s,o,h){var u,c,l,d=h,p=0,f=v.width;for(l=e;l!==i;l+=r)for(c=n;c!==s;c+=a,p++)u=o[p],t[4*(c+f*l)+3]=255,t[4*(c+f*l)+2]=d[3*u+0],t[4*(c+f*l)+1]=d[3*u+1],t[4*(c+f*l)+0]=d[3*u+2]}(t,s,h,c,a,o,u,i,n);break;case 16:!function(t,e,r,i,n,a,s,o){var h,u,c,l=0,d=v.width;for(c=e;c!==i;c+=r)for(u=n;u!==s;u+=a,l+=2)h=o[l+0]+(o[l+1]<<8),t[4*(u+d*c)+0]=(31744&h)>>7,t[4*(u+d*c)+1]=(992&h)>>2,t[4*(u+d*c)+2]=(31&h)>>3,t[4*(u+d*c)+3]=32768&h?0:255}(t,s,h,c,a,o,u,i);break;case 24:!function(t,e,r,i,n,a,s,o){var h,u,c=0,l=v.width;for(u=e;u!==i;u+=r)for(h=n;h!==s;h+=a,c+=3)t[4*(h+l*u)+3]=255,t[4*(h+l*u)+2]=o[c+0],t[4*(h+l*u)+1]=o[c+1],t[4*(h+l*u)+0]=o[c+2]}(t,s,h,c,a,o,u,i);break;case 32:!function(t,e,r,i,n,a,s,o){var h,u,c=0,l=v.width;for(u=e;u!==i;u+=r)for(h=n;h!==s;h+=a,c+=4)t[4*(h+l*u)+2]=o[c+0],t[4*(h+l*u)+1]=o[c+1],t[4*(h+l*u)+0]=o[c+2],t[4*(h+l*u)+3]=o[c+3]}(t,s,h,c,a,o,u,i);break;default:console.error("TGALoader.parse.getTgaRGBA: not support this format")}}(E.data,v.width,v.height,T.pixel_data,T.palettes);return M.putImageData(E,0,0),y}}),Gt.prototype=Object.assign(Object.create(Ft.prototype),{constructor:Gt,copy:function(t){return Ft.prototype.copy.call(this,t),this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this},updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}}),Gt.fromImage=function(t){var e=new Gt;return e.image=t,e.version++,e},Gt.fromSrc=function(t){var e=new Gt,r=0<t.search(/\.(jpg|jpeg)$/)||0===t.search(/^data\:image\/jpeg/);return(0<t.search(/\.(tga)$/)||0===t.search(/^data\:image\/tga/)?new Bt:new Dt).load(t,function(t){e.pixelFormat=r?nt.RGB:nt.RGBA,e.image=t,e.version++,e.dispatchEvent({type:"onload"})}),e},kt.prototype=Object.assign(Object.create(Ft.prototype),{constructor:kt,copy:function(t){return Ft.prototype.copy.call(this,t),this.images=t.images.slice(0),this}}),kt.fromImage=function(t){for(var e=new kt,r=e.images,i=0;i<6;i++)r[i]=t[i];return e.version++,e},kt.fromSrc=function(r){var i=new kt,n=i.images,t=r[0],a=0<t.search(/\.(jpg|jpeg)$/)||0===t.search(/^data\:image\/jpeg/),s=0<t.search(/\.(tga)$/)||0===t.search(/^data\:image\/tga/),o=0;return function t(e){if(e&&(n.push(e),o++),6<=o)return i.pixelFormat=a?nt.RGB:nt.RGBA,i.version++,void i.dispatchEvent({type:"onload"});(s?new Bt:new Dt).load(r[o],t)}(),i},Vt.prototype=Object.assign(Object.create(Gt.prototype),{constructor:Vt,isDataTexture:!0}),Ht.prototype=Object.assign(Object.create(Gt.prototype),{constructor:Ht,isDepthTexture:!0}),Object.defineProperties(jt.prototype,{rotation:{get:function(){return this.euler},set:function(t){this.euler.copyFrom(t),this.quaternion.setFromEuler(t)}}}),Object.assign(jt.prototype,{onBeforeRender:function(){},onAfterRender:function(){},add:function(t){this.children.push(t),t.parent=this},remove:function(t){var e=this.children.indexOf(t);-1!==e&&this.children.splice(e,1),t.parent=null},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r].getObjectByProperty(t,e);if(void 0!==n)return n}},updateMatrix:function(){var t=this.matrix.transform(this.position,this.scale,this.quaternion);if(this.worldMatrix.copy(t),this.parent){var e=this.parent.worldMatrix;this.worldMatrix.premultiply(e)}for(var r=this.children,i=0,n=r.length;i<n;i++)r[i].updateMatrix()},getWorldDirection:(H=new vt,j=new wt,X=new vt,function(t){var e=t||new vt;return this.worldMatrix.decompose(H,j,X),e.set(0,0,1).applyQuaternion(j),e}),lookAt:(V=new mt,function(t,e){V.lookAtRH(t,this.position,e),this.quaternion.setFromRotationMatrix(V)}),raycast:function(){},traverse:function(t){t(this);for(var e=this.children,r=0,i=e.length;r<i;r++)e[r].traverse(t)},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.type=t.type,this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.worldMatrix.copy(t.worldMatrix),this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(var r=0;r<t.children.length;r++){var i=t.children[r];this.add(i.clone())}return this}}),(Xt.prototype=Object.create(jt.prototype)).constructor=Xt,Object.assign(Wt.prototype,{updateBones:(W=new mt,function(){for(var t=0;t<this.bones.length;t++){var e=this.bones[t];W.multiplyMatrices(e.worldMatrix,e.offsetMatrix),W.toArray(this.boneMatrices,16*t)}void 0!==this.boneTexture&&this.boneTexture.version++}),getBoneByName:function(t){for(var e=0,r=this.bones.length;e<r;e++){var i=this.bones[e];if(i.name===t)return i}}}),Object.assign(Kt.prototype,{parseBinding:function(t,e){if(1<(e=e.split(".")).length){for(var r=t[e[0]],i=1;i<e.length-1;i++)r=r[e[i]];this.property=e[e.length-1],this.target=r}else this.property=e[0],this.target=t},accumulate:function(t){var e=this.buffer,r=this.valueSize,i=r,n=this.cumulativeWeight;if(0===n){for(var a=0;a!==r;++a)e[i+a]=e[a];n=t}else{var s=t/(n+=t);this._mixBufferFunction(e,i,0,s,r)}this.cumulativeWeight=n},apply:function(){var t=this.buffer,e=this.valueSize;this.cumulativeWeight;this.cumulativeWeight=0,1<this.valueSize?this.target[this.property].fromArray(t,e):this.target[this.property]=t[e]}}),Object.assign(Qt.prototype,{add:function(t){if(void 0===this._clips[t.name]){for(var e=t.tracks,r=0;r<e.length;r++){var i,n=e[r],a=n.name;this._bindings[a]?i=this._bindings[a]:(i=new Kt(n.target,n.propertyPath,n.valueTypeName,n.valueSize),this._bindings[a]=i),i.referenceCount++}this._clips[t.name]=t}else console.warn("AnimationMixer.add: already has clip: "+t.name)},remove:function(t){if(this._clips[t.name]){for(var e=t.tracks,r=0;r<e.length;r++){var i=e[r].name,n=this._bindings[i];n&&n.referenceCount--,n.referenceCount<=0&&delete this._bindings[i]}delete this._clips[t.name]}else console.warn("AnimationMixer.remove: has no clip: "+t.name)},play:function(t,e){if(void 0===this._activeClips[t]){this._activeClips[t]=void 0===e?1:e;var r=this._clips[t];if(r){r.frame=0;for(var i=r.tracks,n=0;n<i.length;n++){var a=i[n].name,s=this._bindings[a];s&&s.useCount++}}else console.warn("AnimationMixer.stop: clip "+t+" is not found.")}else console.warn("AnimationMixer.play: clip "+t+" is playing.")},stop:function(t){if(void 0!==this._activeClips[t]){delete this._activeClips[t];var e=this._clips[t];if(e)for(var r=e.tracks,i=0;i<r.length;i++){var n=r[i].name,a=this._bindings[n];a&&0<a.useCount&&a.useCount--}else console.warn("AnimationMixer.stop: clip "+t+" is not found.")}else console.warn("AnimationMixer.stop: clip "+t+" is not playing.")},update:function(t){for(var e in this._activeClips){var r=this._clips[e],i=this._activeClips[e];r.update(t,this._bindings,i)}for(var n in this._bindings)0<this._bindings[n].useCount&&this._bindings[n].apply()},setClipWeight:function(t,e){void 0!==this._activeClips[t]?this._activeClips[t]=e:console.warn("AnimationMixer.stop: clip "+t+" is not playing.")},getAllClipNames:function(){var t=[];for(var e in this._clips)t.push(e);return t}}),Object.assign(Jt.prototype,{_getLastTimeIndex:function(t){var e,r=0,i=this.times.length;for(e=0;e<i;e++)t>=this.times[e]&&(r=e);return r},getValue:function(t,e){for(var r,i,n=this._getLastTimeIndex(t),a=this.times,s=this.values,o=this.valueSize,h=a[n],u=a[n+1],c=0;c<o;c++)if(r=s[n*o+c],i=s[(n+1)*o+c],this.interpolant)if(void 0!==r&&void 0!==i){var l=(t-h)/(u-h);e[c]=r*(1-l)+i*l}else e[c]=r;else e[c]=r}}),$t.prototype=Object.assign(Object.create(Jt.prototype),{constructor:$t,valueTypeName:"bool",getValue:function(t,e){var r=this._getLastTimeIndex(t),i=this.times[r];e[0]=this.values[i]}}),te.prototype=Object.assign(Object.create(Jt.prototype),{constructor:te,valueTypeName:"color"}),Object.assign(ee.prototype,{update:function(t,e,r){this.frame+=t,this.frame>this.endFrame&&(this.loop?this.frame=this.startFrame:this.frame=this.endFrame);for(var i=0,n=this.tracks.length;i<n;i++){var a=this.tracks[i],s=e[a.name];a.getValue(this.frame,s.buffer),s.accumulate(r)}}}),re.prototype=Object.assign(Object.create(Jt.prototype),{constructor:re,valueTypeName:"number"}),ie.prototype=Object.assign(Object.create(Jt.prototype),{constructor:ie,valueTypeName:"quaternion",getValue:function(t,e){var r=this._getLastTimeIndex(t),i=this.times,n=this.values,a=i[r],s=i[r+1];if(this.interpolant)if(void 0!==s)wt.slerpFlat(e,0,n,4*r,n,4*(r+1),(t-a)/(s-a));else for(var o=0;o<4;o++)e[o]=n[4*r+o];else for(o=0;o<4;o++)e[o]=n[4*r+o]}}),ne.prototype=Object.assign(Object.create(Jt.prototype),{constructor:ne,valueTypeName:"string",getValue:function(t,e){var r=this._getLastTimeIndex(t),i=this.times[r];e[0]=this.values[i]}}),ae.prototype=Object.assign(Object.create(Jt.prototype),{constructor:ae,valueTypeName:"vector"}),Object.assign(se.prototype,{setArray:function(t){this.count=void 0!==t?t.length/this.size:0,this.array=t}}),oe.prototype=Object.assign(Object.create(_t.prototype),{constructor:oe,addAttribute:function(t,e){this.attributes[t]=e},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){delete this.attributes[t]},setIndex:function(t){Array.isArray(t)?this.index=new se(new Uint16Array(t),1):this.index=t},addGroup:function(t,e,r){this.groups.push({start:t,count:e,materialIndex:void 0!==r?r:0})},clearGroups:function(){this.groups=[]},computeBoundingBox:function(){var t=this.attributes.a_Position||this.attributes.position;if(t.isInterleavedBufferAttribute){var e=t.data;this.boundingBox.setFromArray(e.array,e.stride)}else this.boundingBox.setFromArray(t.array,t.size)},computeBoundingSphere:function(){var t=this.attributes.a_Position||this.attributes.position;if(t.isInterleavedBufferAttribute){var e=t.data;this.boundingSphere.setFromArray(e.array,e.stride)}else this.boundingSphere.setFromArray(t.array,t.size)},dispose:function(){this.dispatchEvent({type:"dispose"})}}),he.prototype=Object.assign(Object.create(oe.prototype),{constructor:he,buildGeometry:function(t,e,r,i,n,a){var L=this;t=t||1,e=e||1,r=r||1,i=Math.floor(i)||1,n=Math.floor(n)||1,a=Math.floor(a)||1;var N=[],C=[],R=[],O=[],I=0,U=0;function s(t,e,r,i,n,a,s,o,h,u,c){var l,d,p=a/h,f=s/u,_=a/2,m=s/2,v=o/2,g=h+1,x=u+1,y=0,M=0,E=new vt;for(d=0;d<x;d++){var T=d*f-m;for(l=0;l<g;l++){var b=l*p-_;E[t]=b*i,E[e]=T*n,E[r]=v,C.push(E.x,E.y,E.z),E[t]=0,E[e]=0,E[r]=0<o?1:-1,R.push(E.x,E.y,E.z),O.push(l/h),O.push(1-d/u),y+=1}}for(d=0;d<u;d++)for(l=0;l<h;l++){var S=I+l+g*d,w=I+l+g*(d+1),A=I+(l+1)+g*(d+1),P=I+(l+1)+g*d;N.push(S,w,P),N.push(w,A,P),M+=6}L.addGroup(U,M,c),U+=M,I+=y}s("z","y","x",-1,-1,r,e,t,a,n,0),s("z","y","x",1,-1,r,e,-t,a,n,1),s("x","z","y",1,1,t,r,e,i,a,2),s("x","z","y",1,-1,t,r,-e,i,a,3),s("x","y","z",1,-1,t,e,r,i,n,4),s("x","y","z",-1,-1,t,e,-r,i,n,5),this.setIndex(N),this.addAttribute("a_Position",new se(new Float32Array(C),3)),this.addAttribute("a_Normal",new se(new Float32Array(R),3)),this.addAttribute("a_Uv",new se(new Float32Array(O),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),ue.prototype=Object.assign(Object.create(oe.prototype),{constructor:ue,buildGeometry:function(v,g,x,y,M,t,E,T){var b=this;v=void 0!==v?v:1,g=void 0!==g?g:1,x=x||1,y=Math.floor(y)||8,M=Math.floor(M)||1,t=void 0!==t&&t,E=void 0!==E?E:0,T=void 0!==T?T:2*Math.PI;var S=[],w=[],A=[],P=[],L=0,N=[],C=x/2,R=0;function e(t){var e,r,i,n=new Tt,a=new vt,s=0,o=!0===t?v:g,h=!0===t?1:-1;for(r=L,e=1;e<=y;e++)w.push(0,C*h,0),A.push(0,h,0),P.push(.5,.5),L++;for(i=L,e=0;e<=y;e++){var u=e/y*T+E,c=Math.cos(u),l=Math.sin(u);a.x=o*l,a.y=C*h,a.z=o*c,w.push(a.x,a.y,a.z),A.push(0,h,0),n.x=.5*c+.5,n.y=.5*l*h+.5,P.push(n.x,n.y),L++}for(e=0;e<y;e++){var d=r+e,p=i+e;!0===t?S.push(p,p+1,d):S.push(p+1,p,d),s+=3}b.addGroup(R,s,!0===t?1:2),R+=s}!function(){var t,e,r=new vt,i=new vt,n=0,a=(g-v)/x;for(e=0;e<=M;e++){var s=[],o=e/M,h=o*(g-v)+v;for(t=0;t<=y;t++){var u=t/y,c=u*T+E,l=Math.sin(c),d=Math.cos(c);i.x=h*l,i.y=-o*x+C,i.z=h*d,w.push(i.x,i.y,i.z),r.set(l,a,d).normalize(),A.push(r.x,r.y,r.z),P.push(u,1-o),s.push(L++)}N.push(s)}for(t=0;t<y;t++)for(e=0;e<M;e++){var p=N[e][t],f=N[e+1][t],_=N[e+1][t+1],m=N[e][t+1];S.push(p,f,m),S.push(f,_,m),n+=6}b.addGroup(R,n,0),R+=n}(),!1===t&&(0<v&&e(!0),0<g&&e(!1)),this.setIndex(S),this.addAttribute("a_Position",new se(new Float32Array(w),3)),this.addAttribute("a_Normal",new se(new Float32Array(A),3)),this.addAttribute("a_Uv",new se(new Float32Array(P),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),ce.prototype=Object.assign(Object.create(se.prototype),{constructor:ce,isInstancedBufferAttribute:!0}),le.prototype=Object.assign(Object.create(oe.prototype),{constructor:le,isInstancedGeometry:!0}),Object.assign(de.prototype,{setArray:function(t){this.count=void 0!==t?t.length/this.stride:0,this.array=t}}),pe.prototype=Object.assign(Object.create(de.prototype),{constructor:pe,isInstancedInterleavedBuffer:!0}),fe.prototype.isInterleavedBufferAttribute=!0,Object.defineProperties(fe.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),_e.prototype=Object.assign(Object.create(oe.prototype),{constructor:_e,buildGeometry:function(t,e,r,i){var n,a,s=(t=t||1)/2,o=(e=e||1)/2,h=Math.floor(r)||1,u=Math.floor(i)||1,c=h+1,l=u+1,d=t/h,p=e/u,f=[],_=[],m=[],v=[];for(a=0;a<l;a++){var g=a*p-o;for(n=0;n<c;n++){var x=n*d-s;_.push(x,0,g),m.push(0,1,0),v.push(n/h),v.push(1-a/u)}}for(a=0;a<u;a++)for(n=0;n<h;n++){var y=n+c*a,M=n+c*(a+1),E=n+1+c*(a+1),T=n+1+c*a;f.push(y,M,T),f.push(M,E,T)}this.setIndex(f),this.addAttribute("a_Position",new se(new Float32Array(_),3)),this.addAttribute("a_Normal",new se(new Float32Array(m),3)),this.addAttribute("a_Uv",new se(new Float32Array(v),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),me.prototype=Object.assign(Object.create(oe.prototype),{constructor:me,buildGeometry:function(t,e,r,i,n,a,s){t=t||1,e=Math.max(3,Math.floor(e)||8),r=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI;var o,h,u=(a=void 0!==a?a:0)+(s=void 0!==s?s:Math.PI),c=0,l=[],d=new vt,p=new vt,f=[],_=[],m=[],v=[];for(h=0;h<=r;h++){var g=[],x=h/r;for(o=0;o<=e;o++){var y=o/e;d.x=-t*Math.cos(i+y*n)*Math.sin(a+x*s),d.y=t*Math.cos(a+x*s),d.z=t*Math.sin(i+y*n)*Math.sin(a+x*s),_.push(d.x,d.y,d.z),p.set(d.x,d.y,d.z).normalize(),m.push(p.x,p.y,p.z),v.push(y,1-x),g.push(c++)}l.push(g)}for(h=0;h<r;h++)for(o=0;o<e;o++){var M=l[h][o+1],E=l[h][o],T=l[h+1][o],b=l[h+1][o+1];(0!==h||0<a)&&f.push(M,E,b),(h!==r-1||u<Math.PI)&&f.push(E,T,b)}this.setIndex(f),this.addAttribute("a_Position",new se(new Float32Array(_),3)),this.addAttribute("a_Normal",new se(new Float32Array(m),3)),this.addAttribute("a_Uv",new se(new Float32Array(v),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),Object.assign(ve.prototype,{copy:function(t){return this.type=t.type,this.opacity=t.opacity,this.transparent=t.transparent,this.premultipliedAlpha=t.premultipliedAlpha,this.vertexColors=t.vertexColors,this.diffuse.copy(t.diffuse),this.diffuseMap=t.diffuseMap,this.normalMap=t.normalMap,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.envMapCombine=t.envMapCombine,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.blending=t.blending,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.alphaTest=t.alphaTest,this.side=t.side,this.shading=t.shading,this.acceptLight=t.acceptLight,this.drawMode=t.drawMode,this},clone:function(){return(new this.constructor).copy(this)}}),ge.prototype=Object.assign(Object.create(ve.prototype),{constructor:ge}),xe.prototype=Object.assign(Object.create(ve.prototype),{constructor:xe}),ye.prototype=Object.assign(Object.create(ve.prototype),{constructor:ye,copy:function(t){return ve.prototype.copy.call(this,t),this.shininess=t.shininess,this.specular.copy(t.specular),this.specularMap=t.specularMap,this}}),Me.prototype=Object.assign(Object.create(ve.prototype),{constructor:Me,copy:function(t){return ve.prototype.copy.call(this,t),this.roughness=t.roughness,this.metalness=t.metalness,this}}),Ee.prototype=Object.assign(Object.create(ve.prototype),{constructor:Ee,copy:function(t){return ve.prototype.copy.call(this,t),this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this}}),Te.prototype=Object.assign(Object.create(ve.prototype),{constructor:Te,copy:function(t){return ve.prototype.copy.call(this,t),this.lineWidth=t.lineWidth,this}}),be.prototype=Object.assign(Object.create(ve.prototype),{constructor:be,copy:function(t){return ve.prototype.copy.call(this,t),this.lineWidth=t.lineWidth,this}}),Se.prototype=Object.assign(Object.create(ve.prototype),{constructor:Se,copy:function(t){return ve.prototype.copy.call(this,t),this.lineWidth=t.lineWidth,this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}),we.prototype=Object.assign(Object.create(ve.prototype),{constructor:we,copy:function(t){return ve.prototype.copy.call(this,t),this.vertexShader=t.vertexShader,this.fragmentShader=t.fragmentShader,this}}),Ae.prototype=Object.assign(Object.create(ve.prototype),{constructor:Ae}),Pe.prototype=Object.assign(Object.create(ve.prototype),{constructor:Pe});var Le=function(t,e){var r=["","WEBKIT_","MOZ_"],i=null;for(var n in r)if(i=t.getExtension(r[n]+e))break;return i};function Ne(t){this.version=parseFloat(/^WebGL\ ([0-9])/.exec(t.getParameter(t.VERSION))[1]),this.precision="highp",this.maxPrecision=function(t,e){if("highp"===e){if(0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision)return"highp";e="mediump"}return"mediump"===e&&0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision?"mediump":"lowp"}(t,this.precision),this.maxTextures=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE),this.maxCubemapSize=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxVertexUniformVectors=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),this.floatTextures=!!Le(t,"OES_texture_float"),this.anisotropyExt=Le(t,"EXT_texture_filter_anisotropic"),this.shaderTextureLOD=Le(t,"EXT_shader_texture_lod"),this.angleInstancedArraysExt=Le(t,"ANGLE_instanced_arrays"),this.maxAnisotropy=null!==this.anisotropyExt?t.getParameter(this.anisotropyExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0;Le(t,"OES_standard_derivatives"),Le(t,"GL_OES_standard_derivatives"),Le(t,"WEBGL_depth_texture"),Le(t,"OES_element_index_uint")}function Ce(t,e,r,i){var n=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(var s=0;s<i;s++)t.texImage2D(r+s,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,n);return a}function Re(t,e){this.gl=t,this.capabilities=e,this.states={},this.currentBlending=null,this.currentBlendEquation=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendEquationAlpha=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipliedAlpha=null,this.currentCullFace=null,this.currentViewport=new bt,this.currentColorMask=null,this.currentClearColor=new bt,this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBuffers={},this.emptyTextures={},this.emptyTextures[t.TEXTURE_2D]=Ce(t,t.TEXTURE_2D,t.TEXTURE_2D,1),this.emptyTextures[t.TEXTURE_CUBE_MAP]=Ce(t,t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),this.currentFlipSided=!1,this.currentDepthMask=!0,this.currentLineWidth=null,this.currentProgram=null,this.currentStencilMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilClear=null,this.currentRenderTarget=null}function Oe(){this.properties={}}function Ie(t){return t===st.NEAREST||t===st.NEAREST_MIPMAP_LINEAR||t===st.NEAREST_MIPMAP_NEAREST?st.NEAREST:st.LINEAR}function Ue(t){return s(t.width)&&s(t.height)}function Fe(t,e){if(t.width>e||t.height>e){if(!f)return console.warn("image is too big ("+t.width+"x"+t.height+"). max size is "+e+"x"+e,t),t;var r=e/Math.max(t.width,t.height),i=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return i.width=Math.floor(t.width*r),i.height=Math.floor(t.height*r),i.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,i.width,i.height),console.warn("image is too big ("+t.width+"x"+t.height+"). Resized to "+i.width+"x"+i.height,t),i}return t}function De(t,e,r,i){this.gl=t,this.state=e,this.properties=r,this.capabilities=i}function ze(t,e,r,i){r.isInterleavedBufferAttribute&&(r=r.data);var n,a,s,o,h,u,c=e.get(r);void 0===c.buffer?function(t,e,r,i){var n=r.array,a=r.dynamic?t.DYNAMIC_DRAW:t.STATIC_DRAW,s=t.createBuffer();t.bindBuffer(i,s),t.bufferData(i,n,a);var o=t.FLOAT;n instanceof Float32Array?o=t.FLOAT:n instanceof Float64Array?console.warn("Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?o=t.UNSIGNED_SHORT:n instanceof Int16Array?o=t.SHORT:n instanceof Uint32Array?o=t.UNSIGNED_INT:n instanceof Int32Array?o=t.INT:n instanceof Int8Array?o=t.BYTE:n instanceof Uint8Array&&(o=t.UNSIGNED_BYTE),e.buffer=s,e.type=o,e.bytesPerElement=n.BYTES_PER_ELEMENT,e.version=r.version}(t,c,r,i):c.version<r.version&&(n=t,a=c.buffer,o=i,h=(s=r).array,u=s.updateRange,n.bindBuffer(o,a),!1===s.dynamic?n.bufferData(o,h,n.STATIC_DRAW):-1===u.count?n.bufferSubData(o,0,h):0===u.count?console.error("updateBuffer: dynamic BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(n.bufferSubData(o,u.offset*h.BYTES_PER_ELEMENT,h.subarray(u.offset,u.offset+u.count)),u.count=-1),c.version=r.version)}function Be(t,e,r){r.isInterleavedBufferAttribute&&(r=r.data);var i=e.get(r);i.buffer&&t.deleteBuffer(i.buffer),buffers.delete(r)}function Ge(t,e,r,i){this.gl=t,this.state=e,this.properties=r,this.capabilities=i}function ke(t,e,r){this.gl=t,this.name=r.name,this.type=r.type,this.size=r.size,this.location=t.getUniformLocation(e,this.name),this.setValue=void 0,this.set=void 0,this._generateSetValue()}function Ve(t,e,r){this.gl=t,this.name=r.name,this.type=r.type,this.size=r.size,this.location=t.getAttribLocation(e,this.name),this.count=0,this.initCount(t),this.format=t.FLOAT,this.initFormat(t)}function He(t,e,r){var i=t.createShader(e);return t.shaderSource(i,r),t.compileShader(i),t.getShaderParameter(i,t.COMPILE_STATUS)||console.warn("shader not compiled!",t.getShaderInfoLog(i),function(t){for(var e=t.split("\n"),r=0;r<e.length;r++)e[r]=r+1+": "+e[r];return e.join("\n")}(r)),i}function je(t,e,r){this.uuid=u(),this.vshaderSource=e,this.fshaderSource=r;var i,n,a,s,o=He(t,t.VERTEX_SHADER,this.vshaderSource),h=He(t,t.FRAGMENT_SHADER,this.fshaderSource);this.id=(n=o,a=h,s=(i=t).createProgram(),i.attachShader(s,n),i.attachShader(s,a),i.linkProgram(s),i.getProgramParameter(s,i.LINK_STATUS)||console.warn("program not linked!",i.getProgramInfoLog(s)),s),this.uniforms=function(t,e){for(var r={},i=t.getProgramParameter(e,t.ACTIVE_UNIFORMS),n=0;n<i;n++){var a=t.getActiveUniform(e,n),s=a.name,o=new ke(t,e,a);r[s]=o}return r}(t,this.id),this.attributes=function(t,e){for(var r={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES),n=0;n<i;n++){var a=t.getActiveAttrib(e,n),s=a.name,o=new Ve(t,e,a);r[s]=o}return r}(t,this.id),t.deleteShader(o),t.deleteShader(h)}Object.assign(Re.prototype,{setBlend:function(t,e,r,i,n,a,s,o){var h=this.gl;t!==Q.NONE?this.enable(h.BLEND):this.disable(h.BLEND),t!==Q.CUSTOM?(t===this.currentBlending&&o===this.currentPremultipliedAlpha||(t===Q.NORMAL&&(o?(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.ONE,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA)):(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.SRC_ALPHA,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA))),t===Q.ADD&&(o?(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.ONE,h.ONE,h.ONE,h.ONE)):(h.blendEquation(h.FUNC_ADD),h.blendFunc(h.SRC_ALPHA,h.ONE)))),this.currentBlendEquation=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendEquationAlpha=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null):(n=n||e,a=a||r,s=s||i,e===this.currentBlendEquation&&n===this.currentBlendEquationAlpha||(h.blendEquationSeparate(e,n),this.currentBlendEquation=e,this.currentBlendEquationAlpha=n),r===this.currentBlendSrc&&i===this.currentBlendDst&&a===this.currentBlendSrcAlpha&&s===this.currentBlendDstAlpha||(h.blendFuncSeparate(r,i,a,s),this.currentBlendSrc=r,this.currentBlendDst=i,this.currentBlendSrcAlpha=a,this.currentBlendDstAlpha=s)),this.currentBlending=t,this.currentPremultipliedAlpha=o},setFlipSided:function(t){var e=this.gl;this.currentFlipSided!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),this.currentFlipSided=t)},setCullFace:function(t){var e=this.gl;t!==tt.NONE?(this.enable(e.CULL_FACE),t!==this.currentCullFace&&(t===tt.BACK?e.cullFace(e.BACK):t===tt.FRONT?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):this.disable(e.CULL_FACE),this.currentCullFace=t},viewport:function(t,e,r,i){var n=this.currentViewport;n.x===t&&n.y===e&&n.z===r&&n.w===i||(this.gl.viewport(t,e,r,i),n.set(t,e,r,i))},colorMask:function(t){this.currentColorMask!==t&&(this.gl.colorMask(t,t,t,t),this.currentColorMask=t)},clearColor:function(t,e,r,i){var n=this.currentClearColor;n.x===t&&n.y===e&&n.z===r&&n.w===i||(this.gl.clearColor(t,e,r,i),n.set(t,e,r,i))},activeTexture:function(t){var e=this.gl;void 0===t&&(t=e.TEXTURE0+this.capabilities.maxTextures-1),this.currentTextureSlot!==t&&(e.activeTexture(t),this.currentTextureSlot=t)},bindTexture:function(t,e){var r=this.gl;null===this.currentTextureSlot&&this.activeTexture();var i=this.currentBoundTextures[this.currentTextureSlot];void 0===i&&(i={type:void 0,texture:void 0},this.currentBoundTextures[this.currentTextureSlot]=i),i.type===t&&i.texture===e||(r.bindTexture(t,e||this.emptyTextures[t]),i.type=t,i.texture=e)},bindBuffer:function(t,e){var r=this.gl;this.currentBoundBuffers[t]!==e&&(r.bindBuffer(t,e),this.currentBoundBuffers[t]=e)},enable:function(t){!0!==this.states[t]&&(this.gl.enable(t),this.states[t]=!0)},disable:function(t){!1!==this.states[t]&&(this.gl.disable(t),this.states[t]=!1)},depthMask:function(t){t!==this.currentDepthMask&&(this.gl.depthMask(t),this.currentDepthMask=t)},setLineWidth:function(t){t!==this.currentLineWidth&&(1<=this.capabilities.version&&this.gl.lineWidth(t),this.currentLineWidth=t)},setProgram:function(t){this.currentProgram!==t&&(this.gl.useProgram(t.id),this.currentProgram=t)},stencilMask:function(t){this.currentStencilMask!==t&&(this.gl.stencilMask(t),this.currentStencilMask=t)},stencilFunc:function(t,e,r){this.currentStencilFunc===t&&this.currentStencilRef===e&&this.currentStencilFuncMask===r||(this.gl.stencilFunc(t,e,r),this.currentStencilFunc=t,this.currentStencilRef=e,this.currentStencilFuncMask=r)},stencilOp:function(t,e,r){this.currentStencilFail===t&&this.currentStencilZFail===e&&this.currentStencilZPass===r||(this.gl.stencilOp(t,e,r),this.currentStencilFail=t,this.currentStencilZFail=e,this.currentStencilZPass=r)},clearStencil:function(t){this.currentStencilClear!==t&&(this.gl.clearStencil(t),this.currentStencilClear=t)}}),Object.assign(Oe.prototype,{get:function(t){var e=t.uuid,r=this.properties[e];return void 0===r&&(r={},this.properties[e]=r),r},delete:function(t){delete this.properties[t.uuid]},clear:function(){this.properties={}}}),Object.assign(De.prototype,{setTexture2D:function(t,e){var r,i=this.gl,n=this.state,a=this.properties.get(t);if(0<t.version&&a.__version!==t.version){void 0===a.__webglTexture&&(t.addEventListener("dispose",this.onTextureDispose,this),a.__webglTexture=i.createTexture()),n.activeTexture(i.TEXTURE0+e),n.bindTexture(i.TEXTURE_2D,a.__webglTexture);var s=Fe(t.image,this.capabilities.maxTextureSize);((r=t).wrapS!==ot.CLAMP_TO_EDGE||r.wrapT!==ot.CLAMP_TO_EDGE||r.minFilter!==st.NEAREST&&r.minFilter!==st.LINEAR)&&!1===Ue(s)&&(s=function(t){if(f&&(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement)){var e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.width=_(t.width),e.height=_(t.height),e.getContext("2d").drawImage(t,0,0,e.width,e.height),console.warn("image is not power of two ("+t.width+"x"+t.height+"). Resized to "+e.width+"x"+e.height,t),e}return t}(s));var o=Ue(s);i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,t.flipY),this.setTextureParameters(t,o);var h,u=t.mipmaps,c=t.pixelFormat,l=t.pixelType;if(t.isDataTexture)if(0<u.length&&o){for(var d=0,p=u.length;d<p;d++)h=u[d],i.texImage2D(i.TEXTURE_2D,d,c,h.width,h.height,t.border,c,l,h.data);t.generateMipmaps=!1}else i.texImage2D(i.TEXTURE_2D,0,c,s.width,s.height,t.border,c,l,s.data);else if(0<u.length&&o){for(d=0,p=u.length;d<p;d++)h=u[d],i.texImage2D(i.TEXTURE_2D,d,c,c,l,h);t.generateMipmaps=!1}else i.texImage2D(i.TEXTURE_2D,0,c,c,l,s);return t.generateMipmaps&&o&&i.generateMipmap(i.TEXTURE_2D),void(a.__version=t.version)}n.activeTexture(i.TEXTURE0+e),n.bindTexture(i.TEXTURE_2D,a.__webglTexture)},setTextureCube:function(t,e){var r=this.gl,i=this.state,n=this.properties.get(t);if(0<t.version&&n.__version!==t.version){void 0===n.__webglTexture&&(t.addEventListener("dispose",this.onTextureDispose,this),n.__webglTexture=r.createTexture()),i.activeTexture(r.TEXTURE0+e),i.bindTexture(r.TEXTURE_CUBE_MAP,n.__webglTexture);for(var a=[],s=0;s<6;s++)a[s]=Fe(t.images[s],this.capabilities.maxCubemapSize);var o=Ue(a[0]);r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,t.flipY),this.setTextureParameters(t,o);var h=t.pixelFormat,u=t.pixelType;for(s=0;s<6;s++)r.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,h,h,u,a[s]);return t.generateMipmaps&&o&&r.generateMipmap(r.TEXTURE_CUBE_MAP),void(n.__version=t.version)}i.activeTexture(r.TEXTURE0+e),i.bindTexture(r.TEXTURE_CUBE_MAP,n.__webglTexture)},setTextureParameters:function(t,e){var r=this.gl,i=t.textureType;e?(r.texParameteri(i,r.TEXTURE_WRAP_S,t.wrapS),r.texParameteri(i,r.TEXTURE_WRAP_T,t.wrapT),r.texParameteri(i,r.TEXTURE_MAG_FILTER,t.magFilter),r.texParameteri(i,r.TEXTURE_MIN_FILTER,t.minFilter)):(r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),t.wrapS===r.CLAMP_TO_EDGE&&t.wrapT===r.CLAMP_TO_EDGE||console.warn("Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to zen3d.TEXTURE_WRAP.CLAMP_TO_EDGE.",t),r.texParameteri(i,r.TEXTURE_MAG_FILTER,Ie(t.magFilter)),r.texParameteri(i,r.TEXTURE_MIN_FILTER,Ie(t.minFilter)),(t.minFilter!==r.NEAREST&&t.minFilter!==r.LINEAR||t.magFilter!==r.NEAREST&&t.magFilter!==r.LINEAR)&&console.warn("Texture is not power of two. Texture.minFilter and Texture.magFilter should be set to zen3d.TEXTURE_FILTER.NEAREST or zen3d.TEXTURE_FILTER.LINEAR.",t));var n=this.capabilities.anisotropyExt;n&&1<t.anisotropy&&r.texParameterf(i,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,this.capabilities.maxAnisotropy))},setRenderTarget2D:function(t){var e=this.gl,r=this.state,i=this.properties.get(t),n=this.properties.get(t.texture);if(void 0!==n.__webglTexture&&void 0!==i.__webglFramebuffer)e.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer);else{t.addEventListener("dispose",this.onRenderTargetDispose,this),n.__webglTexture=e.createTexture(),i.__webglFramebuffer=e.createFramebuffer(),e.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer),r.bindTexture(e.TEXTURE_2D,n.__webglTexture);var a=Ue(t);this.setTextureParameters(t.texture,a);var s=t.texture.pixelFormat,o=t.texture.pixelType;if(e.texImage2D(e.TEXTURE_2D,0,s,t.width,t.height,0,s,o,null),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n.__webglTexture,0),t.texture.generateMipmaps&&a&&e.generateMipmap(e.TEXTURE_2D),r.bindTexture(e.TEXTURE_2D,null),t.depthBuffer)if(t.depthTexture){var h=this.properties.get(t.depthTexture);if(h.__webglTexture=e.createTexture(),r.bindTexture(e.TEXTURE_2D,h.__webglTexture),this.setTextureParameters(t.depthTexture,a),s=t.depthTexture.pixelFormat,o=t.depthTexture.pixelType,e.texImage2D(e.TEXTURE_2D,0,s,t.width,t.height,0,s,o,null),o===at.UNSIGNED_SHORT||o===at.UNSIGNED_INT)e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,h.__webglTexture,0);else{if(o!==at.UNSIGNED_INT_24_8)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,h.__webglTexture,0)}r.bindTexture(e.TEXTURE_2D,null)}else{i.__webglDepthbuffer=e.createRenderbuffer();var u=i.__webglDepthbuffer;e.bindRenderbuffer(e.RENDERBUFFER,u),t.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,u)):(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,u)),e.bindRenderbuffer(e.RENDERBUFFER,null)}var c=e.checkFramebufferStatus(e.FRAMEBUFFER);c!==e.FRAMEBUFFER_COMPLETE&&(c===e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_ATTACHMENT"):c===e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"):c===e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_DIMENSIONS"):c===e.FRAMEBUFFER_UNSUPPORTED?console.warn("framebuffer not complete: FRAMEBUFFER_UNSUPPORTED"):console.warn("framebuffer not complete."))}},setRenderTargetCube:function(t){var e=this.gl,r=this.state,i=this.properties.get(t),n=this.properties.get(t.texture);if(void 0!==n.__webglTexture&&void 0!==i.__webglFramebuffer)e.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+t.activeCubeFace,n.__webglTexture,0);else{t.addEventListener("dispose",this.onRenderTargetDispose,this),n.__webglTexture=e.createTexture(),i.__webglFramebuffer=e.createFramebuffer(),e.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer),r.bindTexture(e.TEXTURE_CUBE_MAP,n.__webglTexture);var a=Ue(t);this.setTextureParameters(t.texture,a);for(var s=t.texture.pixelFormat,o=t.texture.pixelType,h=0;h<6;h++)e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+h,0,s,t.width,t.height,0,s,o,null);if(e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+t.activeCubeFace,n.__webglTexture,0),t.texture.generateMipmaps&&a&&e.generateMipmap(e.TEXTURE_CUBE_MAP),r.bindTexture(e.TEXTURE_CUBE_MAP,null),t.depthBuffer){i.__webglDepthbuffer=e.createRenderbuffer();var u=i.__webglDepthbuffer;e.bindRenderbuffer(e.RENDERBUFFER,u),t.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,u)):(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,u)),e.bindRenderbuffer(e.RENDERBUFFER,null)}}},updateRenderTargetMipmap:function(t){var e=this.gl,r=this.state,i=t.texture;if(i.generateMipmaps&&Ue(t)&&i.minFilter!==e.NEAREST&&i.minFilter!==e.LINEAR){var n=i.textureType,a=this.properties.get(i).__webglTexture;r.bindTexture(n,a),e.generateMipmap(n),r.bindTexture(n,null)}},onTextureDispose:function(t){var e=this.gl,r=t.target,i=this.properties.get(r);r.removeEventListener("dispose",this.onTextureDispose,this),i.__webglTexture&&e.deleteTexture(i.__webglTexture),this.properties.delete(r)},onRenderTargetDispose:function(t){var e=this.gl,r=t.target,i=this.properties.get(r);r.removeEventListener("dispose",this.onRenderTargetDispose,this),i.__webglTexture&&e.deleteTexture(textureProperties.__webglTexture),i.__webglFramebuffer&&e.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer),this.properties.delete(r)},setRenderTarget:function(t){var e=this.gl,r=this.state;if(t.texture){var i=void 0!==t.activeCubeFace;if(r.currentRenderTarget!==t)i?this.setRenderTargetCube(t):this.setRenderTarget2D(t),r.currentRenderTarget=t;else if(i){var n=this.properties.get(t.texture);e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+t.activeCubeFace,n.__webglTexture,0)}}else r.currentRenderTarget===t||(e.bindFramebuffer(e.FRAMEBUFFER,null),r.currentRenderTarget=t)}}),Object.assign(Ge.prototype,{setGeometry:function(t){var e=this.gl,r=(this.state,this.properties),i=this.properties.get(t);for(var n in i.created||(t.addEventListener("dispose",this.onGeometryDispose2,this),i.created=!0),null!==t.index&&ze(e,r,t.index,e.ELEMENT_ARRAY_BUFFER),t.attributes)ze(e,r,t.attributes[n],e.ARRAY_BUFFER)},onGeometryDispose:function(t){var e=this.gl,r=t.target;this.properties.get(r);for(var i in r.removeEventListener("dispose",this.onGeometryDispose,this),null!==r.index&&Be(e,properties,r.index),r.attributes)Be(e,properties,r.attributes[i]);this.properties.delete(r)}}),Object.assign(ke.prototype,{_generateSetValue:function(){var n=this.gl,t=this.type,a=this.location;switch(t){case ht.FLOAT:1<this.size?this.setValue=this.set=function(t){n.uniform1fv(a,t)}:this.setValue=this.set=function(t){n.uniform1f(a,t)};break;case ht.SAMPLER_2D:case ht.SAMPLER_CUBE:case ht.BOOL:case ht.INT:this.setValue=this.set=function(t){n.uniform1i(a,t)};break;case ht.FLOAT_VEC2:this.setValue=function(t,e){n.uniform2f(a,t,e)},this.set=function(t){n.uniform2fv(a,t)};break;case ht.BOOL_VEC2:case ht.INT_VEC2:this.setValue=function(t,e){n.uniform2i(a,t,e)},this.set=function(t){n.uniform2iv(a,t)};break;case ht.FLOAT_VEC3:this.setValue=function(t,e,r){n.uniform3f(a,t,e,r)},this.set=function(t){n.uniform3fv(a,t)};break;case ht.BOOL_VEC3:case ht.INT_VEC3:this.setValue=function(t,e,r){n.uniform3i(a,t,e,r)},this.set=function(t){n.uniform3iv(a,t)};break;case ht.FLOAT_VEC4:this.setValue=function(t,e,r,i){n.uniform4f(a,t,e,r,i)},this.set=function(t){n.uniform4fv(a,t)};break;case ht.BOOL_VEC4:case ht.INT_VEC4:this.setValue=function(t,e,r,i){n.uniform4i(a,t,e,r,i)},this.set=function(t){n.uniform4iv(a,t)};break;case ht.FLOAT_MAT2:this.setValue=this.set=function(t){n.uniformMatrix2fv(a,!1,t)};break;case ht.FLOAT_MAT3:this.setValue=this.set=function(t){n.uniformMatrix3fv(a,!1,t)};break;case ht.FLOAT_MAT4:this.setValue=this.set=function(t){n.uniformMatrix4fv(a,!1,t)}}}}),Object.assign(Ve.prototype,{initCount:function(t){switch(this.type){case ut.FLOAT:case ut.BYTE:case ut.UNSIGNED_BYTE:case ut.UNSIGNED_SHORT:this.count=1;break;case ut.FLOAT_VEC2:this.count=2;break;case ut.FLOAT_VEC3:this.count=3;break;case ut.FLOAT_VEC4:this.count=4}},initFormat:function(t){switch(this.type){case ut.FLOAT:case ut.FLOAT_VEC2:case ut.FLOAT_VEC3:case ut.FLOAT_VEC4:this.format=t.FLOAT;break;case ut.UNSIGNED_BYTE:this.format=t.UNSIGNED_BYTE;break;case ut.UNSIGNED_SHORT:this.format=t.UNSIGNED_SHORT;break;case ut.BYTE:this.format=t.BYTE}}}),je.prototype.dispose=function(t){t.deleteProgram(this.id)};var Xe={alphaTest_frag:"#ifdef ALPHATEST\r\n\r\n\tif ( outColor.a < ALPHATEST ) discard;\r\n\r\n#endif",ambientlight_pars_frag:"uniform vec4 u_AmbientLightColor;",aoMap_pars_frag:"#ifdef USE_AOMAP\r\n\r\n\tuniform sampler2D aoMap;\r\n\tuniform float aoMapIntensity;\r\n\r\n#endif",begin_frag:"vec4 outColor = vec4(u_Color, u_Opacity);",begin_vert:"vec3 transformed = vec3(a_Position);\r\n#if defined(USE_NORMAL) || defined(USE_ENV_MAP)\r\n    vec3 objectNormal = vec3(a_Normal);\r\n#endif",bsdfs:'// diffuse just use lambert\r\n\r\nvec4 BRDF_Diffuse_Lambert(vec4 diffuseColor) {\r\n    return RECIPROCAL_PI * diffuseColor;\r\n}\r\n\r\n// specular use Cook-Torrance microfacet model, http://ruh.li/GraphicsCookTorrance.html\r\n// About RECIPROCAL_PI: referenced by http://www.joshbarczak.com/blog/?p=272\r\n\r\nvec4 F_Schlick( const in vec4 specularColor, const in float dotLH ) {\r\n\t// Original approximation by Christophe Schlick \'94\r\n\tfloat fresnel = pow( 1.0 - dotLH, 5.0 );\r\n\r\n\t// Optimized variant (presented by Epic at SIGGRAPH \'13)\r\n\t// float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\r\n\r\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\r\n}\r\n\r\n// use blinn phong instead of phong\r\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\r\n    // ( shininess * 0.5 + 1.0 ), three.js do this, but why ???\r\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\r\n}\r\n\r\nfloat G_BlinnPhong_Implicit( ) {\r\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\r\n\treturn 0.25;\r\n}\r\n\r\nvec4 BRDF_Specular_BlinnPhong(vec4 specularColor, vec3 N, vec3 L, vec3 V, float shininess) {\r\n    vec3 H = normalize(L + V);\r\n\r\n    float dotNH = saturate(dot(N, H));\r\n    float dotLH = saturate(dot(L, H));\r\n\r\n    vec4 F = F_Schlick(specularColor, dotLH);\r\n\r\n    float G = G_BlinnPhong_Implicit( );\r\n\r\n    float D = D_BlinnPhong(shininess, dotNH);\r\n\r\n    return F * G * D;\r\n}\r\n\r\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\r\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\r\n// alpha is "roughness squared" in Disney’s reparameterization\r\nfloat D_GGX( const in float alpha, const in float dotNH ) {\r\n\r\n\tfloat a2 = pow2( alpha );\r\n\r\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\r\n\r\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\r\n\r\n}\r\n\r\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\r\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\r\n// alpha is "roughness squared" in Disney’s reparameterization\r\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\r\n\r\n\t// geometry term = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\r\n\r\n\tfloat a2 = pow2( alpha );\r\n\r\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\r\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\r\n\r\n\treturn 1.0 / ( gl * gv );\r\n\r\n}\r\n\r\n// Moving Frostbite to Physically Based Rendering 2.0 - page 12, listing 2\r\n// http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr_v2.pdf\r\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\r\n\r\n\tfloat a2 = pow2( alpha );\r\n\r\n\t// dotNL and dotNV are explicitly swapped. This is not a mistake.\r\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\r\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\r\n\r\n\treturn 0.5 / max( gv + gl, EPSILON );\r\n}\r\n\r\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\r\nvec4 BRDF_Specular_GGX(vec4 specularColor, vec3 N, vec3 L, vec3 V, float roughness) {\r\n\r\n\tfloat alpha = pow2( roughness ); // UE4\'s roughness\r\n\r\n\tvec3 H = normalize(L + V);\r\n\r\n\tfloat dotNL = saturate( dot(N, L) );\r\n\tfloat dotNV = saturate( dot(N, V) );\r\n\tfloat dotNH = saturate( dot(N, H) );\r\n\tfloat dotLH = saturate( dot(L, H) );\r\n\r\n\tvec4 F = F_Schlick( specularColor, dotLH );\r\n\r\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\r\n\r\n\tfloat D = D_GGX( alpha, dotNH );\r\n\r\n\treturn F * G * D;\r\n\r\n}\r\n\r\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\r\nvec4 BRDF_Specular_GGX_Environment( const in vec3 N, const in vec3 V, const in vec4 specularColor, const in float roughness ) {\r\n\r\n\tfloat dotNV = saturate( dot( N, V ) );\r\n\r\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\r\n\r\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\r\n\r\n\tvec4 r = roughness * c0 + c1;\r\n\r\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\r\n\r\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\r\n\r\n\treturn specularColor * AB.x + AB.y;\r\n\r\n}\r\n\r\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\r\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\r\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\r\n}\r\n\r\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\r\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\r\n}',bumpMap_pars_frag:"#ifdef USE_BUMPMAP\r\n\r\n\tuniform sampler2D bumpMap;\r\n\tuniform float bumpScale;\r\n\r\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\r\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\r\n\r\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\r\n\r\n\tvec2 dHdxy_fwd(vec2 uv) {\r\n\r\n\t\tvec2 dSTdx = dFdx( uv );\r\n\t\tvec2 dSTdy = dFdy( uv );\r\n\r\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, uv ).x;\r\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, uv + dSTdx ).x - Hll;\r\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, uv + dSTdy ).x - Hll;\r\n\r\n\t\treturn vec2( dBx, dBy );\r\n\r\n\t}\r\n\r\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy) {\r\n\r\n\t\tvec3 vSigmaX = dFdx( surf_pos );\r\n\t\tvec3 vSigmaY = dFdy( surf_pos );\r\n\t\tvec3 vN = surf_norm;\t\t// normalized\r\n\r\n\t\tvec3 R1 = cross( vSigmaY, vN );\r\n\t\tvec3 R2 = cross( vN, vSigmaX );\r\n\r\n\t\tfloat fDet = dot( vSigmaX, R1 );\r\n\r\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\r\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\r\n\r\n\t}\r\n\r\n#endif\r\n",clippingPlanes_frag:"#ifdef NUM_CLIPPING_PLANES\r\n\r\n    vec4 plane;\r\n\r\n    for ( int i = 0; i < NUM_CLIPPING_PLANES; i ++ ) {\r\n\r\n        plane = clippingPlanes[ i ];\r\n        if ( dot( -v_modelPos, plane.xyz ) > plane.w ) discard;\r\n\r\n    }\r\n\r\n#endif",clippingPlanes_pars_frag:"#ifdef NUM_CLIPPING_PLANES\r\n    uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\r\n#endif",color_frag:"#ifdef USE_VCOLOR\r\n    outColor *= v_Color;\r\n#endif",color_pars_frag:"#ifdef USE_VCOLOR\r\n    varying vec4 v_Color;\r\n#endif",color_pars_vert:"#ifdef USE_VCOLOR\r\n    attribute vec4 a_Color;\r\n    varying vec4 v_Color;\r\n#endif",color_vert:"#ifdef USE_VCOLOR\r\n    v_Color = a_Color;\r\n#endif",common_frag:"uniform mat4 u_View;\r\n\r\nuniform float u_Opacity;\r\nuniform vec3 u_Color;\r\n\r\nuniform vec3 u_CameraPosition;",common_vert:"attribute vec3 a_Position;\r\nattribute vec3 a_Normal;\r\n\r\n#include <transpose>\r\n#include <inverse>\r\n\r\nuniform mat4 u_Projection;\r\nuniform mat4 u_View;\r\nuniform mat4 u_Model;\r\n\r\nuniform vec3 u_CameraPosition;",diffuseMap_frag:"#ifdef USE_DIFFUSE_MAP\r\n    vec4 texelColor = texture2D( texture, v_Uv );\r\n    texelColor = mapTexelToLinear( texelColor );\r\n\r\n    outColor *= texelColor;\r\n#endif",diffuseMap_pars_frag:"#ifdef USE_DIFFUSE_MAP\r\n    uniform sampler2D texture;\r\n#endif",directlight_pars_frag:"struct DirectLight\r\n{\r\n    vec3 direction;\r\n    vec4 color;\r\n    float intensity;\r\n\r\n    int shadow;\r\n    float shadowBias;\r\n    float shadowRadius;\r\n    vec2 shadowMapSize;\r\n};\r\nuniform DirectLight u_Directional[USE_DIRECT_LIGHT];",emissiveMap_frag:"#ifdef USE_EMISSIVEMAP\r\n\r\n\tvec4 emissiveColor = texture2D(emissiveMap, v_Uv);\r\n\r\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\r\n\r\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\r\n\r\n#endif",emissiveMap_pars_frag:"#ifdef USE_EMISSIVEMAP\r\n\r\n\tuniform sampler2D emissiveMap;\r\n\r\n#endif",encodings_frag:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_frag:"// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\r\n\r\nvec4 LinearToLinear( in vec4 value ) {\r\n\treturn value;\r\n}\r\n\r\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\r\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\r\n}\r\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\r\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\r\n}\r\n\r\nvec4 sRGBToLinear( in vec4 value ) {\r\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\r\n}\r\nvec4 LinearTosRGB( in vec4 value ) {\r\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\r\n}\r\n\r\nvec4 RGBEToLinear( in vec4 value ) {\r\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\r\n}\r\nvec4 LinearToRGBE( in vec4 value ) {\r\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\r\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\r\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\r\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\r\n}\r\n\r\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\r\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\r\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\r\n}\r\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\r\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\r\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\r\n\tM            = ceil( M * 255.0 ) / 255.0;\r\n\treturn vec4( value.rgb / ( M * maxRange ), M );\r\n}\r\n\r\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\r\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\r\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\r\n}\r\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\r\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\r\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\r\n\tD            = min( floor( D ) / 255.0, 1.0 );\r\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\r\n}\r\n\r\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\r\n\r\n// M matrix, for encoding\r\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\r\nvec4 LinearToLogLuv( in vec4 value )  {\r\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\r\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\r\n\tvec4 vResult;\r\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\r\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\r\n\tvResult.w = fract(Le);\r\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\r\n\treturn vResult;\r\n}\r\n\r\n// Inverse M matrix, for decoding\r\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\r\nvec4 LogLuvToLinear( in vec4 value ) {\r\n\tfloat Le = value.z * 255.0 + value.w;\r\n\tvec3 Xp_Y_XYZp;\r\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\r\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\r\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\r\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\r\n\treturn vec4( max(vRGB, 0.0), 1.0 );\r\n}\r\n",end_frag:"gl_FragColor = outColor;",envMap_frag:"#ifdef USE_ENV_MAP\r\n\r\n    vec3 envDir;\r\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n        envDir = reflect(normalize(v_worldPos - u_CameraPosition), N);\r\n    #else\r\n        envDir = v_EnvPos;\r\n    #endif\r\n\r\n    vec4 envColor = textureCube(envMap, envDir);\r\n\r\n    envColor = envMapTexelToLinear( envColor );\r\n\r\n    #ifdef ENVMAP_BLENDING_MULTIPLY\r\n\t\toutColor = mix(outColor, envColor * outColor, u_EnvMap_Intensity);\r\n\t#elif defined( ENVMAP_BLENDING_MIX )\r\n\t\toutColor = mix(outColor, envColor, u_EnvMap_Intensity);\r\n\t#elif defined( ENVMAP_BLENDING_ADD )\r\n\t\toutColor += envColor * u_EnvMap_Intensity;\r\n\t#endif\r\n#endif",envMap_pars_frag:"#ifdef USE_ENV_MAP\r\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n        varying vec3 v_worldPos;\r\n    #else\r\n        varying vec3 v_EnvPos;\r\n    #endif\r\n    uniform samplerCube envMap;\r\n    uniform float u_EnvMap_Intensity;\r\n#endif",envMap_pars_vert:"#ifdef USE_ENV_MAP\r\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n        varying vec3 v_worldPos;\r\n    #else\r\n        varying vec3 v_EnvPos;\r\n    #endif\r\n#endif",envMap_vert:"#ifdef USE_ENV_MAP\r\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n        v_worldPos = (u_Model * vec4(transformed, 1.0)).xyz;\r\n    #else\r\n        v_EnvPos = reflect(normalize((u_Model * vec4(transformed, 1.0)).xyz - u_CameraPosition), (transpose(inverse(u_Model)) * vec4(objectNormal, 1.0)).xyz);\r\n    #endif\r\n#endif",fog_frag:"#ifdef USE_FOG\r\n\r\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n    #ifdef USE_EXP2_FOG\r\n\r\n        float fogFactor = whiteCompliment( exp2( - u_FogDensity * u_FogDensity * depth * depth * LOG2 ) );\r\n\r\n    #else\r\n\r\n        float fogFactor = smoothstep( u_FogNear, u_FogFar, depth );\r\n\r\n    #endif\r\n\r\n    gl_FragColor.rgb = mix( gl_FragColor.rgb, u_FogColor, fogFactor );\r\n\r\n#endif",fog_pars_frag:"#ifdef USE_FOG\r\n\r\n    uniform vec3 u_FogColor;\r\n\r\n    #ifdef USE_EXP2_FOG\r\n\r\n        uniform float u_FogDensity;\r\n\r\n    #else\r\n\r\n        uniform float u_FogNear;\r\n        uniform float u_FogFar;\r\n    #endif\r\n\r\n#endif",inverse:"mat4 inverse(mat4 m) {\r\n    float\r\n    a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\r\n    a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\r\n    a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\r\n    a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\r\n    b00 = a00 * a11 - a01 * a10,\r\n    b01 = a00 * a12 - a02 * a10,\r\n    b02 = a00 * a13 - a03 * a10,\r\n    b03 = a01 * a12 - a02 * a11,\r\n    b04 = a01 * a13 - a03 * a11,\r\n    b05 = a02 * a13 - a03 * a12,\r\n    b06 = a20 * a31 - a21 * a30,\r\n    b07 = a20 * a32 - a22 * a30,\r\n    b08 = a20 * a33 - a23 * a30,\r\n    b09 = a21 * a32 - a22 * a31,\r\n    b10 = a21 * a33 - a23 * a31,\r\n    b11 = a22 * a33 - a23 * a32,\r\n    det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n    return mat4(\r\n        a11 * b11 - a12 * b10 + a13 * b09,\r\n        a02 * b10 - a01 * b11 - a03 * b09,\r\n        a31 * b05 - a32 * b04 + a33 * b03,\r\n        a22 * b04 - a21 * b05 - a23 * b03,\r\n        a12 * b08 - a10 * b11 - a13 * b07,\r\n        a00 * b11 - a02 * b08 + a03 * b07,\r\n        a32 * b02 - a30 * b05 - a33 * b01,\r\n        a20 * b05 - a22 * b02 + a23 * b01,\r\n        a10 * b10 - a11 * b08 + a13 * b06,\r\n        a01 * b08 - a00 * b10 - a03 * b06,\r\n        a30 * b04 - a31 * b02 + a33 * b00,\r\n        a21 * b02 - a20 * b04 - a23 * b00,\r\n        a11 * b07 - a10 * b09 - a12 * b06,\r\n        a00 * b09 - a01 * b07 + a02 * b06,\r\n        a31 * b01 - a30 * b03 - a32 * b00,\r\n        a20 * b03 - a21 * b01 + a22 * b00) / det;\r\n}",light_frag:"#ifdef USE_LIGHT\r\n    vec4 light;\r\n    vec3 L;\r\n\r\n    vec4 totalReflect = vec4(0., 0., 0., 0.); // direct light\r\n    vec4 indirectIrradiance = vec4(0., 0., 0., 0.); // for indirect diffuse\r\n    vec4 indirectRadiance = vec4(0., 0., 0., 0.); // for indirect specular\r\n\r\n    #ifdef USE_PBR\r\n        vec4 diffuseColor = outColor.xyzw * (1.0 - metalnessFactor);\r\n        vec4 specularColor = mix(vec4(0.04), outColor.xyzw, metalnessFactor);\r\n        float roughness = clamp(roughnessFactor, 0.04, 1.0);\r\n    #else\r\n        vec4 diffuseColor = outColor.xyzw;\r\n        #ifdef USE_PHONG\r\n            vec4 specularColor = u_SpecularColor;\r\n            float shininess = u_Specular;\r\n        #endif\r\n    #endif\r\n\r\n    #ifdef USE_AMBIENT_LIGHT\r\n        #ifdef USE_PBR\r\n            indirectIrradiance += PI * diffuseColor * u_AmbientLightColor;\r\n        #else\r\n            indirectIrradiance += diffuseColor * u_AmbientLightColor;\r\n        #endif\r\n    #endif\r\n\r\n    // TODO light map\r\n\r\n    #ifdef USE_PBR\r\n        #ifdef USE_ENV_MAP\r\n    \t\tvec3 envDir;\r\n    \t    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n    \t        envDir = reflect(normalize(v_worldPos - u_CameraPosition), N);\r\n    \t    #else\r\n    \t        envDir = v_EnvPos;\r\n    \t    #endif\r\n            indirectIrradiance += getLightProbeIndirectIrradiance(8, envDir);\r\n            indirectRadiance += getLightProbeIndirectRadiance(GGXRoughnessToBlinnExponent(roughness), 8, envDir);\r\n    \t#endif\r\n    #endif\r\n\r\n    #if (defined(USE_PHONG) || defined(USE_PBR))\r\n        vec3 V = normalize( u_CameraPosition - v_modelPos );\r\n    #endif\r\n\r\n    #ifdef USE_DIRECT_LIGHT\r\n    for(int i = 0; i < USE_DIRECT_LIGHT; i++) {\r\n        L = -u_Directional[i].direction;\r\n        light = u_Directional[i].color * u_Directional[i].intensity;\r\n        L = normalize(L);\r\n\r\n        float dotNL = saturate( dot(N, L) );\r\n        vec4 irradiance = light * dotNL;\r\n\r\n        #ifdef USE_SHADOW\r\n            irradiance *= bool( u_Directional[i].shadow ) ? getShadow( directionalShadowMap[ i ], vDirectionalShadowCoord[ i ], u_Directional[i].shadowBias, u_Directional[i].shadowRadius, u_Directional[i].shadowMapSize ) : 1.0;\r\n        #endif\r\n\r\n        #ifdef USE_PBR\r\n            irradiance *= PI;\r\n        #endif\r\n\r\n        vec4 reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\r\n\r\n        #ifdef USE_PHONG\r\n            reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\r\n        #endif\r\n\r\n        #ifdef USE_PBR\r\n            reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\r\n        #endif\r\n\r\n        totalReflect += reflectLight;\r\n    }\r\n    #endif\r\n\r\n    #ifdef USE_POINT_LIGHT\r\n    for(int i = 0; i < USE_POINT_LIGHT; i++) {\r\n        L = u_Point[i].position - v_modelPos;\r\n        float dist = pow(clamp(1. - length(L) / u_Point[i].distance, 0.0, 1.0), u_Point[i].decay);\r\n        light = u_Point[i].color * u_Point[i].intensity * dist;\r\n        L = normalize(L);\r\n\r\n        float dotNL = saturate( dot(N, L) );\r\n        vec4 irradiance = light * dotNL;\r\n\r\n        #ifdef USE_PBR\r\n            irradiance *= PI;\r\n        #endif\r\n\r\n        #ifdef USE_SHADOW\r\n            vec3 worldV = v_modelPos - u_Point[i].position;\r\n            irradiance *= bool( u_Point[i].shadow ) ? getPointShadow( pointShadowMap[ i ], worldV, u_Point[i].shadowBias, u_Point[i].shadowRadius, u_Point[i].shadowMapSize, u_Point[i].shadowCameraNear, u_Point[i].shadowCameraFar ) : 1.0;\r\n        #endif\r\n\r\n        vec4 reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\r\n\r\n        #ifdef USE_PHONG\r\n            reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\r\n        #endif\r\n\r\n        #ifdef USE_PBR\r\n            reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\r\n        #endif\r\n\r\n        totalReflect += reflectLight;\r\n    }\r\n    #endif\r\n\r\n    #ifdef USE_SPOT_LIGHT\r\n    for(int i = 0; i < USE_SPOT_LIGHT; i++) {\r\n        L = u_Spot[i].position - v_modelPos;\r\n        float lightDistance = length(L);\r\n        L = normalize(L);\r\n        float angleCos = dot( L, -normalize(u_Spot[i].direction) );\r\n\r\n        if( all( bvec2(angleCos > u_Spot[i].coneCos, lightDistance < u_Spot[i].distance) ) ) {\r\n\r\n            float spotEffect = smoothstep( u_Spot[i].coneCos, u_Spot[i].penumbraCos, angleCos );\r\n            float dist = pow(clamp(1. - lightDistance / u_Spot[i].distance, 0.0, 1.0), u_Spot[i].decay);\r\n            light = u_Spot[i].color * u_Spot[i].intensity * dist * spotEffect;\r\n\r\n            float dotNL = saturate( dot(N, L) );\r\n            vec4 irradiance = light * dotNL;\r\n\r\n            #ifdef USE_PBR\r\n                irradiance *= PI;\r\n            #endif\r\n\r\n            #ifdef USE_SHADOW\r\n                irradiance *= bool( u_Spot[i].shadow ) ? getShadow( spotShadowMap[ i ], vSpotShadowCoord[ i ], u_Spot[i].shadowBias, u_Spot[i].shadowRadius, u_Spot[i].shadowMapSize ) : 1.0;\r\n            #endif\r\n\r\n            vec4 reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\r\n\r\n            #ifdef USE_PHONG\r\n                reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\r\n            #endif\r\n\r\n            #ifdef USE_PBR\r\n                reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\r\n            #endif\r\n\r\n            totalReflect += reflectLight;\r\n        }\r\n\r\n    }\r\n    #endif\r\n\r\n    vec4 indirectDiffuse = indirectIrradiance * BRDF_Diffuse_Lambert(diffuseColor);\r\n    vec4 indirectSpecular = vec4(0., 0., 0., 0.);\r\n\r\n    #if defined( USE_ENV_MAP ) && defined( USE_PBR )\r\n        indirectSpecular += indirectRadiance * BRDF_Specular_GGX_Environment(N, V, specularColor, roughness) * specularStrength;\r\n    #endif\r\n\r\n    #ifdef USE_AOMAP\r\n\r\n    \t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n    \tfloat ambientOcclusion = ( texture2D( aoMap, v_Uv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\r\n\r\n    \tindirectDiffuse *= ambientOcclusion;\r\n\r\n    \t#if defined( USE_ENV_MAP ) && defined( USE_PBR )\r\n\r\n    \t\tfloat dotNV = saturate( dot( N, V ) );\r\n\r\n    \t\tindirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, GGXRoughnessToBlinnExponent(roughness) );\r\n\r\n    \t#endif\r\n\r\n    #endif\r\n\r\n    outColor.xyz = totalReflect.xyz + indirectDiffuse.xyz + indirectSpecular.xyz;\r\n#endif",light_pars_frag:"#ifdef USE_AMBIENT_LIGHT\r\n    #include <ambientlight_pars_frag>\r\n#endif\r\n#ifdef USE_DIRECT_LIGHT\r\n    #include <directlight_pars_frag>\r\n#endif\r\n#ifdef USE_POINT_LIGHT\r\n    #include <pointlight_pars_frag>\r\n#endif\r\n#ifdef USE_SPOT_LIGHT\r\n    #include <spotlight_pars_frag>\r\n#endif\r\n\r\n#if defined(USE_PBR) && defined(USE_ENV_MAP)\r\n\r\n    vec4 getLightProbeIndirectIrradiance(const in int maxMIPLevel, const in vec3 envDir) {\r\n        // TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\r\n    \t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\r\n\r\n    \t#ifdef TEXTURE_LOD_EXT\r\n\r\n    \t\tvec4 envMapColor = textureCubeLodEXT( envMap, envDir, float( maxMIPLevel ) );\r\n\r\n    \t#else\r\n\r\n    \t\t// force the bias high to get the last LOD level as it is the most blurred.\r\n    \t\tvec4 envMapColor = textureCube( envMap, envDir, float( maxMIPLevel ) );\r\n\r\n    \t#endif\r\n\r\n        envMapColor = envMapTexelToLinear( envMapColor );\r\n\r\n        return PI * envMapColor * u_EnvMap_Intensity;\r\n    }\r\n\r\n    // taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\r\n    float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\r\n\r\n    \t//float envMapWidth = pow( 2.0, maxMIPLevelScalar );\r\n    \t//float desiredMIPLevel = log2( envMapWidth * sqrt( 3.0 ) ) - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\r\n\r\n    \tfloat maxMIPLevelScalar = float( maxMIPLevel );\r\n    \tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\r\n\r\n    \t// clamp to allowable LOD ranges.\r\n    \treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\r\n\r\n    }\r\n\r\n    vec4 getLightProbeIndirectRadiance(const in float blinnShininessExponent, const in int maxMIPLevel, const in vec3 envDir) {\r\n        float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\r\n\r\n        #ifdef TEXTURE_LOD_EXT\r\n\r\n    \t\tvec4 envMapColor = textureCubeLodEXT( envMap, envDir, specularMIPLevel );\r\n\r\n    \t#else\r\n\r\n    \t\tvec4 envMapColor = textureCube( envMap, envDir, specularMIPLevel );\r\n\r\n    \t#endif\r\n\r\n        envMapColor = envMapTexelToLinear( envMapColor );\r\n\r\n        return envMapColor * u_EnvMap_Intensity;\r\n    }\r\n\r\n    // ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n    float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\r\n\r\n    \treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\r\n\r\n    }\r\n\r\n#endif",normalMap_pars_frag:"#include <tbn>\r\n#include <tsn>\r\nuniform sampler2D normalMap;",normal_frag:"#ifdef USE_NORMAL\r\n    #ifdef DOUBLE_SIDED\r\n    \tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\r\n    #else\r\n    \tfloat flipNormal = 1.0;\r\n    #endif\r\n    #ifdef FLAT_SHADED\r\n        // Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\r\n    \tvec3 fdx = vec3( dFdx( v_modelPos.x ), dFdx( v_modelPos.y ), dFdx( v_modelPos.z ) );\r\n    \tvec3 fdy = vec3( dFdy( v_modelPos.x ), dFdy( v_modelPos.y ), dFdy( v_modelPos.z ) );\r\n    \tvec3 N = normalize( cross( fdx, fdy ) );\r\n    #else\r\n        vec3 N = normalize(v_Normal) * flipNormal;\r\n    #endif\r\n    #ifdef USE_NORMAL_MAP\r\n        vec3 normalMapColor = texture2D(normalMap, v_Uv).rgb;\r\n        // for now, uv coord is flip Y\r\n        mat3 tspace = tsn(N, -v_modelPos, vec2(v_Uv.x, 1.0 - v_Uv.y));\r\n        // mat3 tspace = tbn(normalize(v_Normal), v_modelPos, vec2(v_Uv.x, 1.0 - v_Uv.y));\r\n        N = normalize(tspace * (normalMapColor * 2.0 - 1.0));\r\n    #elif defined(USE_BUMPMAP)\r\n        N = perturbNormalArb(-v_modelPos, N, dHdxy_fwd(v_Uv));\r\n    #endif\r\n#endif",normal_pars_frag:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\r\n    varying vec3 v_Normal;\r\n#endif",normal_pars_vert:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\r\n    //attribute vec3 a_Normal;\r\n    varying vec3 v_Normal;\r\n#endif",normal_vert:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\r\n    v_Normal = (transpose(inverse(u_Model)) * vec4(objectNormal, 1.0)).xyz;\r\n\r\n    #ifdef FLIP_SIDED\r\n    \tv_Normal = - v_Normal;\r\n    #endif\r\n#endif",packing:"const float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\r\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\r\n\r\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\r\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\r\n\r\nconst float ShiftRight8 = 1. / 256.;\r\n\r\nvec4 packDepthToRGBA( const in float v ) {\r\n\r\n    vec4 r = vec4( fract( v * PackFactors ), v );\r\n    r.yzw -= r.xyz * ShiftRight8; // tidy overflow\r\n    return r * PackUpscale;\r\n\r\n}\r\n\r\nfloat unpackRGBAToDepth( const in vec4 v ) {\r\n\r\n    return dot( v, UnpackFactors );\r\n\r\n}",pointlight_pars_frag:"struct PointLight\r\n{\r\n    vec3 position;\r\n    vec4 color;\r\n    float intensity;\r\n    float distance;\r\n    float decay;\r\n\r\n    int shadow;\r\n    float shadowBias;\r\n    float shadowRadius;\r\n    vec2 shadowMapSize;\r\n\r\n    float shadowCameraNear;\r\n    float shadowCameraFar;\r\n};\r\nuniform PointLight u_Point[USE_POINT_LIGHT];",premultipliedAlpha_frag:"#ifdef USE_PREMULTIPLIED_ALPHA\r\n    gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;\r\n#endif",pvm_vert:"gl_Position = u_Projection * u_View * u_Model * vec4(transformed, 1.0);",shadow:"float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\r\n\r\n    return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\r\n\r\n}\r\n\r\nfloat textureCubeCompare( samplerCube depths, vec3 uv, float compare ) {\r\n\r\n    return step( compare, unpackRGBAToDepth( textureCube( depths, uv ) ) );\r\n\r\n}\r\n\r\nfloat getShadow( sampler2D shadowMap, vec4 shadowCoord, float shadowBias, float shadowRadius, vec2 shadowMapSize ) {\r\n    shadowCoord.xyz /= shadowCoord.w;\r\n\r\n    float depth = shadowCoord.z + shadowBias;\r\n\r\n    bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\r\n    bool inFrustum = all( inFrustumVec );\r\n\r\n    bvec2 frustumTestVec = bvec2( inFrustum, depth <= 1.0 );\r\n\r\n    bool frustumTest = all( frustumTestVec );\r\n\r\n    if ( frustumTest ) {\r\n        #ifdef USE_PCF_SOFT_SHADOW\r\n            // TODO x, y not equal\r\n            float texelSize = shadowRadius / shadowMapSize.x;\r\n\r\n            vec2 poissonDisk[4];\r\n            poissonDisk[0] = vec2(-0.94201624, -0.39906216);\r\n            poissonDisk[1] = vec2(0.94558609, -0.76890725);\r\n            poissonDisk[2] = vec2(-0.094184101, -0.92938870);\r\n            poissonDisk[3] = vec2(0.34495938, 0.29387760);\r\n\r\n            return texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[0] * texelSize, depth ) * 0.25 +\r\n                texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[1] * texelSize, depth ) * 0.25 +\r\n                texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[2] * texelSize, depth ) * 0.25 +\r\n                texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[3] * texelSize, depth ) * 0.25;\r\n        #else\r\n            return texture2DCompare( shadowMap, shadowCoord.xy, depth );\r\n        #endif\r\n    }\r\n\r\n    return 1.0;\r\n\r\n}\r\n\r\nfloat getPointShadow( samplerCube shadowMap, vec3 V, float shadowBias, float shadowRadius, vec2 shadowMapSize, float shadowCameraNear, float shadowCameraFar ) {\r\n\r\n    // depth = normalized distance from light to fragment position\r\n    float depth = ( length( V ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\r\n    depth += shadowBias;\r\n\r\n    #ifdef USE_PCF_SOFT_SHADOW\r\n        // TODO x, y equal force\r\n        float texelSize = shadowRadius / shadowMapSize.x;\r\n\r\n        vec3 poissonDisk[4];\r\n        poissonDisk[0] = vec3(-1.0, 1.0, -1.0);\r\n        poissonDisk[1] = vec3(1.0, -1.0, -1.0);\r\n        poissonDisk[2] = vec3(-1.0, -1.0, -1.0);\r\n        poissonDisk[3] = vec3(1.0, -1.0, 1.0);\r\n\r\n        return textureCubeCompare( shadowMap, normalize(V) + poissonDisk[0] * texelSize, depth ) * 0.25 +\r\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[1] * texelSize, depth ) * 0.25 +\r\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[2] * texelSize, depth ) * 0.25 +\r\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[3] * texelSize, depth ) * 0.25;\r\n    #else\r\n        return textureCubeCompare( shadowMap, normalize(V), depth);\r\n    #endif\r\n}",shadowMap_frag:"#ifdef USE_SHADOW\r\n    // outColor *= getShadowMask();\r\n#endif",shadowMap_pars_frag:"#ifdef USE_SHADOW\r\n\r\n    #ifdef USE_DIRECT_LIGHT\r\n\r\n        uniform sampler2D directionalShadowMap[ USE_DIRECT_LIGHT ];\r\n        varying vec4 vDirectionalShadowCoord[ USE_DIRECT_LIGHT ];\r\n\r\n    #endif\r\n\r\n    #ifdef USE_POINT_LIGHT\r\n\r\n        uniform samplerCube pointShadowMap[ USE_POINT_LIGHT ];\r\n\r\n    #endif\r\n\r\n    #ifdef USE_SPOT_LIGHT\r\n\r\n        uniform sampler2D spotShadowMap[ USE_SPOT_LIGHT ];\r\n        varying vec4 vSpotShadowCoord[ USE_SPOT_LIGHT ];\r\n\r\n    #endif\r\n\r\n    #include <packing>\r\n    #include <shadow>\r\n\r\n#endif",shadowMap_pars_vert:"#ifdef USE_SHADOW\r\n\r\n    #ifdef USE_DIRECT_LIGHT\r\n\r\n        uniform mat4 directionalShadowMatrix[ USE_DIRECT_LIGHT ];\r\n        varying vec4 vDirectionalShadowCoord[ USE_DIRECT_LIGHT ];\r\n\r\n    #endif\r\n\r\n    #ifdef USE_POINT_LIGHT\r\n\r\n        // nothing\r\n\r\n    #endif\r\n\r\n    #ifdef USE_SPOT_LIGHT\r\n\r\n        uniform mat4 spotShadowMatrix[ USE_SPOT_LIGHT ];\r\n        varying vec4 vSpotShadowCoord[ USE_SPOT_LIGHT ];\r\n\r\n    #endif\r\n\r\n#endif",shadowMap_vert:"#ifdef USE_SHADOW\r\n\r\n    vec4 worldPosition = u_Model * vec4(transformed, 1.0);\r\n\r\n    #ifdef USE_DIRECT_LIGHT\r\n\r\n        for ( int i = 0; i < USE_DIRECT_LIGHT; i ++ ) {\r\n\r\n            vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\r\n\r\n        }\r\n\r\n    #endif\r\n\r\n    #ifdef USE_POINT_LIGHT\r\n\r\n        // nothing\r\n\r\n    #endif\r\n\r\n    #ifdef USE_SPOT_LIGHT\r\n\r\n        for ( int i = 0; i < USE_SPOT_LIGHT; i ++ ) {\r\n\r\n            vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\r\n\r\n        }\r\n\r\n    #endif\r\n\r\n#endif",skinning_pars_vert:"#ifdef USE_SKINNING\r\n\r\n    attribute vec4 skinIndex;\r\n\tattribute vec4 skinWeight;\r\n\r\n    uniform mat4 bindMatrix;\r\n\tuniform mat4 bindMatrixInverse;\r\n\r\n    #ifdef BONE_TEXTURE\r\n        uniform sampler2D boneTexture;\r\n        uniform int boneTextureSize;\r\n\r\n        mat4 getBoneMatrix( const in float i ) {\r\n            float j = i * 4.0;\r\n            float x = mod( j, float( boneTextureSize ) );\r\n            float y = floor( j / float( boneTextureSize ) );\r\n\r\n            float dx = 1.0 / float( boneTextureSize );\r\n            float dy = 1.0 / float( boneTextureSize );\r\n\r\n            y = dy * ( y + 0.5 );\r\n\r\n            vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\r\n            vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\r\n            vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\r\n            vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\r\n\r\n            mat4 bone = mat4( v1, v2, v3, v4 );\r\n\r\n            return bone;\r\n        }\r\n    #else\r\n        uniform mat4 boneMatrices[MAX_BONES];\r\n\r\n        mat4 getBoneMatrix(const in float i) {\r\n            mat4 bone = boneMatrices[int(i)];\r\n            return bone;\r\n        }\r\n    #endif\r\n\r\n#endif",skinning_vert:"#ifdef USE_SKINNING\r\n\r\n    mat4 boneMatX = getBoneMatrix( skinIndex.x );\r\n    mat4 boneMatY = getBoneMatrix( skinIndex.y );\r\n    mat4 boneMatZ = getBoneMatrix( skinIndex.z );\r\n    mat4 boneMatW = getBoneMatrix( skinIndex.w );\r\n\r\n    vec4 skinVertex = bindMatrix * vec4(transformed, 1.0);\r\n\r\n    vec4 skinned = vec4( 0.0 );\r\n\tskinned += boneMatX * skinVertex * skinWeight.x;\r\n\tskinned += boneMatY * skinVertex * skinWeight.y;\r\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\r\n\tskinned += boneMatW * skinVertex * skinWeight.w;\r\n\tskinned = bindMatrixInverse * skinned;\r\n\r\n    // override\r\n    transformed = skinned.xyz / skinned.w;\r\n\r\n    #if defined(USE_NORMAL) || defined(USE_ENV_MAP)\r\n        mat4 skinMatrix = mat4( 0.0 );\r\n        skinMatrix += skinWeight.x * boneMatX;\r\n        skinMatrix += skinWeight.y * boneMatY;\r\n        skinMatrix += skinWeight.z * boneMatZ;\r\n        skinMatrix += skinWeight.w * boneMatW;\r\n        skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\r\n\r\n        // override\r\n        objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\r\n    #endif\r\n\r\n#endif",specularMap_frag:"float specularStrength;\r\n\r\n#ifdef USE_SPECULARMAP\r\n\r\n\tvec4 texelSpecular = texture2D( specularMap, v_Uv );\r\n\tspecularStrength = texelSpecular.r;\r\n\r\n#else\r\n\r\n\tspecularStrength = 1.0;\r\n\r\n#endif",specularMap_pars_frag:"#ifdef USE_SPECULARMAP\r\n\r\n\tuniform sampler2D specularMap;\r\n\r\n#endif",spotlight_pars_frag:"struct SpotLight\r\n{\r\n    vec3 position;\r\n    vec4 color;\r\n    float intensity;\r\n    float distance;\r\n    float decay;\r\n    float coneCos;\r\n    float penumbraCos;\r\n    vec3 direction;\r\n\r\n    int shadow;\r\n    float shadowBias;\r\n    float shadowRadius;\r\n    vec2 shadowMapSize;\r\n};\r\nuniform SpotLight u_Spot[USE_SPOT_LIGHT];",tbn:"mat3 tbn(vec3 N, vec3 p, vec2 uv) {\r\n    vec3 dp1 = dFdx(p.xyz);\r\n    vec3 dp2 = dFdy(p.xyz);\r\n    vec2 duv1 = dFdx(uv.st);\r\n    vec2 duv2 = dFdy(uv.st);\r\n    vec3 dp2perp = cross(dp2, N);\r\n    vec3 dp1perp = cross(N, dp1);\r\n    vec3 T = dp2perp * duv1.x + dp1perp * duv2.x;\r\n    vec3 B = dp2perp * duv1.y + dp1perp * duv2.y;\r\n    float invmax = 1.0 / sqrt(max(dot(T,T), dot(B,B)));\r\n    return mat3(T * invmax, B * invmax, N);\r\n}",transpose:"mat4 transpose(mat4 inMatrix) {\r\n    vec4 i0 = inMatrix[0];\r\n    vec4 i1 = inMatrix[1];\r\n    vec4 i2 = inMatrix[2];\r\n    vec4 i3 = inMatrix[3];\r\n    mat4 outMatrix = mat4(\r\n        vec4(i0.x, i1.x, i2.x, i3.x),\r\n        vec4(i0.y, i1.y, i2.y, i3.y),\r\n        vec4(i0.z, i1.z, i2.z, i3.z),\r\n        vec4(i0.w, i1.w, i2.w, i3.w)\r\n    );\r\n    return outMatrix;\r\n}",tsn:"mat3 tsn(vec3 N, vec3 V, vec2 uv) {\r\n\r\n    vec3 q0 = dFdx( V.xyz );\r\n    vec3 q1 = dFdy( V.xyz );\r\n    vec2 st0 = dFdx( uv.st );\r\n    vec2 st1 = dFdy( uv.st );\r\n\r\n    vec3 S = normalize( q0 * st1.t - q1 * st0.t );\r\n    vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\r\n    // vec3 N = normalize( N );\r\n\r\n    mat3 tsn = mat3( S, T, N );\r\n    return tsn;\r\n}",uv_pars_frag:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\r\n    varying vec2 v_Uv;\r\n#endif\r\n\r\n#ifdef USE_AOMAP\r\n    varying vec2 v_Uv2;\r\n#endif",uv_pars_vert:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\r\n    attribute vec2 a_Uv;\r\n    varying vec2 v_Uv;\r\n    uniform mat3 uvTransform;\r\n#endif\r\n\r\n#ifdef USE_AOMAP\r\n    attribute vec2 a_Uv2;\r\n    varying vec2 v_Uv2;\r\n#endif\r\n",uv_vert:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\r\n    v_Uv = (uvTransform * vec3(a_Uv, 1)).xy;\r\n#endif\r\n\r\n#ifdef USE_AOMAP\r\n    v_Uv2 = a_Uv2;\r\n#endif",viewModelPos_pars_frag:"#if defined(USE_POINT_LIGHT) || defined(USE_SPOT_LIGHT) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR) || defined(NUM_CLIPPING_PLANES) \r\n    varying vec3 v_modelPos;\r\n#endif",viewModelPos_pars_vert:"#if defined(USE_POINT_LIGHT) || defined(USE_SPOT_LIGHT) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR)|| defined(NUM_CLIPPING_PLANES)\r\n    varying vec3 v_modelPos;\r\n#endif",viewModelPos_vert:"#if defined(USE_POINT_LIGHT) || defined(USE_SPOT_LIGHT) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR) || defined(NUM_CLIPPING_PLANES)\r\n    v_modelPos = (u_Model * vec4(transformed, 1.0)).xyz;\r\n#endif"},We={basic_frag:"#include <common_frag>\r\n#include <uv_pars_frag>\r\n#include <color_pars_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <envMap_pars_frag>\r\n#include <aoMap_pars_frag>\r\n#include <fog_pars_frag>\r\nvoid main() {\r\n    #include <begin_frag>\r\n    #include <color_frag>\r\n    #include <diffuseMap_frag>\r\n    #include <alphaTest_frag>\r\n    #include <envMap_frag>\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",basic_vert:"#include <common_vert>\r\n#include <uv_pars_vert>\r\n#include <color_pars_vert>\r\n#include <envMap_pars_vert>\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    #include <uv_vert>\r\n    #include <color_vert>\r\n    #include <envMap_vert>\r\n}",canvas2d_frag:"#include <common_frag>\r\nvarying vec2 v_Uv;\r\nuniform sampler2D spriteTexture;\r\nvoid main() {\r\n    #include <begin_frag>\r\n    outColor *= texture2D(spriteTexture, v_Uv);\r\n    #include <end_frag>\r\n    #include <premultipliedAlpha_frag>\r\n}",canvas2d_vert:"#include <common_vert>\r\nattribute vec2 a_Uv;\r\nvarying vec2 v_Uv;\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <pvm_vert>\r\n    v_Uv = a_Uv;\r\n}",depth_frag:"#include <common_frag>\r\n#include <diffuseMap_pars_frag>\r\n\r\n#include <uv_pars_frag>\r\n\r\n#include <packing>\r\n\r\nvoid main() {\r\n    #if defined(USE_DIFFUSE_MAP) && defined(ALPHATEST)\r\n        vec4 texelColor = texture2D( texture, v_Uv );\r\n\r\n        float alpha = texelColor.a * u_Opacity;\r\n        if(alpha < ALPHATEST) discard;\r\n    #endif\r\n    \r\n    #ifdef DEPTH_PACKING_RGBA\r\n        gl_FragColor = packDepthToRGBA(gl_FragCoord.z);\r\n    #else\r\n        gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), u_Opacity );\r\n    #endif\r\n}",depth_vert:"#include <common_vert>\r\n#include <skinning_pars_vert>\r\n#include <uv_pars_vert>\r\nvoid main() {\r\n    #include <uv_vert>\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n}",distance_frag:"#include <common_frag>\r\nuniform float nearDistance;\r\nuniform float farDistance;\r\nvarying vec3 v_ModelPos;\r\n#include <packing>\r\nvoid main() {\r\n    float dist = length( v_ModelPos - u_CameraPosition );\r\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\r\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\r\n\r\n    gl_FragColor = packDepthToRGBA(dist);\r\n}",distance_vert:"#include <common_vert>\r\nvarying vec3 v_ModelPos;\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    v_ModelPos = (u_Model * vec4(transformed, 1.0)).xyz;\r\n}",lambert_frag:"#include <common_frag>\r\n\r\nuniform vec3 emissive;\r\n\r\n#include <uv_pars_frag>\r\n#include <color_pars_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <normalMap_pars_frag>\r\n#include <bumpMap_pars_frag>\r\n#include <light_pars_frag>\r\n#include <normal_pars_frag>\r\n#include <viewModelPos_pars_frag>\r\n#include <bsdfs>\r\n#include <envMap_pars_frag>\r\n#include <aoMap_pars_frag>\r\n#include <shadowMap_pars_frag>\r\n#include <fog_pars_frag>\r\n#include <emissiveMap_pars_frag>\r\n#include <clippingPlanes_pars_frag>\r\nvoid main() {\r\n    #include <clippingPlanes_frag>\r\n    #include <begin_frag>\r\n    #include <color_frag>\r\n    #include <diffuseMap_frag>\r\n    #include <alphaTest_frag>\r\n    #include <normal_frag>\r\n    #include <light_frag>\r\n    #include <envMap_frag>\r\n    #include <shadowMap_frag>\r\n\r\n    vec3 totalEmissiveRadiance = emissive;\r\n    #include <emissiveMap_frag>\r\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\r\n\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",lambert_vert:"#include <common_vert>\r\n#include <normal_pars_vert>\r\n#include <uv_pars_vert>\r\n#include <color_pars_vert>\r\n#include <viewModelPos_pars_vert>\r\n#include <envMap_pars_vert>\r\n#include <shadowMap_pars_vert>\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    #include <normal_vert>\r\n    #include <uv_vert>\r\n    #include <color_vert>\r\n    #include <viewModelPos_vert>\r\n    #include <envMap_vert>\r\n    #include <shadowMap_vert>\r\n}",linedashed_frag:"#include <common_frag>\r\n#include <fog_pars_frag>\r\n\r\nuniform float dashSize;\r\nuniform float totalSize;\r\n\r\nvarying float vLineDistance;\r\n\r\nvoid main() {\r\n\r\n    if ( mod( vLineDistance, totalSize ) > dashSize ) {\r\n\t\tdiscard;\r\n\t}\r\n\r\n    #include <begin_frag>\r\n    #include <end_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",linedashed_vert:"#include <common_vert>\r\n\r\nuniform float scale;\r\nattribute float lineDistance;\r\n\r\nvarying float vLineDistance;\r\n\r\nvoid main() {\r\n    vLineDistance = scale * lineDistance;\r\n\r\n    vec3 transformed = vec3(a_Position);\r\n\r\n    #include <pvm_vert>\r\n}",normaldepth_frag:"#include <common_frag>\r\n#include <diffuseMap_pars_frag>\r\n\r\n#include <uv_pars_frag>\r\n\r\n#define USE_NORMAL\r\n\r\n#include <packing>\r\n#include <normal_pars_frag>\r\n\r\nvoid main() {\r\n    #if defined(USE_DIFFUSE_MAP) && defined(ALPHATEST)\r\n        vec4 texelColor = texture2D( texture, v_Uv );\r\n\r\n        float alpha = texelColor.a * u_Opacity;\r\n        if(alpha < ALPHATEST) discard;\r\n    #endif\r\n    vec4 packedNormalDepth;\r\n    packedNormalDepth.xyz = normalize(v_Normal) * 0.5 + 0.5;\r\n    packedNormalDepth.w = gl_FragCoord.z;\r\n    gl_FragColor = packedNormalDepth;\r\n}",normaldepth_vert:"#include <common_vert>\r\n\r\n#define USE_NORMAL\r\n\r\n#include <skinning_pars_vert>\r\n#include <normal_pars_vert>\r\n#include <uv_pars_vert>\r\nvoid main() {\r\n    #include <uv_vert>\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <normal_vert>\r\n    #include <pvm_vert>\r\n}",pbr_frag:"#include <common_frag>\r\n\r\n// if no light> this will not active\r\nuniform float u_Metalness;\r\n#ifdef USE_METALNESSMAP\r\n\tuniform sampler2D metalnessMap;\r\n#endif\r\n\r\nuniform float u_Roughness;\r\n#ifdef USE_ROUGHNESSMAP\r\n\tuniform sampler2D roughnessMap;\r\n#endif\r\n\r\nuniform vec3 emissive;\r\n\r\n#include <uv_pars_frag>\r\n#include <color_pars_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <normalMap_pars_frag>\r\n#include <bumpMap_pars_frag>\r\n#include <envMap_pars_frag>\r\n#include <aoMap_pars_frag>\r\n#include <light_pars_frag>\r\n#include <normal_pars_frag>\r\n#include <viewModelPos_pars_frag>\r\n#include <bsdfs>\r\n#include <shadowMap_pars_frag>\r\n#include <fog_pars_frag>\r\n#include <emissiveMap_pars_frag>\r\n#include <clippingPlanes_pars_frag>\r\nvoid main() {\r\n    #include <clippingPlanes_frag>\r\n    #include <begin_frag>\r\n    #include <color_frag>\r\n    #include <diffuseMap_frag>\r\n    #include <alphaTest_frag>\r\n    #include <normal_frag>\r\n    #include <specularMap_frag>\r\n\r\n    float roughnessFactor = u_Roughness;\r\n    #ifdef USE_ROUGHNESSMAP\r\n    \tvec4 texelRoughness = texture2D( roughnessMap, v_Uv );\r\n    \t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n    \troughnessFactor *= texelRoughness.g;\r\n    #endif\r\n\r\n    float metalnessFactor = u_Metalness;\r\n    #ifdef USE_METALNESSMAP\r\n    \tvec4 texelMetalness = texture2D( metalnessMap, v_Uv );\r\n    \t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n    \tmetalnessFactor *= texelMetalness.b;\r\n    #endif\r\n\r\n    #include <light_frag>\r\n    #include <shadowMap_frag>\r\n\r\n    vec3 totalEmissiveRadiance = emissive;\r\n    #include <emissiveMap_frag>\r\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\r\n\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",pbr_vert:"#include <common_vert>\r\n#include <normal_pars_vert>\r\n#include <uv_pars_vert>\r\n#include <color_pars_vert>\r\n#include <viewModelPos_pars_vert>\r\n#include <envMap_pars_vert>\r\n#include <shadowMap_pars_vert>\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    #include <normal_vert>\r\n    #include <uv_vert>\r\n    #include <color_vert>\r\n    #include <viewModelPos_vert>\r\n    #include <envMap_vert>\r\n    #include <shadowMap_vert>\r\n}",phong_frag:"#include <common_frag>\r\n\r\n// if no light> this will not active\r\nuniform float u_Specular;\r\nuniform vec4 u_SpecularColor;\r\n#include <specularMap_pars_frag>\r\n\r\nuniform vec3 emissive;\r\n\r\n#include <uv_pars_frag>\r\n#include <color_pars_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <normalMap_pars_frag>\r\n#include <bumpMap_pars_frag>\r\n#include <light_pars_frag>\r\n#include <normal_pars_frag>\r\n#include <viewModelPos_pars_frag>\r\n#include <bsdfs>\r\n#include <envMap_pars_frag>\r\n#include <aoMap_pars_frag>\r\n#include <shadowMap_pars_frag>\r\n#include <fog_pars_frag>\r\n#include <emissiveMap_pars_frag>\r\n#include <clippingPlanes_pars_frag>\r\nvoid main() {\r\n    #include <clippingPlanes_frag>\r\n    #include <begin_frag>\r\n    #include <color_frag>\r\n    #include <diffuseMap_frag>\r\n    #include <alphaTest_frag>\r\n    #include <normal_frag>\r\n    #include <specularMap_frag>\r\n    #include <light_frag>\r\n    #include <envMap_frag>\r\n    #include <shadowMap_frag>\r\n\r\n    vec3 totalEmissiveRadiance = emissive;\r\n    #include <emissiveMap_frag>\r\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\r\n\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",phong_vert:"#include <common_vert>\r\n#include <normal_pars_vert>\r\n#include <uv_pars_vert>\r\n#include <color_pars_vert>\r\n#include <viewModelPos_pars_vert>\r\n#include <envMap_pars_vert>\r\n#include <shadowMap_pars_vert>\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    #include <normal_vert>\r\n    #include <uv_vert>\r\n    #include <color_vert>\r\n    #include <viewModelPos_vert>\r\n    #include <envMap_vert>\r\n    #include <shadowMap_vert>\r\n}",point_frag:"#include <common_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <fog_pars_frag>\r\nvoid main() {\r\n    #include <begin_frag>\r\n    #ifdef USE_DIFFUSE_MAP\r\n        outColor *= texture2D(texture, vec2(gl_PointCoord.x, 1.0 - gl_PointCoord.y));\r\n    #endif\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",point_vert:"#include <common_vert>\r\nuniform float u_PointSize;\r\nuniform float u_PointScale;\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <pvm_vert>\r\n    vec4 mvPosition = u_View * u_Model * vec4(transformed, 1.0);\r\n    #ifdef USE_SIZEATTENUATION\r\n        gl_PointSize = u_PointSize * ( u_PointScale / - mvPosition.z );\r\n    #else\r\n        gl_PointSize = u_PointSize;\r\n    #endif\r\n}"},Ye={};function qe(t,e){var r;return t?t.encoding&&(r=t.encoding):r=dt.LINEAR,r===dt.LINEAR&&e&&(r=dt.GAMMA),r}function Ze(t){switch(t){case dt.LINEAR:return["Linear","( value )"];case dt.SRGB:return["sRGB","( value )"];case dt.RGBE:return["RGBE","( value )"];case dt.RGBM7:return["RGBM","( value, 7.0 )"];case dt.RGBM16:return["RGBM","( value, 16.0 )"];case dt.RGBD:return["RGBD","( value, 256.0 )"];case dt.GAMMA:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:console.error("unsupported encoding: "+t)}}function Ke(t,e){var r=Ze(e);return"vec4 "+t+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function Qe(t,e,r){var i,n,a,s=["precision "+e.precision+" float;","precision "+e.precision+" int;","#define SHADER_NAME "+e.materialType,r,0<e.pointLightNum?"#define USE_POINT_LIGHT "+e.pointLightNum:"",0<e.spotLightNum?"#define USE_SPOT_LIGHT "+e.spotLightNum:"",0<e.directLightNum?"#define USE_DIRECT_LIGHT "+e.directLightNum:"",0<e.ambientLightNum?"#define USE_AMBIENT_LIGHT "+e.ambientLightNum:"",0<e.pointLightNum||0<e.directLightNum||0<e.ambientLightNum||0<e.spotLightNum?"#define USE_LIGHT":"",0<e.pointLightNum||0<e.directLightNum||0<e.spotLightNum?"#define USE_NORMAL":"",(0<e.pointLightNum||0<e.directLightNum||0<e.spotLightNum)&&e.useNormalMap?"#define USE_NORMAL_MAP":"",(0<e.pointLightNum||0<e.directLightNum||0<e.spotLightNum)&&e.useBumpMap?"#define USE_BUMPMAP":"",(0<e.pointLightNum||0<e.directLightNum||0<e.spotLightNum)&&e.useSpecularMap?"#define USE_SPECULARMAP":"",e.useEmissiveMap?"#define USE_EMISSIVEMAP":"",e.useShadow?"#define USE_SHADOW":"",e.flatShading?"#define FLAT_SHADED":"",e.materialType==Z.LAMBERT?"#define USE_LAMBERT":"",e.materialType==Z.PHONG?"#define USE_PHONG":"",e.materialType==Z.PBR?"#define USE_PBR":"",e.flipSided?"#define FLIP_SIDED":"",0<e.numClippingPlanes?"#define NUM_CLIPPING_PLANES "+e.numClippingPlanes:"",e.useDiffuseMap?"#define USE_DIFFUSE_MAP":"",e.useEnvMap?"#define USE_ENV_MAP":"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.useAOMap?"#define USE_AOMAP":"",e.useVertexColors?"#define USE_VCOLOR":"",e.useSkinning?"#define USE_SKINNING":"",0<e.bonesNum?"#define MAX_BONES "+e.bonesNum:"",e.useVertexTexture?"#define BONE_TEXTURE":""].join("\n"),o=["#extension GL_OES_standard_derivatives : enable",e.useShaderTextureLOD&&e.useEnvMap?"#extension GL_EXT_shader_texture_lod : enable":"","precision "+e.precision+" float;","precision "+e.precision+" int;","#define SHADER_NAME "+e.materialType,"#define PI 3.14159265359","#define EPSILON 1e-6","float pow2( const in float x ) { return x*x; }","#define LOG2 1.442695","#define RECIPROCAL_PI 0.31830988618","#define saturate(a) clamp( a, 0.0, 1.0 )","#define whiteCompliment(a) ( 1.0 - saturate( a ) )",r,e.useRoughnessMap?"#define USE_ROUGHNESSMAP":"",e.useMetalnessMap?"#define USE_METALNESSMAP":"",0<e.pointLightNum?"#define USE_POINT_LIGHT "+e.pointLightNum:"",0<e.spotLightNum?"#define USE_SPOT_LIGHT "+e.spotLightNum:"",0<e.directLightNum?"#define USE_DIRECT_LIGHT "+e.directLightNum:"",0<e.ambientLightNum?"#define USE_AMBIENT_LIGHT "+e.ambientLightNum:"",0<e.pointLightNum||0<e.directLightNum||0<e.ambientLightNum||0<e.spotLightNum?"#define USE_LIGHT":"",0<e.pointLightNum||0<e.directLightNum||0<e.spotLightNum?"#define USE_NORMAL":"",(0<e.pointLightNum||0<e.directLightNum||0<e.spotLightNum)&&e.useNormalMap?"#define USE_NORMAL_MAP":"",(0<e.pointLightNum||0<e.directLightNum||0<e.spotLightNum)&&e.useBumpMap?"#define USE_BUMPMAP":"",(0<e.pointLightNum||0<e.directLightNum||0<e.spotLightNum)&&e.useSpecularMap?"#define USE_SPECULARMAP":"",e.useEmissiveMap?"#define USE_EMISSIVEMAP":"",e.useShadow?"#define USE_SHADOW":"",e.usePCFSoftShadow?"#define USE_PCF_SOFT_SHADOW":"",e.flatShading?"#define FLAT_SHADED":"",e.materialType==Z.LAMBERT?"#define USE_LAMBERT":"",e.materialType==Z.PHONG?"#define USE_PHONG":"",e.materialType==Z.PBR?"#define USE_PBR":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.envMap&&e.useShaderTextureLOD?"#define TEXTURE_LOD_EXT":"",0<e.numClippingPlanes?"#define NUM_CLIPPING_PLANES "+e.numClippingPlanes:"",e.useDiffuseMap?"#define USE_DIFFUSE_MAP":"",e.useEnvMap?"#define USE_ENV_MAP":"",e.useAOMap?"#define USE_AOMAP":"",e.useVertexColors?"#define USE_VCOLOR":"",e.premultipliedAlpha?"#define USE_PREMULTIPLIED_ALPHA":"",e.fog?"#define USE_FOG":"",e.fogExp2?"#define USE_EXP2_FOG":"",e.alphaTest?"#define ALPHATEST "+e.alphaTest:"",e.useEnvMap?"#define "+e.envMapCombine:"","#define GAMMA_FACTOR "+e.gammaFactor,e.diffuseMapEncoding||e.envMapEncoding||e.emissiveMapEncoding||e.outputEncoding?Xe.encodings_pars_frag:"",e.diffuseMapEncoding?Ke("mapTexelToLinear",e.diffuseMapEncoding):"",e.envMapEncoding?Ke("envMapTexelToLinear",e.envMapEncoding):"",e.emissiveMapEncoding?Ke("emissiveMapTexelToLinear",e.emissiveMapEncoding):"",e.outputEncoding?(i="linearToOutputTexel",n=e.outputEncoding,a=Ze(n),"vec4 "+i+"( vec4 value ) { return LinearTo"+a[0]+a[1]+"; }"):"",e.packDepthToRGBA?"#define DEPTH_PACKING_RGBA":""].join("\n"),h=We[e.materialType+"_vert"]||e.vertexShader||We.basic_vert,u=We[e.materialType+"_frag"]||e.fragmentShader||We.basic_frag,c=[s,h].join("\n"),l=[o,u].join("\n");return new je(t,c=Je(c),l=Je(l))}var Je=function(t){return t.replace(/#include +<([\w\d.]+)>/g,function(t,e){var r=Xe[e];if(void 0===r)throw new Error("Can not resolve #include <"+e+">");return Je(r)})};function $e(t,e,r,i,n){var a,s=t.gl,o=function(t,e,r,i,n,a,s){var o={};o.materialType=r.type;var h=t.capabilities;o.precision=h.maxPrecision,o.useShaderTextureLOD=!!h.shaderTextureLOD,o.useDiffuseMap=!!r.diffuseMap,o.useNormalMap=!!r.normalMap,o.useBumpMap=!!r.bumpMap,o.useSpecularMap=!!r.specularMap,o.useEnvMap=!!r.envMap,o.envMapCombine=r.envMapCombine,o.useEmissiveMap=!!r.emissiveMap,o.useRoughnessMap=!!r.roughnessMap,o.useMetalnessMap=!!r.metalnessMap,o.useAOMap=!!r.aoMap,o.ambientLightNum=n?n.ambientsNum:0,o.directLightNum=n?n.directsNum:0,o.pointLightNum=n?n.pointsNum:0,o.spotLightNum=n?n.spotsNum:0,o.useShadow=i.receiveShadow,o.usePCFSoftShadow=i.shadowType===lt.PCF_SOFT;var u=t.state.currentRenderTarget;o.gammaFactor=e.gammaFactor,o.outputEncoding=qe(u.texture||null,e.gammaOutput),o.diffuseMapEncoding=qe(r.diffuseMap,e.gammaInput),o.envMapEncoding=qe(r.envMap,e.gammaInput),o.emissiveMapEncoding=qe(r.emissiveMap,e.gammaInput),o.alphaTest=r.alphaTest,o.premultipliedAlpha=r.premultipliedAlpha,o.useVertexColors=r.vertexColors,o.numClippingPlanes=s?s.length:0,o.flatShading=r.shading===rt.FLAT_SHADING,o.fog=!!a,o.fogExp2=!!a&&a.fogType===K.EXP2,o.sizeAttenuation=r.sizeAttenuation,o.doubleSided=r.side===et.DOUBLE,o.flipSided=r.side===et.BACK,o.packDepthToRGBA=r.packToRGBA;var c=i.type===Y.SKINNED_MESH&&i.skeleton,l=h.maxVertexUniformVectors,d=0<h.maxVertexTextures&&h.floatTextures,p=0;return d?p=1024:l<16*(p=i.skeleton?i.skeleton.bones.length:0)&&(console.warn("Program: too many bones ("+p+"), current cpu only support "+Math.floor(l/16)+" bones!!"),p=Math.floor(l/16)),o.useSkinning=c,o.bonesNum=p,o.useVertexTexture=d,r.type===Z.SHADER&&(o.vertexShader=r.vertexShader,o.fragmentShader=r.fragmentShader),o}(t,e,r=r||i.material,i,n&&r.acceptLight?n.lights:null,n?n.fog:null,n?n.clippingPlanes:null),h=function(t,e){var r="";for(var i in t)r+=t[i]+"_";if(void 0!==e.defines)for(var n in e.defines)r+=n+"_"+e.defines[n]+"_";return r}(o,r),u=Ye;if(u[h])a=u[h];else{var c="";void 0!==r.defines&&(c=function(t){var e=[];for(var r in t){var i=t[r];!1!==i&&e.push("#define "+r+" "+i)}return e.join("\n")}(r.defines)),a=Qe(s,o,c),u[h]=a}return a}var tr=new vt,er=new bt;function rr(t){return t.material}function ir(t){return!0}function nr(){}var ar,sr,or=(sr=new Nt,function(t,e){(!ar||ar.length<4*t.length)&&(ar=new Float32Array(4*t.length));for(var r=0;r<t.length;r++)sr.copy(t[r]),ar[4*r+0]=sr.normal.x,ar[4*r+1]=sr.normal.y,ar[4*r+2]=sr.normal.z,ar[4*r+3]=sr.constant;return ar});function hr(t){this.gl=t;var e=new Oe;this.properties=e;var r=new Ne(t),i=new Re(t,this.capabilities=r);i.enable(t.STENCIL_TEST),i.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),i.setCullFace(tt.BACK),i.setFlipSided(!1),i.clearColor(0,0,0,0),this.state=i,this.texture=new De(t,i,e,r),this.geometry=new Ge(t,i,e,r),this._usedTextureUnits=0,this._currentGeometryProgram=""}var ur,cr,lr,dr,pr,fr=[],_r=[],mr=[];function vr(){jt.call(this),this.type=Y.CAMERA,this.viewMatrix=new mt,this.projectionMatrix=new mt,this.frustum=new Ct,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.rect=new bt(0,0,1,1),this.frustumCulled=!0}function gr(t,e){_t.call(this),this.uuid=u(),this.width=t,this.height=e,this.depthBuffer=!0,this.stencilBuffer=!0}function xr(t,e){gr.call(this,t,e),this.texture=new kt,this.activeCubeFace=0}function yr(t){this.camera=new vr,this.targets=[new vt(1,0,0),new vt(-1,0,0),new vt(0,1,0),new vt(0,-1,0),new vt(0,0,1),new vt(0,0,-1)],this.ups=[new vt(0,-1,0),new vt(0,-1,0),new vt(0,0,1),new vt(0,0,-1),new vt(0,-1,0),new vt(0,-1,0)],this.camera.setPerspective(.5*Math.PI,1,1,1e3),this.position=new vt,this.lookTarget=new vt,this.renderTarget=t||new xr(512,512),this.renderTexture=this.renderTarget.texture,this.renderTexture.minFilter=st.LINEAR_MIPMAP_LINEAR}function Mr(){this.depthMaterial=new Ae,this.depthMaterial.packToRGBA=!0,this.distanceMaterial=new Pe,this.oldClearColor=new bt}Object.assign(hr.prototype,{clear:function(t,e,r){var i=this.gl,n=0;(void 0===t||t)&&(n|=i.COLOR_BUFFER_BIT),(void 0===e||e)&&(n|=i.DEPTH_BUFFER_BIT),(void 0===r||r)&&(n|=i.STENCIL_BUFFER_BIT),i.clear(n)},render:function(e,t,r,i){var n;n=(i=void 0===i||i)?e.updateRenderList(t):e.getRenderList(t),this.renderPass(n.opaque,t,{scene:e,getMaterial:function(t){return e.overrideMaterial||t.material}}),this.renderPass(n.transparent,t,{scene:e,getMaterial:function(t){return e.overrideMaterial||t.material}}),r&&this.renderPass(n.ui,t,{scene:e,getMaterial:function(t){return e.overrideMaterial||t.material}})},renderPass:function(t,e,r){r=r||{};for(var i=this.gl,n=this.state,a=r.getMaterial||rr,s=r.beforeRender||nr,o=r.afterRender||nr,h=r.ifRender||ir,u=r.scene||{},c=n.currentRenderTarget,l=0,d=t.length;l<d;l++){var p=t[l];if(h(p)){var f=p.object,_=a.call(this,p),m=p.geometry,v=p.group;f.onBeforeRender(p,_),s.call(this,p,_);var g=$e(this,e,_,f,u);n.setProgram(g),this.geometry.setGeometry(m);var x=g.uuid+"_"+m.uuid;x!==this._currentGeometryProgram&&(this.setupVertexAttributes(g,m),this._currentGeometryProgram=x);var y=g.uniforms;for(var M in y){var E=y[M];if(_.uniforms&&void 0!==_.uniforms[M])if(E.type===ht.SAMPLER_2D){var T=this.allocTexUnit();this.texture.setTexture2D(_.uniforms[M],T),E.setValue(T)}else if(E.type===ht.SAMPLER_CUBE){T=this.allocTexUnit();this.texture.setTextureCube(_.uniforms[M],T),E.setValue(T)}else E.set(_.uniforms[M]);else switch(M){case"u_Projection":if(f.type===Y.CANVAS2D&&f.isScreenCanvas)var b=f.orthoCamera.projectionMatrix.elements;else b=e.projectionMatrix.elements;E.setValue(b);break;case"u_View":if(f.type===Y.CANVAS2D&&f.isScreenCanvas)var S=f.orthoCamera.viewMatrix.elements;else S=e.viewMatrix.elements;E.setValue(S);break;case"u_Model":var w=f.worldMatrix.elements;E.setValue(w);break;case"u_Color":var A=_.diffuse;E.setValue(A.r,A.g,A.b);break;case"u_Opacity":E.setValue(_.opacity);break;case"texture":T=this.allocTexUnit();this.texture.setTexture2D(_.diffuseMap,T),E.setValue(T);break;case"normalMap":T=this.allocTexUnit();this.texture.setTexture2D(_.normalMap,T),E.setValue(T);break;case"bumpMap":T=this.allocTexUnit();this.texture.setTexture2D(_.bumpMap,T),E.setValue(T);break;case"bumpScale":E.setValue(_.bumpScale);break;case"envMap":T=this.allocTexUnit();this.texture.setTextureCube(_.envMap,T),E.setValue(T);break;case"cubeMap":T=this.allocTexUnit();this.texture.setTextureCube(_.cubeMap,T),E.setValue(T);break;case"u_EnvMap_Intensity":E.setValue(_.envMapIntensity);break;case"u_Specular":E.setValue(_.shininess);break;case"u_SpecularColor":A=_.specular;E.setValue(A.r,A.g,A.b,1);break;case"specularMap":T=this.allocTexUnit();this.texture.setTexture2D(_.specularMap,T),E.setValue(T);break;case"aoMap":T=this.allocTexUnit();this.texture.setTexture2D(_.aoMap,T),E.setValue(T);break;case"aoMapIntensity":E.setValue(_.aoMapIntensity);break;case"u_Roughness":E.setValue(_.roughness);break;case"roughnessMap":T=this.allocTexUnit();this.texture.setTexture2D(_.roughnessMap,T),E.setValue(T);break;case"u_Metalness":E.setValue(_.metalness);break;case"metalnessMap":T=this.allocTexUnit();this.texture.setTexture2D(_.metalnessMap,T),E.setValue(T);break;case"emissive":A=_.emissive;var P=_.emissiveIntensity;E.setValue(A.r*P,A.g*P,A.b*P);break;case"emissiveMap":T=this.allocTexUnit();this.texture.setTexture2D(_.emissiveMap,T),E.setValue(T);break;case"u_CameraPosition":tr.setFromMatrixPosition(e.worldMatrix),E.setValue(tr.x,tr.y,tr.z);break;case"u_FogColor":A=u.fog.color;E.setValue(A.r,A.g,A.b);break;case"u_FogDensity":E.setValue(u.fog.density);break;case"u_FogNear":E.setValue(u.fog.near);break;case"u_FogFar":E.setValue(u.fog.far);break;case"u_PointSize":E.setValue(_.size);break;case"u_PointScale":var L=.5*c.height;E.setValue(L);break;case"dashSize":E.setValue(_.dashSize);break;case"totalSize":E.setValue(_.dashSize+_.gapSize);break;case"scale":E.setValue(_.scale);break;case"clippingPlanes[0]":var N=or(u.clippingPlanes||[],e);i.uniform4fv(E.location,N);break;case"uvTransform":var C;(C=_.diffuseMap||_.specularMap||_.normalMap||_.bumpMap||_.roughnessMap||_.metalnessMap||_.emissiveMap)&&(C.matrixAutoUpdate&&C.updateMatrix(),E.setValue(C.matrix.elements))}}f.type===Y.SKINNED_MESH&&this.uploadSkeleton(y,f,g.id),_.acceptLight&&u.lights&&this.uploadLights(y,u.lights,f.receiveShadow,e);var R=f.worldMatrix.determinant()<0;this.setStates(_,R);var O=er.set(c.width,c.height,c.width,c.height).multiply(e.rect);if(O.z-=O.x,O.w-=O.y,O.x=Math.floor(O.x),O.y=Math.floor(O.y),O.z=Math.floor(O.z),O.w=Math.floor(O.w),f.type===Y.CANVAS2D){f.isScreenCanvas&&(f.setRenderViewport(O.x,O.y,O.z,O.w),n.viewport(f.viewport.x,f.viewport.y,f.viewport.z,f.viewport.w));for(var I=0,U=0;U<f.drawArray.length;U++){var F=f.drawArray[U];T=this.allocTexUnit();this.texture.setTexture2D(F.texture,T),y.spriteTexture.setValue(T),i.drawElements(i.TRIANGLES,6*F.count,i.UNSIGNED_SHORT,2*I),I+=6*F.count,this._usedTextureUnits=0}}else n.viewport(O.x,O.y,O.z,O.w),this.draw(m,_,v);this._usedTextureUnits=0,n.enable(i.DEPTH_TEST),n.depthMask(!0),n.colorMask(!0),o(this,p),f.onAfterRender(p)}}},setStates:function(t,e){var r=this.gl,i=this.state;t.transparent?i.setBlend(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha):i.setBlend(Q.NONE),t.depthTest?i.enable(r.DEPTH_TEST):i.disable(r.DEPTH_TEST),i.depthMask(t.depthWrite),i.colorMask(t.colorWrite),i.setCullFace(t.side===et.DOUBLE?tt.NONE:tt.BACK);var n=t.side===et.BACK;e&&(n=!n),i.setFlipSided(n),void 0!==t.lineWidth&&i.setLineWidth(t.lineWidth)},draw:function(t,e,r){var i=this.gl,n=this.properties,a=null!==t.index,s=0,o=a?t.index.count:t.getAttribute("a_Position").count,h=r?r.start:0,u=r?r.count:1/0;s=Math.max(s,h),o=Math.min(o,u);var c=this.capabilities.angleInstancedArraysExt;if(a){var l=n.get(t.index),d=l.bytesPerElement,p=l.type;t.isInstancedGeometry?0<t.maxInstancedCount&&c.drawElementsInstancedANGLE(e.drawMode,o,p,s*d,t.maxInstancedCount):i.drawElements(e.drawMode,o,p,s*d)}else t.isInstancedGeometry?0<t.maxInstancedCount&&c.drawArraysInstancedANGLE(e.drawMode,s,o,t.maxInstancedCount):i.drawArrays(e.drawMode,s,o)},uploadSkeleton:function(t,e,r){if(e.skeleton&&0<e.skeleton.bones.length){var i=e.skeleton,n=this.gl;if(i.updateBones(),0<this.capabilities.maxVertexTextures&&this.capabilities.floatTextures){if(void 0===i.boneTexture){var a=Math.sqrt(4*i.bones.length);a=c(Math.ceil(a)),a=Math.max(4,a);var s=new Float32Array(a*a*4);s.set(i.boneMatrices);var o=new Vt(s,a,a);i.boneMatrices=s,i.boneTexture=o,i.boneTextureSize=a}var h=this.allocTexUnit();this.texture.setTexture2D(i.boneTexture,h),t.boneTexture&&t.boneTexture.setValue(h),t.boneTextureSize&&t.boneTextureSize.setValue(i.boneTextureSize)}else{var u=n.getUniformLocation(r,"boneMatrices");n.uniformMatrix4fv(u,!1,i.boneMatrices)}t.bindMatrix.setValue(e.bindMatrix.elements),t.bindMatrixInverse.setValue(e.bindMatrixInverse.elements)}},uploadLights:function(t,e,r,i){var n=this.gl;0<e.ambientsNum&&t.u_AmbientLightColor.set(e.ambient);for(var a=0;a<e.directsNum;a++){var s=e.directional[a];t["u_Directional["+a+"].direction"].set(s.direction),t["u_Directional["+a+"].intensity"].setValue(1),t["u_Directional["+a+"].color"].set(s.color);var o=s.shadow&&r;if(t["u_Directional["+a+"].shadow"].setValue(o?1:0),o){t["u_Directional["+a+"].shadowBias"].setValue(s.shadowBias),t["u_Directional["+a+"].shadowRadius"].setValue(s.shadowRadius),t["u_Directional["+a+"].shadowMapSize"].set(s.shadowMapSize);var h=this.allocTexUnit();this.texture.setTexture2D(e.directionalShadowMap[a],h),fr[a]=h}}if(0<fr.length){var u=t["directionalShadowMap[0]"];n.uniform1iv(u.location,fr),fr.length=0;var c=t["directionalShadowMatrix[0]"];n.uniformMatrix4fv(c.location,!1,e.directionalShadowMatrix)}for(a=0;a<e.pointsNum;a++){s=e.point[a];t["u_Point["+a+"].position"].set(s.position),t["u_Point["+a+"].intensity"].setValue(1),t["u_Point["+a+"].color"].set(s.color),t["u_Point["+a+"].distance"].setValue(s.distance),t["u_Point["+a+"].decay"].setValue(s.decay);o=s.shadow&&r;if(t["u_Point["+a+"].shadow"].setValue(o?1:0),o){t["u_Point["+a+"].shadowBias"].setValue(s.shadowBias),t["u_Point["+a+"].shadowRadius"].setValue(s.shadowRadius),t["u_Point["+a+"].shadowMapSize"].set(s.shadowMapSize),t["u_Point["+a+"].shadowCameraNear"].setValue(s.shadowCameraNear),t["u_Point["+a+"].shadowCameraFar"].setValue(s.shadowCameraFar);h=this.allocTexUnit();this.texture.setTextureCube(e.pointShadowMap[a],h),_r[a]=h}}if(0<_r.length){var l=t["pointShadowMap[0]"];n.uniform1iv(l.location,_r),_r.length=0}for(a=0;a<e.spotsNum;a++){s=e.spot[a];t["u_Spot["+a+"].position"].set(s.position),t["u_Spot["+a+"].direction"].set(s.direction),t["u_Spot["+a+"].intensity"].setValue(1),t["u_Spot["+a+"].color"].set(s.color),t["u_Spot["+a+"].distance"].setValue(s.distance),t["u_Spot["+a+"].decay"].setValue(s.decay),t["u_Spot["+a+"].coneCos"].setValue(s.coneCos),t["u_Spot["+a+"].penumbraCos"].setValue(s.penumbraCos);o=s.shadow&&r;if(t["u_Spot["+a+"].shadow"].setValue(o?1:0),o){t["u_Spot["+a+"].shadowBias"].setValue(s.shadowBias),t["u_Spot["+a+"].shadowRadius"].setValue(s.shadowRadius),t["u_Spot["+a+"].shadowMapSize"].set(s.shadowMapSize);h=this.allocTexUnit();this.texture.setTexture2D(e.spotShadowMap[a],h),mr[a]=h}}if(0<mr.length){var d=t["spotShadowMap[0]"];n.uniform1iv(d.location,mr),mr.length=0;var p=t["spotShadowMatrix[0]"];n.uniformMatrix4fv(p.location,!1,e.spotShadowMatrix)}},allocTexUnit:function(){var t=this._usedTextureUnits;return t>=this.capabilities.maxTextures&&console.warn("trying to use "+t+" texture units while this GPU supports only "+this.capabilities.maxTextures),this._usedTextureUnits+=1,t},setupVertexAttributes:function(t,e){var r=this.gl,i=t.attributes,n=this.properties,a=this.capabilities.angleInstancedArraysExt;for(var s in i){var o=i[s],h=e.getAttribute(s);if(h){var u,c=h.normalized,l=h.size;o.count!==l&&console.warn("WebGLCore: attribute "+s+" size not match! "+o.count+" : "+l);var d=(u=h.isInterleavedBufferAttribute?n.get(h.data):n.get(h)).buffer,p=u.type;o.format;var f=u.bytesPerElement;if(h.isInterleavedBufferAttribute){var _=h.data,m=_.stride,v=h.offset;r.enableVertexAttribArray(o.location),_&&_.isInstancedInterleavedBuffer&&(a||console.warn("ANGLE_instanced_arrays not supported"),a.vertexAttribDivisorANGLE(o.location,_.meshPerAttribute),void 0===e.maxInstancedCount&&(e.maxInstancedCount=_.meshPerAttribute*_.count)),r.bindBuffer(r.ARRAY_BUFFER,d),r.vertexAttribPointer(o.location,o.count,p,c,f*m,f*v)}else r.enableVertexAttribArray(o.location),h&&h.isInstancedBufferAttribute&&(a||console.warn("ANGLE_instanced_arrays not supported"),a.vertexAttribDivisorANGLE(o.location,h.meshPerAttribute),void 0===e.maxInstancedCount&&(e.maxInstancedCount=h.meshPerAttribute*h.count)),r.bindBuffer(r.ARRAY_BUFFER,d),r.vertexAttribPointer(o.location,o.count,p,c,0,0)}else console.warn("WebGLCore: geometry attribute "+s+" not found!")}if(e.index){var g=n.get(e.index);r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,g.buffer)}}}),vr.prototype=Object.assign(Object.create(jt.prototype),{constructor:vr,lookAt:(pr=new mt,function(t,e){pr.lookAtRH(this.position,t,e),this.quaternion.setFromRotationMatrix(pr)}),setOrtho:function(t,e,r,i,n,a){this.projectionMatrix.set(2/(e-t),0,0,-(e+t)/(e-t),0,2/(i-r),0,-(i+r)/(i-r),0,0,-2/(a-n),-(a+n)/(a-n),0,0,0,1)},setPerspective:function(t,e,r,i){this.projectionMatrix.set(1/(e*Math.tan(t/2)),0,0,0,0,1/Math.tan(t/2),0,0,0,0,-(i+r)/(i-r),-2*i*r/(i-r),0,0,-1,0)},getWorldDirection:(cr=new vt,lr=new wt,dr=new vt,function(t){var e=t||new vt;return this.worldMatrix.decompose(cr,lr,dr),e.set(0,0,-1).applyQuaternion(lr),e}),updateMatrix:(ur=new mt,function(){jt.prototype.updateMatrix.call(this),this.viewMatrix.getInverse(this.worldMatrix),ur.multiplyMatrices(this.projectionMatrix,this.viewMatrix),this.frustum.setFromMatrix(ur)}),copy:function(t,e){return jt.prototype.copy.call(this,t,e),this.viewMatrix.copy(t.viewMatrix),this.projectionMatrix.copy(t.projectionMatrix),this}}),gr.prototype=Object.assign(Object.create(_t.prototype),{constructor:gr,resize:function(t,e){this.width===t&&this.height===e||this.dispose(),this.width=t,this.height=e},dispose:function(){this.dispatchEvent({type:"dispose"})}}),(xr.prototype=Object.create(gr.prototype)).constructor=xr,yr.prototype.render=function(t,e){this.camera.position.copy(this.position);for(var r=0;r<6;r++)this.lookTarget.set(this.targets[r].x+this.camera.position.x,this.targets[r].y+this.camera.position.y,this.targets[r].z+this.camera.position.z),this.camera.lookAt(this.lookTarget,this.ups[r]),this.camera.updateMatrix(),this.renderTarget.activeCubeFace=r,t.texture.setRenderTarget(this.renderTarget),t.clear(!0,!0,!0),t.render(e,this.camera),t.texture.updateRenderTargetMipmap(this.renderTarget)},Object.assign(Mr.prototype,{render:function(t,e){var r=t.gl,i=t.state,n=i.states[r.STENCIL_TEST];n&&i.disable(r.STENCIL_TEST),this.oldClearColor.copy(i.currentClearColor),i.clearColor(1,1,1,1);for(var a=e.lights.shadows,s=0;s<a.length;s++)for(var o=a[s],h=o.shadow,u=h.camera,c=h.renderTarget,l=o.lightType==q.POINT,d=l?6:1,p=0;p<d;p++){l?(h.update(o,p),c.activeCubeFace=p):h.update(o);var f=e.updateRenderList(u);t.texture.setRenderTarget(c),t.clear(!0,!0);var _=l?this.distanceMaterial:this.depthMaterial;_.uniforms=_.uniforms||{},_.uniforms.nearDistance=h.cameraNear,_.uniforms.farDistance=h.cameraFar,t.renderPass(f.opaque,u,{getMaterial:function(t){return _.side=t.material.side,_},ifRender:function(t){return t.object.castShadow}})}n&&i.enable(r.STENCIL_TEST),i.clearColor(this.oldClearColor.x,this.oldClearColor.y,this.oldClearColor.z,this.oldClearColor.w)}});var Er=new vt,Tr={};function br(t){if(void 0!==Tr[t.uuid])return Tr[t.uuid];var e;switch(t.lightType){case q.DIRECT:e={direction:new Float32Array(3),color:new Float32Array([0,0,0,1]),shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2)};break;case q.POINT:e={position:new Float32Array(3),color:new Float32Array([0,0,0,1]),distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2),shadowCameraNear:1,shadowCameraFar:1e3};break;case q.SPOT:e={position:new Float32Array(3),direction:new Float32Array(3),color:new Float32Array([0,0,0,1]),distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2)}}return Tr[t.uuid]=e}function Sr(){this.ambient=new Float32Array([0,0,0,1]),this.directional=[],this.directionalShadowMap=[],this.directionalShadowMatrix=[],this.point=[],this.pointShadowMap=[],this.pointShadowMatrix=[],this.spot=[],this.spotShadowMap=[],this.spotShadowMatrix=[],this.shadows=[],this.ambientsNum=0,this.directsNum=0,this.pointsNum=0,this.spotsNum=0,this.shadowsNum=0,this.totalNum=0}Object.assign(Sr.prototype,{startCount:function(){for(var t=0;t<3;t++)this.ambient[t]=0;this.shadows.length=0,this.ambientsNum=0,this.directsNum=0,this.pointsNum=0,this.spotsNum=0,this.shadowsNum=0,this.totalNum=0},add:function(t){t.lightType==q.AMBIENT?this._doAddAmbientLight(t):t.lightType==q.DIRECT?this._doAddDirectLight(t):t.lightType==q.POINT?this._doAddPointLight(t):t.lightType==q.SPOT&&this._doAddSpotLight(t),t.castShadow&&t.lightType!==q.AMBIENT&&(this.shadows.push(t),this.shadowsNum++),this.totalNum++},endCount:function(){},_doAddAmbientLight:function(t){var e=t.intensity,r=t.color;this.ambient[0]+=r.r*e,this.ambient[1]+=r.g*e,this.ambient[2]+=r.b*e,this.ambientsNum++},_doAddDirectLight:function(t){var e=t.intensity,r=t.color,i=br(t);i.color[0]=r.r*e,i.color[1]=r.g*e,i.color[2]=r.b*e;var n=Er;if(t.getWorldDirection(n),i.direction[0]=n.x,i.direction[1]=n.y,i.direction[2]=n.z,t.castShadow?(i.shadow=!0,i.shadowBias=t.shadow.bias,i.shadowRadius=t.shadow.radius,i.shadowMapSize[0]=t.shadow.mapSize.x,i.shadowMapSize[1]=t.shadow.mapSize.y):i.shadow=!1,t.castShadow){var a=16*(this.directsNum+1);if(this.directionalShadowMatrix.length<a){var s=this.directionalShadowMatrix;this.directionalShadowMatrix=new Float32Array(a),this.directionalShadowMatrix.set(s)}this.directionalShadowMatrix.set(t.shadow.matrix.elements,16*this.directsNum),this.directionalShadowMap[this.directsNum]=t.shadow.map}this.directional[this.directsNum]=i,this.directsNum++},_doAddPointLight:function(t){var e=t.intensity,r=t.color,i=t.distance,n=t.decay,a=br(t);a.color[0]=r.r*e,a.color[1]=r.g*e,a.color[2]=r.b*e,a.distance=i,a.decay=n;var s=Er.setFromMatrixPosition(t.worldMatrix);if(a.position[0]=s.x,a.position[1]=s.y,a.position[2]=s.z,t.castShadow?(a.shadow=!0,a.shadowBias=t.shadow.bias,a.shadowRadius=t.shadow.radius,a.shadowMapSize[0]=t.shadow.mapSize.x,a.shadowMapSize[1]=t.shadow.mapSize.y,a.shadowCameraNear=t.shadow.cameraNear,a.shadowCameraFar=t.shadow.cameraFar):a.shadow=!1,t.castShadow){var o=16*(this.pointsNum+1);if(this.pointShadowMatrix.length<o){var h=this.pointShadowMatrix;this.pointShadowMatrix=new Float32Array(o),this.pointShadowMatrix.set(h)}this.pointShadowMatrix.set(t.shadow.matrix.elements,16*this.pointsNum),this.pointShadowMap[this.pointsNum]=t.shadow.map}this.point[this.pointsNum]=a,this.pointsNum++},_doAddSpotLight:function(t){var e=t.intensity,r=t.color,i=t.distance,n=t.decay,a=br(t);a.color[0]=r.r*e,a.color[1]=r.g*e,a.color[2]=r.b*e,a.distance=i,a.decay=n;var s=Er.setFromMatrixPosition(t.worldMatrix);a.position[0]=s.x,a.position[1]=s.y,a.position[2]=s.z;var o=Er;t.getWorldDirection(Er),a.direction[0]=o.x,a.direction[1]=o.y,a.direction[2]=o.z;var h=Math.cos(t.angle),u=Math.cos(t.angle*(1-t.penumbra));if(a.coneCos=h,a.penumbraCos=u,t.castShadow?(a.shadow=!0,a.shadowBias=t.shadow.bias,a.shadowRadius=t.shadow.radius,a.shadowMapSize[0]=t.shadow.mapSize.x,a.shadowMapSize[1]=t.shadow.mapSize.y):a.shadow=!1,t.castShadow){var c=16*(this.spotsNum+1);if(this.spotShadowMatrix.length<c){var l=this.spotShadowMatrix;this.spotShadowMatrix=new Float32Array(c),this.spotShadowMatrix.set(l)}this.spotShadowMatrix.set(t.shadow.matrix.elements,16*this.spotsNum),this.spotShadowMap[this.spotsNum]=t.shadow.map}this.spot[this.spotsNum]=a,this.spotsNum++}});var wr=new vt,Ar=new Lt,Pr=function(t,e){return t.z-e.z},Lr=function(t,e){return e.z-t.z};function Nr(){this.opaque=[],this.transparent=[],this.ui=[],this._opaqueCount=0,this._transparentCount=0,this._uiCount=0}function Cr(){jt.call(this),this.type=Y.SCENE,this.overrideMaterial=null,this.fog=null,this.clippingPlanes=[],this._renderLists={},this.lights=new Sr}function Rr(t,e){jt.call(this),this.geometry=t,this.material=e,this.type=Y.MESH}function Or(t){var e=new Cr,r=this.camera=new vr;r.frustumCulled=!1,r.position.set(0,1,0),r.lookAt(new vt(0,0,0),new vt(0,0,-1)),r.setOrtho(-1,1,-1,1,.1,2),e.add(r);var i=new _e(2,2,1,1);this.uniforms=function(t){var e={};for(var r in t){var i=t[r];Array.isArray(i)?e[r]=i.slice():e[r]=i}return e}(t.uniforms);var n=this.material=new we(t.vertexShader,t.fragmentShader,this.uniforms);Object.assign(n.defines,t.defines);var a=new Rr(i,n);a.frustumCulled=!1,e.add(a),e.updateMatrix(),this.renderList=e.updateRenderList(r),this.renderConfig={}}function Ir(t){gr.call(this,t.width,t.height),this.view=t}function Ur(){this._entities={},this.enableCounter=!1}function Fr(t,e){this.backRenderTarget=new Ir(t);var r=t.getContext("webgl",e||{antialias:!0,alpha:!1,stencil:!0});this.glCore=new hr(r),this.autoClear=!0,this.performance=new Ur,this.shadowMapPass=new Mr,this.shadowAutoUpdate=!0,this.shadowNeedsUpdate=!1,this.matrixAutoUpdate=!0,this.lightsAutoupdate=!0}function Dr(t,e){gr.call(this,t,e),this.texture=new Gt,this.depthTexture=null}function zr(){jt.call(this),this.type=Y.GROUP}function Br(){jt.call(this),this.type=Y.LIGHT,this.lightType="",this.color=new Rt(16777215),this.intensity=1}function Gr(){Br.call(this),this.lightType=q.AMBIENT}function kr(){this.camera=new vr,this.matrix=new mt,this.bias=3e-4,this.radius=2,this.cameraNear=1,this.cameraFar=500,this.mapSize=new Tt(512,512),this.renderTarget=null,this.map=null}function Vr(){kr.call(this),this.camera.frustumCulled=!1,this.renderTarget=new Dr(this.mapSize.x,this.mapSize.y);var t=this.renderTarget.texture;t.generateMipmaps=!1,t.minFilter=st.LINEAR,this.map=t,this.windowSize=500,this._lookTarget=new vt,this._up=new vt(0,1,0)}function Hr(){Br.call(this),this.lightType=q.DIRECT,this.shadow=new Vr}function jr(){kr.call(this),this.renderTarget=new xr(this.mapSize.x,this.mapSize.y);var t=this.renderTarget.texture;t.generateMipmaps=!1,t.minFilter=st.LINEAR,this.map=t,this._targets=[new vt(1,0,0),new vt(-1,0,0),new vt(0,1,0),new vt(0,-1,0),new vt(0,0,1),new vt(0,0,-1)],this._ups=[new vt(0,-1,0),new vt(0,-1,0),new vt(0,0,1),new vt(0,0,-1),new vt(0,-1,0),new vt(0,-1,0)],this._lookTarget=new vt}function Xr(){Br.call(this),this.lightType=q.POINT,this.decay=2,this.distance=200,this.shadow=new jr}function Wr(){kr.call(this),this.renderTarget=new Dr(this.mapSize.x,this.mapSize.y);var t=this.renderTarget.texture;t.generateMipmaps=!1,t.minFilter=st.LINEAR,this.map=t,this._lookTarget=new vt,this._up=new vt(0,1,0)}function Yr(){Br.call(this),this.lightType=q.SPOT,this.decay=2,this.distance=200,this.penumbra=0,this.angle=Math.PI/6,this.shadow=new Wr}function qr(t,e){Rr.call(this,t,e),this.type=Y.SKINNED_MESH,this.skeleton=void 0,this.bindMode="attached",this.bindMatrix=new mt,this.bindMatrixInverse=new mt}function Zr(t,e){jt.call(this),this.geometry=t,this.material=e,this.type=Y.POINT}function Kr(t,e){jt.call(this),this.geometry=t,this.material=e,this.type=Y.LINE}Object.assign(Nr.prototype,{startCount:function(){this._opaqueCount=0,this._transparentCount=0,this._uiCount=0},add:function(t,e){if(t.frustumCulled&&e.frustumCulled&&(Ar.copy(t.geometry.boundingSphere).applyMatrix4(t.worldMatrix),!e.frustum.intersectsSphere(Ar)))return;if(wr.setFromMatrixPosition(t.worldMatrix),wr.applyMatrix4(e.viewMatrix).applyMatrix4(e.projectionMatrix),Y.CANVAS2D!==t.type)if(Array.isArray(t.material))for(var r=t.geometry.groups,i=0;i<r.length;i++){var n=r[i],a=t.material[n.materialIndex];if(a){s={object:t,geometry:t.geometry,material:a,z:wr.z,group:n};a.transparent?this.transparent[this._transparentCount++]=s:this.opaque[this._opaqueCount++]=s}}else{s={object:t,geometry:t.geometry,material:t.material,z:wr.z};t.material.transparent?this.transparent[this._transparentCount++]=s:this.opaque[this._opaqueCount++]=s}else{var s={object:t,geometry:t.geometry,material:t.material,z:wr.z};this.ui[this._uiCount++]=s}},endCount:function(){this.transparent.length=this._transparentCount,this.opaque.length=this._opaqueCount,this.ui.length=this._uiCount},sort:function(){this.opaque.sort(Pr),this.transparent.sort(Lr)}}),Cr.prototype=Object.assign(Object.create(jt.prototype),{constructor:Cr,updateRenderList:function(t){var e=t.uuid;this._renderLists[e]||(this._renderLists[e]=new Nr);var r=this._renderLists[e];return r.startCount(),this._doUpdateRenderList(this,t,r),r.endCount(),r.sort(),r},getRenderList:function(t){return this._renderLists[t.uuid]},updateLights:function(){this.lights;return this.lights.startCount(),this._doUpdateLights(this),this.lights.endCount(),this.lights},_doUpdateRenderList:function(t,e,r){if(t.visible&&(t.geometry&&t.material&&r.add(t,e),Y.CANVAS2D!==t.type))for(var i=t.children,n=0,a=i.length;n<a;n++)this._doUpdateRenderList(i[n],e,r)},_doUpdateLights:function(t){if(t.visible&&(Y.LIGHT===t.type&&this.lights.add(t),Y.CANVAS2D!==t.type))for(var e=t.children,r=0,i=e.length;r<i;r++)this._doUpdateLights(e[r])}}),Rr.prototype=Object.assign(Object.create(jt.prototype),{constructor:Rr,raycast:function(){var _=new Lt,m=new Pt,v=new mt,g=new gt,x=new vt,y=new vt,M=new vt,E=new vt,T=new Tt,b=new Tt,S=new Tt,w=new vt,h=new vt;function A(t,e,r,i,n,a,s){t.material;if(null===r.intersectTriangle(a,n,i,!0,s))return null;h.copy(s),h.applyMatrix4(t.worldMatrix);var o=e.ray.origin.distanceTo(h);return o<e.near||o>e.far?null:{distance:o,point:h.clone(),object:t}}return function(t,e){var r=this.geometry,i=this.worldMatrix;if(_.copy(r.boundingSphere),_.applyMatrix4(i),t.ray.intersectsSphere(_)&&(m.copy(r.boundingBox),m.applyMatrix4(i),t.ray.intersectsBox(m))){v.getInverse(i),g.copy(t.ray).applyMatrix4(v);for(var n,a,s,o,h,u,c=r.index.array,l=r.getAttribute("a_Position"),d=r.getAttribute("a_Uv"),p=0;p<c.length;p+=3){n=c[p],a=c[p+1],s=c[p+2],y.fromArray(l.array,3*n),M.fromArray(l.array,3*a),E.fromArray(l.array,3*s);var f=A(this,t,g,y,M,E,w);f&&(T.fromArray(d.array,2*n),b.fromArray(d.array,2*a),S.fromArray(d.array,2*s),f.uv=(o=T,h=b,u=S,Ot.barycoordFromPoint(w,y,M,E,x),o.multiplyScalar(x.x),h.multiplyScalar(x.y),u.multiplyScalar(x.z),o.add(h).add(u),o.clone()),f.face=[n,a,s],f.faceIndex=n,e.push(f))}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Object.assign(Or.prototype,{render:function(t){t.renderPass(this.renderList.opaque,this.camera,this.renderConfig)}}),Ir.prototype=Object.assign(Object.create(gr.prototype),{constructor:Ir,resize:function(t,e){this.view.width=t,this.view.height=e,this.width=t,this.height=e},dispose:function(){}}),Object.assign(Ur.prototype,{getEntity:function(t){return this._entities[t]},getFps:function(){var t=this.getEntity("fps");return t&&t.averageDelta?Math.floor(1e3/t.averageDelta):0},updateFps:function(){this.enableCounter&&(this.endCounter("fps"),this.startCounter("fps",60))},getNow:function(){return window.performance?window.performance.now():(new Date).getTime()},startCounter:function(t,e){if(this.enableCounter){var r=this._entities[t];r||(r={start:0,end:0,delta:0,_cache:[],averageRange:1,averageDelta:0},this._entities[t]=r),r.start=this.getNow(),r.averageRange=e||1}},endCounter:function(t){if(this.enableCounter){var e=this._entities[t];if(e&&(e.end=this.getNow(),e.delta=e.end-e.start,1<e.averageRange)){e._cache.push(e.delta);var r=e._cache.length;if(r>=e.averageRange){r>e.averageRange&&(e._cache.shift(),r--);for(var i=0,n=0;n<r;n++)i+=e._cache[n];e.averageDelta=i/r}}}}}),Fr.prototype.render=function(t,e,r,i){var n=this.performance;n.updateFps(),n.startCounter("render",60),this.matrixAutoUpdate&&t.updateMatrix(),this.lightsAutoupdate&&t.updateLights(),n.startCounter("renderShadow",60),(this.shadowAutoUpdate||this.shadowNeedsUpdate)&&(this.shadowMapPass.render(this.glCore,t),this.shadowNeedsUpdate=!1),n.endCounter("renderShadow"),void 0===r&&(r=this.backRenderTarget),this.glCore.texture.setRenderTarget(r),(this.autoClear||i)&&this.glCore.clear(!0,!0,!0),n.startCounter("renderList",60),this.glCore.render(t,e,!0),n.endCounter("renderList"),r.texture&&this.glCore.texture.updateRenderTargetMipmap(r),this.performance.endCounter("render")},(Dr.prototype=Object.create(gr.prototype)).constructor=Dr,(zr.prototype=Object.create(jt.prototype)).constructor=zr,Br.prototype=Object.assign(Object.create(jt.prototype),{constructor:Br,copy:function(t){return jt.prototype.copy.call(this,t),this.type=t.type,this.lightType=t.lightType,this.color.copy(t.color),this.intensity=t.intensity,this}}),(Gr.prototype=Object.create(Br.prototype)).constructor=Gr,Object.assign(kr.prototype,{update:function(t,e){},copy:function(t){return this.camera.copy(t.camera),this.matrix.copy(t.matrix),this.bias=t.bias,this.radius=t.radius,this.cameraNear=t.cameraNear,this.cameraFar=t.cameraFar,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)}}),Vr.prototype=Object.assign(Object.create(kr.prototype),{constructor:Vr,update:function(t){this._updateCamera(t),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(t){var e=this.camera,r=this._lookTarget;t.getWorldDirection(this._lookTarget),e.position.setFromMatrixPosition(t.worldMatrix),r.set(r.x+e.position.x,r.y+e.position.y,r.z+e.position.z),e.lookAt(r,this._up),e.updateMatrix();var i=this.windowSize/2;e.setOrtho(-i,i,-i,i,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var t=this.matrix,e=this.camera;t.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),t.multiply(e.projectionMatrix),t.multiply(e.viewMatrix)},copy:function(t){return kr.prototype.copy.call(this,t),this.windowSize=t.windowSize,this}}),Hr.prototype=Object.assign(Object.create(Br.prototype),{constructor:Hr,copy:function(t){return Br.prototype.copy.call(this,t),this.shadow.copy(t.shadow),this}}),jr.prototype=Object.assign(Object.create(kr.prototype),{constructor:jr,update:function(t,e){this._updateCamera(t,e),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(t,e){var r=this.camera,i=this._lookTarget,n=this._targets,a=this._ups;r.position.setFromMatrixPosition(t.worldMatrix),i.set(n[e].x+r.position.x,n[e].y+r.position.y,n[e].z+r.position.z),r.lookAt(i,a[e]),r.updateMatrix(),r.setPerspective(.5*Math.PI,1,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var t=this.matrix,e=this.camera;t.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),t.multiply(e.projectionMatrix),t.multiply(e.viewMatrix)}}),Xr.prototype=Object.assign(Object.create(Br.prototype),{constructor:Xr,copy:function(t){return Br.prototype.copy.call(this,t),this.shadow.copy(t.shadow),this}}),Wr.prototype=Object.assign(Object.create(kr.prototype),{constructor:Wr,update:function(t){this._updateCamera(t),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(t){var e=this.camera,r=this._lookTarget;t.getWorldDirection(this._lookTarget),e.position.setFromMatrixPosition(t.worldMatrix),r.set(r.x+e.position.x,r.y+e.position.y,r.z+e.position.z),e.lookAt(r,this._up),e.updateMatrix(),e.setPerspective(2*t.angle,1,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var t=this.matrix,e=this.camera;t.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),t.multiply(e.projectionMatrix),t.multiply(e.viewMatrix)}}),Yr.prototype=Object.assign(Object.create(Br.prototype),{constructor:Yr,copy:function(t){return Br.prototype.copy.call(this,t),this.shadow.copy(t.shadow),this}}),qr.prototype=Object.assign(Object.create(Rr.prototype),{constructor:qr,bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrix(),e=this.worldMatrix),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},updateMatrix:function(){Rr.prototype.updateMatrix.call(this),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.worldMatrix):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("zen3d.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),(Zr.prototype=Object.create(jt.prototype)).constructor=Zr,Kr.prototype=Object.assign(Object.create(jt.prototype),{constructor:Kr,raycast:function(){}}),t.EventDispatcher=_t,t.Raycaster=xt,t.Euler=Et,t.Vector2=Tt,t.Vector3=vt,t.Vector4=bt,t.Matrix3=St,t.Matrix4=mt,t.Quaternion=wt,t.Box2=At,t.Box3=Pt,t.Sphere=Lt,t.Plane=Nt,t.Frustum=Ct,t.Color3=Rt,t.Ray=gt,t.Triangle=Ot,t.Curve=It,t.Spherical=Ut,t.TextureBase=Ft,t.Texture2D=Gt,t.TextureCube=kt,t.TextureData=Vt,t.TextureDepth=Ht,t.Bone=Xt,t.Skeleton=Wt,t.AnimationMixer=Qt,t.BooleanKeyframeTrack=$t,t.ColorKeyframeTrack=te,t.KeyframeClip=ee,t.KeyframeTrack=Jt,t.NumberKeyframeTrack=re,t.PropertyBindingMixer=Kt,t.QuaternionKeyframeTrack=ie,t.StringKeyframeTrack=ne,t.VectorKeyframeTrack=ae,t.BufferAttribute=se,t.CubeGeometry=he,t.CylinderGeometry=ue,t.Geometry=oe,t.InstancedBufferAttribute=ce,t.InstancedGeometry=le,t.InstancedInterleavedBuffer=pe,t.InterleavedBuffer=de,t.InterleavedBufferAttribute=fe,t.PlaneGeometry=_e,t.SphereGeometry=me,t.Material=ve,t.BasicMaterial=ge,t.LambertMaterial=xe,t.PhongMaterial=ye,t.PBRMaterial=Me,t.PointsMaterial=Ee,t.LineMaterial=Te,t.LineLoopMaterial=be,t.LineDashedMaterial=Se,t.ShaderMaterial=we,t.DepthMaterial=Ae,t.DistanceMaterial=Pe,t.WebGLCapabilities=Ne,t.WebGLState=Re,t.WebGLProperties=Oe,t.WebGLTexture=De,t.WebGLGeometry=Ge,t.WebGLUniform=ke,t.WebGLAttribute=Ve,t.WebGLProgram=je,t.WebGLCore=hr,t.ShaderChunk=Xe,t.ShaderLib=We,t.EnvironmentMapPass=yr,t.ShadowMapPass=Mr,t.ShaderPostPass=Or,t.Renderer=Fr,t.LightCache=Sr,t.RenderList=Nr,t.RenderTargetBase=gr,t.RenderTargetBack=Ir,t.RenderTarget2D=Dr,t.RenderTargetCube=xr,t.Object3D=jt,t.Scene=Cr,t.Fog=function(t,e,r){this.fogType=K.NORMAL,this.color=new Rt(void 0!==t?t:0),this.near=void 0!==e?e:1,this.far=void 0!==r?r:1e3},t.FogExp2=function(t,e){this.fogType=K.EXP2,this.color=new Rt(void 0!==t?t:0),this.density=void 0!==e?e:25e-5},t.Group=zr,t.Light=Br,t.AmbientLight=Gr,t.DirectionalLight=Hr,t.PointLight=Xr,t.SpotLight=Yr,t.LightShadow=kr,t.DirectionalLightShadow=Vr,t.SpotLightShadow=Wr,t.PointLightShadow=jr,t.Camera=vr,t.Mesh=Rr,t.SkinnedMesh=qr,t.Points=Zr,t.Line=Kr,t.FileLoader=zt,t.ImageLoader=Dt,t.TGALoader=Bt,t.generateUUID=u,t.isMobile=a,t.isWeb=f,t.createCheckerBoardPixels=function(t,e,r){var i=new Uint8Array(t*e*4),n=[[255,255,255,255],[0,0,0,255]];r=r||5;for(var a=0,s=0;s<e;s++)for(var o=0;o<t;o++){if(0==o?a=1:o%r==0&&(a=(a+1)%2),s%r==0&&0==o){var h=n[0];n[0]=n[1],n[1]=h}i[s*(4*t)+4*o+0]=n[a][0],i[s*(4*t)+4*o+1]=n[a][1],i[s*(4*t)+4*o+2]=n[a][2],i[s*(4*t)+4*o+3]=n[a][3]}return i},t.isPowerOfTwo=s,t.nearestPowerOfTwo=_,t.nextPowerOfTwo=c,t.cloneUniforms=function(t){var e={};for(var r in t){var i=t[r];Array.isArray(i)?e[r]=i.slice():e[r]=i}return e},t.halton=function(t,e){for(var r=0,i=1/e,n=t;0<n;)r+=i*(n%e),n=Math.floor(n/e),i/=e;return r},t.OBJECT_TYPE=Y,t.LIGHT_TYPE=q,t.MATERIAL_TYPE=Z,t.FOG_TYPE=K,t.BLEND_TYPE=Q,t.BLEND_EQUATION=J,t.BLEND_FACTOR=$,t.CULL_FACE_TYPE=tt,t.DRAW_SIDE=et,t.SHADING_TYPE=rt,t.WEBGL_TEXTURE_TYPE=it,t.WEBGL_PIXEL_FORMAT=nt,t.WEBGL_PIXEL_TYPE=at,t.WEBGL_TEXTURE_FILTER=st,t.WEBGL_TEXTURE_WRAP=ot,t.WEBGL_UNIFORM_TYPE=ht,t.WEBGL_ATTRIBUTE_TYPE=ut,t.WEBGL_BUFFER_USAGE=ct,t.SHADOW_TYPE=lt,t.TEXEL_ENCODING_TYPE=dt,t.ENVMAP_COMBINE_TYPE=pt,t.DRAW_MODE=ft,Object.defineProperty(t,"__esModule",{value:!0})});