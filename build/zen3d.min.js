// github.com/shawn0326/zen-3d
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).zen3d={})}(this,function(e){"use strict";var t,i,n,r,a=(i="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),n=new Array(36),r=0,function(){for(var e=0;e<36;e++)8===e||13===e||18===e||23===e?n[e]="-":14===e?n[e]="4":(r<=2&&(r=33554432+16777216*Math.random()|0),t=15&r,r>>=4,n[e]=i[19===e?3&t|8:t]);return n.join("")});function s(e){return 0==(e&e-1)&&0!==e}function o(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}function h(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e}function c(e){var t={};for(var i in e){var n=e[i];Array.isArray(n)?t[i]=n.slice():t[i]=n}return t}var u,l,d,p,f,_,m,v,g,M,E,S,y,x,w,T,A,b,N,P,L,R,C,O,U,F,I,D,B,z,G,V={MESH:"mesh",SKINNED_MESH:"skinned_mesh",LIGHT:"light",CAMERA:"camera",SCENE:"scene",GROUP:"group",CANVAS2D:"canvas2d"},H={AMBIENT:"ambient",DIRECT:"direct",POINT:"point",SPOT:"spot"},k={BASIC:"basic",LAMBERT:"lambert",PHONG:"phong",PBR:"pbr",PBR2:"pbr2",POINT:"point",LINE:"line",CANVAS2D:"canvas2d",SHADER:"shader",DEPTH:"depth",DISTANCE:"distance"},j={NORMAL:"normal",EXP2:"exp2"},X={NONE:"none",NORMAL:"normal",ADD:"add",CUSTOM:"custom"},W={ADD:32774,SUBTRACT:32778,REVERSE_SUBTRACT:32779},Y={ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775},q={NONE:"none",FRONT:"front",BACK:"back",FRONT_AND_BACK:"front_and_back"},Z={FRONT:"front",BACK:"back",DOUBLE:"double"},K={SMOOTH_SHADING:"smooth_shading",FLAT_SHADING:"flat_shading"},Q={TEXTURE_2D:3553,TEXTURE_CUBE_MAP:34067,TEXTURE_3D:32879},$={DEPTH_COMPONENT:6402,DEPTH_STENCIL:34041,ALPHA:6406,RED:6403,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,R8:33321,RGBA8:32856,RGBA16F:34842,RGBA32F:34836,DEPTH_COMPONENT16:33189,DEPTH_COMPONENT24:33190,DEPTH_COMPONENT32F:36012,DEPTH24_STENCIL8:35056,DEPTH32F_STENCIL8:36013},J={BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,HALF_FLOAT:36193,UNSIGNED_INT_24_8:34042,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FLOAT_32_UNSIGNED_INT_24_8_REV:36269},ee={NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987},te={REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648},ie={LEQUAL:515,GEQUAL:518,LESS:513,GREATER:516,EQUAL:514,NOTEQUAL:517,ALWAYS:519,NEVER:512},ne={FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_2D_SHADOW:35682,SAMPLER_CUBE:35680,SAMPLER_CUBE_SHADOW:36293,SAMPLER_3D:35679,BYTE:65535,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126},re={FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,FLOAT:5126,BYTE:65535,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123},ae={HARD:"hard",POISSON_SOFT:"poisson_soft",PCF3_SOFT:"pcf3_soft",PCF5_SOFT:"pcf5_soft",PCSS16_SOFT:"pcss16_soft",PCSS32_SOFT:"pcss32_soft",PCSS64_SOFT:"pcss64_soft"},se={LINEAR:"linear",SRGB:"sRGB",RGBE:"RGBE",RGBM7:"RGBM7",RGBM16:"RGBM16",RGBD:"RGBD",GAMMA:"Gamma"},oe={MULTIPLY:"ENVMAP_BLENDING_MULTIPLY",MIX:"ENVMAP_BLENDING_MIX",ADD:"ENVMAP_BLENDING_ADD"},he={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},ce={NONE:0,RGB:1,RGBA:2},ue={COLOR_ATTACHMENT0:36064,COLOR_ATTACHMENT1:36065,COLOR_ATTACHMENT2:36066,COLOR_ATTACHMENT3:36067,COLOR_ATTACHMENT4:36068,COLOR_ATTACHMENT5:36069,COLOR_ATTACHMENT6:36070,COLOR_ATTACHMENT7:36071,COLOR_ATTACHMENT8:36072,COLOR_ATTACHMENT9:36073,COLOR_ATTACHMENT10:577040,COLOR_ATTACHMENT11:577041,COLOR_ATTACHMENT12:577042,COLOR_ATTACHMENT13:577043,COLOR_ATTACHMENT14:577044,COLOR_ATTACHMENT15:577045,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306};function le(){this.eventMap={}}function de(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function pe(e,t,i){this.x=e||0,this.y=t||0,this.z=i||0}function fe(e,t){this.origin=void 0!==e?e:new pe,this.direction=void 0!==t?t:new pe}function _e(e,t,i,n){this.ray=new fe(e,t),this.near=i||0,this.far=n||1/0}function me(e,t){return e.distance-t.distance}function ve(e,t,i,n){if(e.raycast(t,i),!0===n)for(var r=e.children,a=0,s=r.length;a<s;a++)ve(r[a],t,i,!0)}function ge(e,t,i,n){this._x=e||0,this._y=t||0,this._z=i||0,this._order=n||ge.DefaultOrder}function Me(e,t){this.x=e||0,this.y=t||0}function Ee(e,t,i,n){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==n?n:1}function Se(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1])}function ye(e,t,i,n){this._x=e||0,this._y=t||0,this._z=i||0,this._w=void 0!==n?n:1}function xe(e,t){this.min=void 0!==e?e:new Me(1/0,1/0),this.max=void 0!==t?t:new Me(-1/0,-1/0)}function we(e,t){this.min=void 0!==e?e:new pe(1/0,1/0,1/0),this.max=void 0!==t?t:new pe(-1/0,-1/0,-1/0)}function Te(e,t){this.center=void 0!==e?e:new pe,this.radius=void 0!==t?t:0}function Ae(e,t){this.normal=void 0!==e?e:new pe(1,0,0),this.constant=void 0!==t?t:0}function be(e,t,i,n,r,a){this.planes=[void 0!==e?e:new Ae,void 0!==t?t:new Ae,void 0!==i?i:new Ae,void 0!==n?n:new Ae,void 0!==r?r:new Ae,void 0!==a?a:new Ae]}function Ne(e,t,i){return this.r=0,this.g=0,void(this.b=0)===t&&void 0===i?this.setHex(e):this.setRGB(e,t,i)}function Pe(e,t,i){return i<0&&(i+=1),1<i&&(i-=1),i<1/6?e+6*(t-e)*i:i<.5?t:i<2/3?e+6*(t-e)*(2/3-i):e}function Le(e,t,i){this.a=void 0!==e?e:new pe,this.b=void 0!==t?t:new pe,this.c=void 0!==i?i:new pe}function Re(e,t){this.posPoints=void 0,this.ctrlPoints=void 0,this.segCount=0,this.set(e,t)}function Ce(e,t,i){this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==i?i:0}function Oe(){le.call(this),this.uuid=a(),this.textureType="",this.mipmaps=[],this.border=0,this.format=$.RGBA,this.internalformat=null,this.type=J.UNSIGNED_BYTE,this.magFilter=ee.LINEAR,this.minFilter=ee.LINEAR_MIPMAP_LINEAR,this.wrapS=te.CLAMP_TO_EDGE,this.wrapT=te.CLAMP_TO_EDGE,this.anisotropy=1,this.compare=void 0,this.generateMipmaps=!0,this.encoding=se.LINEAR,this.flipY=!0,this.version=0}function Ue(e,t,i){var n=this,r=!1,a=0,s=0,o=void 0;this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){s++,!1===r&&void 0!==n.onStart&&n.onStart(e,a,s),r=!0},this.itemEnd=function(e){a++,void 0!==n.onProgress&&n.onProgress(e,a,s),a===s&&(r=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this}}Object.assign(le.prototype,{addEventListener:function(e,t,i){var n=this.eventMap[e];(n=n||(this.eventMap[e]=[])).push({listener:t,thisObject:i||this})},removeEventListener:function(e,t,i){var n=this.eventMap[e];if(n)for(var r=0,a=n.length;r<a;r++){var s=n[r];if(s.listener==t&&s.thisObject==(i||this)){n.splice(r,1);break}}},dispatchEvent:function(e){(e.target=this).notifyListener(e)},notifyListener:function(e){var t=this.eventMap[e.type];if(t)for(var i=0,n=t.length;i<n;i++){var r=t[i];r.listener.call(r.thisObject,e)}}}),Object.assign(de.prototype,{identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},set:function(e,t,i,n,r,a,s,o,h,c,u,l,d,p,f,_){var m=this.elements;return m[0]=e,m[4]=t,m[8]=i,m[12]=n,m[1]=r,m[5]=a,m[9]=s,m[13]=o,m[2]=h,m[6]=c,m[10]=u,m[14]=l,m[3]=d,m[7]=p,m[11]=f,m[15]=_,this},copy:function(e){return this.elements.set(e.elements),this},makeTranslation:function(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var i=e.elements,n=t.elements,r=this.elements,a=i[0],s=i[4],o=i[8],h=i[12],c=i[1],u=i[5],l=i[9],d=i[13],p=i[2],f=i[6],_=i[10],m=i[14],v=i[3],g=i[7],M=i[11],E=i[15],S=n[0],y=n[4],x=n[8],w=n[12],T=n[1],A=n[5],b=n[9],N=n[13],P=n[2],L=n[6],R=n[10],C=n[14],O=n[3],U=n[7],F=n[11],I=n[15];return r[0]=a*S+s*T+o*P+h*O,r[4]=a*y+s*A+o*L+h*U,r[8]=a*x+s*b+o*R+h*F,r[12]=a*w+s*N+o*C+h*I,r[1]=c*S+u*T+l*P+d*O,r[5]=c*y+u*A+l*L+d*U,r[9]=c*x+u*b+l*R+d*F,r[13]=c*w+u*N+l*C+d*I,r[2]=p*S+f*T+_*P+m*O,r[6]=p*y+f*A+_*L+m*U,r[10]=p*x+f*b+_*R+m*F,r[14]=p*w+f*N+_*C+m*I,r[3]=v*S+g*T+M*P+E*O,r[7]=v*y+g*A+M*L+E*U,r[11]=v*x+g*b+M*R+E*F,r[15]=v*w+g*N+M*C+E*I,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},inverse:function(){return this.getInverse(this)},getInverse:function(e){var t=this.elements,i=e.elements,n=i[0],r=i[1],a=i[2],s=i[3],o=i[4],h=i[5],c=i[6],u=i[7],l=i[8],d=i[9],p=i[10],f=i[11],_=i[12],m=i[13],v=i[14],g=i[15],M=d*v*u-m*p*u+m*c*f-h*v*f-d*c*g+h*p*g,E=_*p*u-l*v*u-_*c*f+o*v*f+l*c*g-o*p*g,S=l*m*u-_*d*u+_*h*f-o*m*f-l*h*g+o*d*g,y=_*d*c-l*m*c-_*h*p+o*m*p+l*h*v-o*d*v,x=n*M+r*E+a*S+s*y;if(0==x)return console.warn("can't invert matrix, determinant is 0"),this.identity();var w=1/x;return t[0]=M*w,t[1]=(m*p*s-d*v*s-m*a*f+r*v*f+d*a*g-r*p*g)*w,t[2]=(h*v*s-m*c*s+m*a*u-r*v*u-h*a*g+r*c*g)*w,t[3]=(d*c*s-h*p*s-d*a*u+r*p*u+h*a*f-r*c*f)*w,t[4]=E*w,t[5]=(l*v*s-_*p*s+_*a*f-n*v*f-l*a*g+n*p*g)*w,t[6]=(_*c*s-o*v*s-_*a*u+n*v*u+o*a*g-n*c*g)*w,t[7]=(o*p*s-l*c*s+l*a*u-n*p*u-o*a*f+n*c*f)*w,t[8]=S*w,t[9]=(_*d*s-l*m*s-_*r*f+n*m*f+l*r*g-n*d*g)*w,t[10]=(o*m*s-_*h*s+_*r*u-n*m*u-o*r*g+n*h*g)*w,t[11]=(l*h*s-o*d*s-l*r*u+n*d*u+o*r*f-n*h*f)*w,t[12]=y*w,t[13]=(l*m*a-_*d*a+_*r*p-n*m*p-l*r*v+n*d*v)*w,t[14]=(_*h*a-o*m*a-_*r*c+n*m*c+o*r*v-n*h*v)*w,t[15]=(o*d*a-l*h*a+l*r*c-n*d*c-o*r*p+n*h*p)*w,this},transform:(_=new de,function(e,t,i){var n=i.toMatrix4(_).elements,r=this.elements;return r[0]=n[0]*t.x,r[1]=n[1]*t.x,r[2]=n[2]*t.x,r[3]=0,r[4]=n[4]*t.y,r[5]=n[5]*t.y,r[6]=n[6]*t.y,r[7]=0,r[8]=n[8]*t.z,r[9]=n[9]*t.z,r[10]=n[10]*t.z,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}),makeRotationFromQuaternion:function(e){var t=this.elements,i=e.x,n=e.y,r=e.z,a=e.w,s=i+i,o=n+n,h=r+r,c=i*s,u=i*o,l=i*h,d=n*o,p=n*h,f=r*h,_=a*s,m=a*o,v=a*h;return t[0]=1-(d+f),t[4]=u-v,t[8]=l+m,t[1]=u+v,t[5]=1-(c+f),t[9]=p-_,t[2]=l-m,t[6]=p+_,t[10]=1-(c+d),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAtRH:(d=new pe,p=new pe,f=new pe,function(e,t,i){var n=this.elements;return f.subVectors(e,t),0===f.getLengthSquared()&&(f.z=1),f.normalize(),d.crossVectors(i,f),0===d.getLengthSquared()&&(1===Math.abs(i.z)?f.x+=1e-4:f.z+=1e-4,f.normalize(),d.crossVectors(i,f)),d.normalize(),p.crossVectors(f,d),n[0]=d.x,n[4]=p.x,n[8]=f.x,n[1]=d.y,n[5]=p.y,n[9]=f.y,n[2]=d.z,n[6]=p.z,n[10]=f.z,this}),decompose:(u=new pe,l=new de,function(e,t,i){var n=this.elements,r=u.set(n[0],n[1],n[2]).getLength(),a=u.set(n[4],n[5],n[6]).getLength(),s=u.set(n[8],n[9],n[10]).getLength();this.determinant()<0&&(r=-r),e.x=n[12],e.y=n[13],e.z=n[14],l.elements.set(this.elements);var o=1/r,h=1/a,c=1/s;return l.elements[0]*=o,l.elements[1]*=o,l.elements[2]*=o,l.elements[4]*=h,l.elements[5]*=h,l.elements[6]*=h,l.elements[8]*=c,l.elements[9]*=c,l.elements[10]*=c,t.setFromRotationMatrix(l),i.x=r,i.y=a,i.z=s,this}),determinant:function(){var e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],a=e[1],s=e[5],o=e[9],h=e[13],c=e[2],u=e[6],l=e[10],d=e[14];return e[3]*(+r*o*u-n*h*u-r*s*l+i*h*l+n*s*d-i*o*d)+e[7]*(+t*o*d-t*h*l+r*a*l-n*a*d+n*h*c-r*o*c)+e[11]*(+t*h*u-t*s*d-r*a*u+i*a*d+r*s*c-i*h*c)+e[15]*(-n*s*c-t*o*u+t*s*l+n*a*u-i*a*l+i*o*c)},fromArray:function(e,t){void 0===t&&(t=0);for(var i=0;i<16;i++)this.elements[i]=e[i+t];return this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}),Object.assign(pe.prototype,{lerpVectors:function(e,t,i){return this.subVectors(t,e).multiplyScalar(i).add(e)},set:function(e,t,i){return this.x=e||0,this.y=t||0,this.z=i||0,this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},getLength:function(){return Math.sqrt(this.getLengthSquared())},getLengthSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z},normalize:function(e){e=e||1;var t=this.getLength();if(0!=t){var i=e/t;return this.x*=i,this.y*=i,this.z*=i,this}},subtract:function(e,t){return(t=t||new pe).set(this.x-e.x,this.y-e.y,this.z-e.z),t},multiply:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this},crossVectors:function(e,t){var i=e.x,n=e.y,r=e.z,a=t.x,s=t.y,o=t.z;return this.x=n*o-r*s,this.y=r*a-i*o,this.z=i*s-n*a,this},cross:function(e){var t=this.x,i=this.y,n=this.z;return this.x=i*e.z-n*e.y,this.y=n*e.x-t*e.z,this.z=t*e.y-i*e.x,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},applyQuaternion:function(e){var t=this.x,i=this.y,n=this.z,r=e._x,a=e._y,s=e._z,o=e._w,h=o*t+a*n-s*i,c=o*i+s*t-r*n,u=o*n+r*i-a*t,l=-r*t-a*i-s*n;return this.x=h*o+l*-r+c*-s-u*-a,this.y=c*o+l*-a+u*-r-h*-s,this.z=u*o+l*-s+h*-a-c*-r,this},applyMatrix4:function(e){var t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n+r[12],this.y=r[1]*t+r[5]*i+r[9]*n+r[13],this.z=r[2]*t+r[6]*i+r[10]*n+r[14],this},applyMatrix3:function(e){var t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this},transformDirection:function(e){var t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()},setFromMatrixPosition:function(e){return this.setFromMatrixColumn(e,3)},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},add:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},sub:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},setFromSpherical:function(e){var t=Math.sin(e.phi)*e.radius;return this.x=t*Math.sin(e.theta),this.y=Math.cos(e.phi)*e.radius,this.z=t*Math.cos(e.theta),this},unproject:function(e){return void 0===m&&(m=new de),m.multiplyMatrices(e.worldMatrix,m.getInverse(e.projectionMatrix)),this.applyProjection(m)},applyProjection:function(e){var t=this.x,i=this.y,n=this.z,r=e.elements,a=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*a,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*a,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*a,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},clone:function(){return new pe(this.x,this.y,this.z)}}),Object.assign(fe.prototype,{set:function(e,t){this.origin.copy(e),this.direction.copy(t)},at:function(e,t){return(t||new pe).copy(this.direction).multiplyScalar(e).add(this.origin)},intersectsSphere:(S=new pe,function(e,t){S.subVectors(e.center,this.origin);var i=S.dot(this.direction),n=S.dot(S)-i*i,r=e.radius*e.radius;if(r<n)return null;var a=Math.sqrt(r-n),s=i-a,o=i+a;return s<0&&o<0?null:s<0?this.at(o,t):this.at(s,t)}),intersectsBox:function(e,t){var i,n,r,a,s,o,h=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,l=this.origin;return n=0<=h?(i=(e.min.x-l.x)*h,(e.max.x-l.x)*h):(i=(e.max.x-l.x)*h,(e.min.x-l.x)*h),(a=0<=c?(r=(e.min.y-l.y)*c,(e.max.y-l.y)*c):(r=(e.max.y-l.y)*c,(e.min.y-l.y)*c))<i||n<r?null:((i<r||i!=i)&&(i=r),(a<n||n!=n)&&(n=a),(o=0<=u?(s=(e.min.z-l.z)*u,(e.max.z-l.z)*u):(s=(e.max.z-l.z)*u,(e.min.z-l.z)*u))<i||n<s?null:((i<s||i!=i)&&(i=s),(o<n||n!=n)&&(n=o),n<0?null:this.at(0<=i?i:n,t)))},intersectTriangle:(v=new pe,g=new pe,M=new pe,E=new pe,function(e,t,i,n,r){g.subVectors(t,e),M.subVectors(i,e),E.crossVectors(g,M);var a,s=this.direction.dot(E);if(0<s){if(n)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}v.subVectors(this.origin,e);var o=a*this.direction.dot(M.crossVectors(v,M));if(o<0)return null;var h=a*this.direction.dot(g.cross(v));if(h<0)return null;if(s<o+h)return null;var c=-a*v.dot(E);return c<0?null:this.at(c/s,r)}),copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this}}),Object.assign(_e.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t,i){"orthographic"==(i=i||"perspective")?(this.ray.origin.set(e.x,e.y,t.projectionMatrix.elements[14]).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.worldMatrix)):(this.ray.origin.setFromMatrixPosition(t.worldMatrix),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize())},intersectObject:function(e,t){var i=[];return ve(e,this,i,t),i.sort(me),i},intersectObjects:function(e,t){var i=[];if(!1===Array.isArray(e))return console.warn("Raycaster.intersectObjects: objects is not an Array."),i;for(var n=0,r=e.length;n<r;n++)ve(e[n],this,i,t);return i.sort(me),i}}),ge.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],ge.DefaultOrder="XYZ",Object.defineProperties(ge.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this.onChangeCallback()}}}),Object.assign(ge.prototype,{copyFrom:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},set:function(e,t,i,n){return this._x=e||0,this._y=t||0,this._z=i||0,this._order=n||this._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,i){function n(e,t,i){return Math.max(t,Math.min(i,e))}var r=e.elements,a=r[0],s=r[4],o=r[8],h=r[1],c=r[5],u=r[9],l=r[2],d=r[6],p=r[10];return"XYZ"===(t=t||this._order)?(this._y=Math.asin(n(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(d,c),this._z=0)):"YXZ"===t?(this._x=Math.asin(-n(u,-1,1)),Math.abs(u)<.99999?(this._y=Math.atan2(o,p),this._z=Math.atan2(h,c)):(this._y=Math.atan2(-l,a),this._z=0)):"ZXY"===t?(this._x=Math.asin(n(d,-1,1)),Math.abs(d)<.99999?(this._y=Math.atan2(-l,p),this._z=Math.atan2(-s,c)):(this._y=0,this._z=Math.atan2(h,a))):"ZYX"===t?(this._y=Math.asin(-n(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(d,p),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-s,c))):"YZX"===t?(this._z=Math.asin(n(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-l,a)):(this._x=0,this._y=Math.atan2(o,p))):"XZY"===t?(this._z=Math.asin(-n(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(d,c),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-u,p),this._y=0)):console.warn("given unsupported order: "+t),this._order=t,!1!==i&&this.onChangeCallback(),this},setFromQuaternion:(y=new de,function(e,t,i){return e.toMatrix4(y),this.setFromRotationMatrix(y,t,i)}),onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(Me.prototype,{set:function(e,t){return this.x=e||0,this.y=t||0,this},lerpVectors:function(e,t,i){return this.subVectors(t,e).multiplyScalar(i).add(e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},getLength:function(){return Math.sqrt(this.getLengthSquared())},getLengthSquared:function(){return this.x*this.x+this.y*this.y},normalize:function(e){e=e||1;var t=this.getLength();if(0!=t){var i=e/t;return this.x*=i,this.y*=i,this}},subtract:function(e,t){return(t=t||new Me).set(this.x-e.x,this.y-e.y),t},sub:function(e){return this.x-=e.x,this.y-=e.y,this},copy:function(e){return this.x=e.x,this.y=e.y,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y;return t*t+i*i},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},add:function(e){return this.x+=e.x,this.y+=e.y,this},angle:function(){var e=Math.atan2(this.y,this.x);return e<0&&(e+=2*Math.PI),e},clone:function(){return new Me(this.x,this.y)}}),Object.assign(Ee.prototype,{lerpVectors:function(e,t,i){return this.subVectors(t,e).multiplyScalar(i).add(e)},set:function(e,t,i,n){return this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==n?n:1,this},normalize:function(){return this.multiplyScalar(1/(this.getLength()||1))},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},getLengthSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},getLength:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},applyMatrix4:function(e){var t=this.x,i=this.y,n=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*n+a[12]*r,this.y=a[1]*t+a[5]*i+a[9]*n+a[13]*r,this.z=a[2]*t+a[6]*i+a[10]*n+a[14]*r,this.w=a[3]*t+a[7]*i+a[11]*n+a[15]*r,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},add:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}}),Object.assign(Se.prototype,{identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},inverse:function(){return this.getInverse(this)},getInverse:function(e){var t=e.elements,i=this.elements,n=t[0],r=t[1],a=t[2],s=t[3],o=t[4],h=t[5],c=t[6],u=t[7],l=t[8],d=l*o-h*u,p=h*c-l*s,f=u*s-o*c,_=n*d+r*p+a*f;if(0==_){return console.warn("zen3d.Matrix3: .getInverse() can't invert matrix, determinant is 0"),this.identity()}var m=1/_;return i[0]=d*m,i[1]=(a*u-l*r)*m,i[2]=(h*r-a*o)*m,i[3]=p*m,i[4]=(l*n-a*c)*m,i[5]=(a*s-h*n)*m,i[6]=f*m,i[7]=(r*c-u*n)*m,i[8]=(o*n-r*s)*m,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},set:function(e,t,i,n,r,a,s,o,h){var c=this.elements;return c[0]=e,c[3]=t,c[6]=i,c[1]=n,c[4]=r,c[7]=a,c[2]=s,c[5]=o,c[8]=h,this},copy:function(e){return this.elements.set(e.elements),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var i=e.elements,n=t.elements,r=this.elements,a=i[0],s=i[3],o=i[6],h=i[1],c=i[4],u=i[7],l=i[2],d=i[5],p=i[8],f=n[0],_=n[3],m=n[6],v=n[1],g=n[4],M=n[7],E=n[2],S=n[5],y=n[8];return r[0]=a*f+s*v+o*E,r[3]=a*_+s*g+o*S,r[6]=a*m+s*M+o*y,r[1]=h*f+c*v+u*E,r[4]=h*_+c*g+u*S,r[7]=h*m+c*M+u*y,r[2]=l*f+d*v+p*E,r[5]=l*_+d*g+p*S,r[8]=l*m+d*M+p*y,this},transform:function(e,t,i,n,r,a,s){var o=this.elements,h=1,c=0;if(r%360){var u=r;h=Math.cos(u),c=Math.sin(u)}return o[0]=h*i,o[3]=-c*n,o[6]=e,o[1]=c*i,o[4]=h*n,o[7]=t,o[2]=0,o[5]=0,o[8]=1,(a||s)&&(o[6]-=a*o[0]+s*o[3],o[7]-=a*o[1]+s*o[4]),this},setUvTransform:function(e,t,i,n,r,a,s){var o=Math.cos(r),h=Math.sin(r);this.set(i*o,i*h,-i*(o*a+h*s)+a+e,-n*h,n*o,-n*(-h*a+o*s)+s+t,0,0,1)},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}}),Object.defineProperties(ye.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this.onChangeCallback()}}}),Object.assign(ye.prototype,{normalize:function(e){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},lerpQuaternions:function(e,t,i){var n=e._w,r=e._x,a=e._y,s=e._z,o=t._w,h=t._x,c=t._y,u=t._z,l=n*o+r*h+a*c+s*u;l<0&&(l=-l,o=-o,h=-h,c=-c,u=-u),this._w=n+i*(o-n),this._x=r+i*(h-r),this._y=a+i*(c-a),this._z=s+i*(u-s);var d=1/Math.sqrt(this._w*this._w+this._x*this._x+this._y*this._y+this._z*this._z);return this._w*=d,this._x*=d,this._y*=d,this._z*=d,this.onChangeCallback(),this},slerpQuaternions:function(e,t,i){var n=e._w,r=e._x,a=e._y,s=e._z,o=t._w,h=t._x,c=t._y,u=t._z,l=n*o+r*h+a*c+s*u;if(l<0&&(l=-l,o=-o,h=-h,c=-c,u=-u),l<.95){var d=Math.acos(l),p=1/Math.sin(d),f=Math.sin(d*(1-i))*p,_=Math.sin(d*i)*p;this._w=n*f+o*_,this._x=r*f+h*_,this._y=a*f+c*_,this._z=s*f+u*_}else{this._w=n+i*(o-n),this._x=r+i*(h-r),this._y=a+i*(c-a),this._z=s+i*(u-s);var m=1/Math.sqrt(this._w*this._w+this._x*this._x+this._y*this._y+this._z*this._z);this._w*=m,this._x*=m,this._y*=m,this._z*=m}return this.onChangeCallback(),this},set:function(e,t,i,n){return this._x=e||0,this._y=t||0,this._z=i||0,this._w=void 0!==n?n:1,this.onChangeCallback(),this},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=void 0!==e.w?e.w:1,this.onChangeCallback(),this},setFromEuler:function(e,t){var i=Math.cos(e._x/2),n=Math.cos(e._y/2),r=Math.cos(e._z/2),a=Math.sin(e._x/2),s=Math.sin(e._y/2),o=Math.sin(e._z/2),h=e._order;return"XYZ"===h?(this._x=a*n*r+i*s*o,this._y=i*s*r-a*n*o,this._z=i*n*o+a*s*r,this._w=i*n*r-a*s*o):"YXZ"===h?(this._x=a*n*r+i*s*o,this._y=i*s*r-a*n*o,this._z=i*n*o-a*s*r,this._w=i*n*r+a*s*o):"ZXY"===h?(this._x=a*n*r-i*s*o,this._y=i*s*r+a*n*o,this._z=i*n*o+a*s*r,this._w=i*n*r-a*s*o):"ZYX"===h?(this._x=a*n*r-i*s*o,this._y=i*s*r+a*n*o,this._z=i*n*o-a*s*r,this._w=i*n*r+a*s*o):"YZX"===h?(this._x=a*n*r+i*s*o,this._y=i*s*r+a*n*o,this._z=i*n*o-a*s*r,this._w=i*n*r-a*s*o):"XZY"===h&&(this._x=a*n*r-i*s*o,this._y=i*s*r-a*n*o,this._z=i*n*o+a*s*r,this._w=i*n*r+a*s*o),!1!==t&&this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,i=e.elements,n=i[0],r=i[4],a=i[8],s=i[1],o=i[5],h=i[9],c=i[2],u=i[6],l=i[10],d=n+o+l;return 0<d?(t=.5/Math.sqrt(d+1),this._w=.25/t,this._x=(u-h)*t,this._y=(a-c)*t,this._z=(s-r)*t):o<n&&l<n?(t=2*Math.sqrt(1+n-o-l),this._w=(u-h)/t,this._x=.25*t,this._y=(r+s)/t,this._z=(a+c)/t):l<o?(t=2*Math.sqrt(1+o-n-l),this._w=(a-c)/t,this._x=(r+s)/t,this._y=.25*t,this._z=(h+u)/t):(t=2*Math.sqrt(1+l-n-o),this._w=(s-r)/t,this._x=(a+c)/t,this._y=(h+u)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:(w=new pe,function(e,t){return void 0===w&&(w=new pe),(x=e.dot(t)+1)<1e-6?(x=0,Math.abs(e.x)>Math.abs(e.z)?w.set(-e.y,e.x,0):w.set(0,-e.z,e.y)):w.crossVectors(e,t),this._x=w.x,this._y=w.y,this._z=w.z,this._w=x,this.normalize()}),multiply:function(e){return this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var i=e._x,n=e._y,r=e._z,a=e._w,s=t._x,o=t._y,h=t._z,c=t._w;return this._x=i*c+a*s+n*h-r*o,this._y=n*c+a*o+r*s-i*h,this._z=r*c+a*h+i*o-n*s,this._w=a*c-i*s-n*o-r*h,this.onChangeCallback(),this},toMatrix4:function(e){var t=(e=e||new de).elements,i=2*this._x*this._y,n=2*this._x*this._z,r=2*this._x*this._w,a=2*this._y*this._z,s=2*this._y*this._w,o=2*this._z*this._w,h=this._x*this._x,c=this._y*this._y,u=this._z*this._z,l=this._w*this._w;return t[0]=h-c-u+l,t[4]=i-o,t[8]=n+s,t[12]=0,t[1]=i+o,t[5]=c-h-u+l,t[9]=a-r,t[13]=0,t[2]=n-s,t[6]=a+r,t[10]=-h-c+u+l,t[14]=0,t[3]=0,t[7]=0,t[11]=0,t[15]=1,e},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},setFromAxisAngle:function(e,t){var i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this.onChangeCallback(),this},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(ye,{slerpFlat:function(e,t,i,n,r,a,s){var o=i[n+0],h=i[n+1],c=i[n+2],u=i[n+3],l=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(u!==f||o!==l||h!==d||c!==p){var _=1-s,m=o*l+h*d+c*p+u*f,v=0<=m?1:-1,g=1-m*m;if(g>Number.EPSILON){var M=Math.sqrt(g),E=Math.atan2(M,m*v);_=Math.sin(_*E)/M,s=Math.sin(s*E)/M}var S=s*v;if(o=o*_+l*S,h=h*_+d*S,c=c*_+p*S,u=u*_+f*S,_===1-s){var y=1/Math.sqrt(o*o+h*h+c*c+u*u);o*=y,h*=y,c*=y,u*=y}}e[t]=o,e[t+1]=h,e[t+2]=c,e[t+3]=u}}),Object.assign(xe.prototype,{set:function(e,t,i,n){this.min.set(e,t),this.max.set(i,n)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}}),Object.assign(we.prototype,{set:function(e,t){this.min.copy(e),this.max.copy(t)},setFromPoints:function(e){this.makeEmpty();for(var t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByBox3:function(e){return this.min.min(e.min),this.max.max(e.max),this},setFromArray:function(e,t){for(var i=1/0,n=1/0,r=1/0,a=-1/0,s=-1/0,o=-1/0,h=void 0!==t?t:3,c=0,u=e.length;c<u;c+=h){var l=e[c],d=e[c+1],p=e[c+2];l<i&&(i=l),d<n&&(n=d),p<r&&(r=p),a<l&&(a=l),s<d&&(s=d),o<p&&(o=p)}return this.min.set(i,n,r),this.max.set(a,s,o),this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},getCenter:function(e){var t=e||new pe;return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},applyMatrix4:(T=[new pe,new pe,new pe,new pe,new pe,new pe,new pe,new pe],function(e){return this.isEmpty()||(T[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),T[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),T[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),T[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),T[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),T[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),T[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),T[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(T)),this}),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}}),Object.assign(Te.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromArray:(A=new we,b=new pe,function(e,t){var i=void 0!==t?t:3,n=this.center;A.setFromArray(e,i).getCenter(n);for(var r=0,a=0,s=e.length;a<s;a+=i){var o=e[a],h=e[a+1],c=e[a+2];b.set(o,h,c),r=Math.max(r,n.distanceToSquared(b))}return this.radius=Math.sqrt(r),this}),applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},getBoundingBox:function(e){var t=e||new we;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},clone:function(){return(new Te).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this}}),Object.assign(Ae.prototype,{set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this},normalize:function(){var e=1/this.normal.getLength();return this.normal.multiplyScalar(e),this.constant*=e,this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},coplanarPoint:function(e){return(e||new pe).copy(this.normal).multiplyScalar(-this.constant)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},applyMatrix4:(N=new pe,P=new Se,function(e,t){var i=t||P.setFromMatrix4(e).inverse().transpose(),n=this.coplanarPoint(N).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this})}),Object.assign(be.prototype,{set:function(e,t,i,n,r,a){var s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(i),s[3].copy(n),s[4].copy(r),s[5].copy(a),this},setFromMatrix:function(e){var t=this.planes,i=e.elements,n=i[0],r=i[1],a=i[2],s=i[3],o=i[4],h=i[5],c=i[6],u=i[7],l=i[8],d=i[9],p=i[10],f=i[11],_=i[12],m=i[13],v=i[14],g=i[15];return t[0].setComponents(s-n,u-o,f-l,g-_).normalize(),t[1].setComponents(s+n,u+o,f+l,g+_).normalize(),t[2].setComponents(s+r,u+h,f+d,g+m).normalize(),t[3].setComponents(s-r,u-h,f-d,g-m).normalize(),t[4].setComponents(s-a,u-c,f-p,g-v).normalize(),t[5].setComponents(s+a,u+c,f+p,g+v).normalize(),this},intersectsSphere:function(e){for(var t=this.planes,i=e.center,n=-e.radius,r=0;r<6;r++){if(t[r].distanceToPoint(i)<n)return!1}return!0},intersectsBox:(L=new pe,R=new pe,function(e){for(var t=this.planes,i=0;i<6;i++){var n=t[i];L.x=0<n.normal.x?e.min.x:e.max.x,R.x=0<n.normal.x?e.max.x:e.min.x,L.y=0<n.normal.y?e.min.y:e.max.y,R.y=0<n.normal.y?e.max.y:e.min.y,L.z=0<n.normal.z?e.min.z:e.max.z,R.z=0<n.normal.z?e.max.z:e.min.z;var r=n.distanceToPoint(L),a=n.distanceToPoint(R);if(r<0&&a<0)return!1}return!0}),clone:function(){return(new this.constructor).copy(this)},copy:function(e){for(var t=this.planes,i=0;i<6;i++)t[i].copy(e.planes[i]);return this}}),Object.assign(Ne.prototype,{lerpColors:function(e,t,i){this.r=i*(t.r-e.r)+e.r,this.g=i*(t.g-e.g)+e.g,this.b=i*(t.b-e.b)+e.b},lerp:function(e,t){this.lerpColors(this,e,t)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,i){return this.r=e,this.g=t,this.b=i,this},setHSL:function(e,t,i){if(e=function(e,t){return(e%t+t)%t}(e,1),t=Math.max(0,Math.min(1,t)),i=Math.max(0,Math.min(1,i)),0===t)this.r=this.g=this.b=i;else{var n=i<=.5?i*(1+t):i+t-i*t,r=2*i-n;this.r=Pe(r,n,e+1/3),this.g=Pe(r,n,e),this.b=Pe(r,n,e-1/3)}return this},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}}),Object.assign(Le.prototype,{set:function(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}}),Le.normal=(C=new pe,function(e,t,i,n){var r=n||new pe;r.subVectors(i,t),C.subVectors(e,t),r.cross(C);var a=r.getLengthSquared();return 0<a?r.multiplyScalar(1/Math.sqrt(a)):r.set(0,0,0)}),Le.barycoordFromPoint=(O=new pe,U=new pe,F=new pe,function(e,t,i,n,r){O.subVectors(n,t),U.subVectors(i,t),F.subVectors(e,t);var a=O.dot(O),s=O.dot(U),o=O.dot(F),h=U.dot(U),c=U.dot(F),u=a*h-s*s,l=r||new pe;if(0==u)return l.set(-2,-1,-1);var d=1/u,p=(h*o-s*c)*d,f=(a*c-s*o)*d;return l.set(1-p-f,f,p)}),Le.containsPoint=(I=new pe,function(e,t,i,n){var r=Le.barycoordFromPoint(e,t,i,n,I);return 0<=r.x&&0<=r.y&&r.x+r.y<=1}),Object.assign(Re.prototype,{set:function(e,t){this.posPoints=e,this.ctrlPoints=t,e.length!==t.length&&console.warn("Curve: posPoints and ctrlPoints's length not equal!"),this.segCount=e.length-1},calc:(D=new Me,B=new Me,z=new Me,G=new Me,function(e){for(var t=0;t<this.segCount;t++)if(e>=this.posPoints[t].x&&e<=this.posPoints[t+1].x){D.copy(this.posPoints[t]),z.copy(this.posPoints[t+1]),B.copy(this.ctrlPoints[t]),G.copy(this.ctrlPoints[t+1]);break}return D||D.copy(this.posPoints[this.posPoints.length-1]),B||B.copy(this.ctrlPoints[this.ctrlPoints.length-1]),z.copy(z||D),G.copy(G||B),e=(e-D.x)/(z.x-D.x),this._cubic_bezier(D.y,B.y,G.y,z.y,e)}),averageXSampler:function(e){e<2&&console.warn("Curve: sampler num less than 2!");for(var t=[],i=this.posPoints[0].x,n=this.posPoints[this.posPoints.length-1].x,r=(n-i)/(e-1),a=0,s=0;s<e;s++)a=s===e-1?n:i+s*r,t.push(a,this.calc(a));return t},_cubic_bezier:function(e,t,i,n,r){return e=this._mix(e,t,r),t=this._mix(t,i,r),i=this._mix(i,n,r),e=this._mix(e,t,r),t=this._mix(t,i,r),e=this._mix(e,t,r)},_mix:function(e,t,i){return e*(1-i)+t*i}}),Object.assign(Ce.prototype,{set:function(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},clone:function(){return(new this.constructor).copy(this)},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(e){return this.radius=e.getLength(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e.x,e.z),this.phi=Math.acos(Math.min(1,Math.max(-1,e.y/this.radius)))),this}}),Oe.prototype=Object.assign(Object.create(le.prototype),{constructor:Oe,isTexture:!0,clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.textureType=e.textureType,this.border=e.border,this.format=e.format,this.type=e.type,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.anisotropy=e.anisotropy,this.generateMipmaps=e.generateMipmaps,this.encoding=e.encoding,this.flipY=e.flipY,this.version=e.version,this},dispose:function(){this.dispatchEvent({type:"dispose"}),this.version=0}});var Fe=new Ue;function Ie(e){this.crossOrigin=void 0,this.path=void 0,this.manager=void 0!==e?e:Fe}function De(e){this.path=void 0,this.responseType=void 0,this.withCredentials=void 0,this.mimeType=void 0,this.requestHeader=void 0,this.manager=void 0!==e?e:Fe}function Be(e){this.manager=void 0!==e?e:Fe}function ze(e){this.manager=void 0!==e?e:Fe,this.type=zen3d.WEBGL_PIXEL_TYPE.UNSIGNED_BYTE}function Ge(){Oe.call(this),this.textureType=Q.TEXTURE_2D,this.image=null,this.offset=new Me,this.repeat=new Me(1,1),this.center=new Me,this.rotation=0,this.matrix=new Se,this.matrixAutoUpdate=!0,this.useUVTransform=!0}function He(){Oe.call(this),this.textureType=Q.TEXTURE_CUBE_MAP,this.images=[],this.flipY=!1}function ke(){Oe.call(this),this.textureType=Q.TEXTURE_3D,this.image={data:new Uint8Array(255,255,255,255,255,255,255,255),width:2,height:2,depth:2},this.format=$.RED,this.internalformat=$.R8,this.type=J.UNSIGNED_BYTE,this.flipY=!1}Object.assign(Ie.prototype,{load:function(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,a=document.createElementNS("http://www.w3.org/1999/xhtml","img");function s(){a.removeEventListener("load",s,!1),a.removeEventListener("error",o,!1),e&&e(this),r.manager.itemEnd(t)}function o(e){a.removeEventListener("load",s,!1),a.removeEventListener("error",o,!1),n&&n(e),r.manager.itemError(t),r.manager.itemEnd(t)}return a.addEventListener("load",s,!1),a.addEventListener("error",o,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(t),a.src=t,a},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(De.prototype,{load:function(i,n,t,r){void 0===i&&(i=""),null!=this.path&&(i=this.path+i),i=this.manager.resolveURL(i);var e,a=this,s=i.match(/^data:(.*?)(;base64)?,(.*)$/);if(s){var o=s[1],h=!!s[2],c=s[3];c=decodeURIComponent(c),h&&(c=atob(c));try{var u,l=(this.responseType||"").toLowerCase();switch(l){case"arraybuffer":case"blob":u=new ArrayBuffer(c.length);for(var d=new Uint8Array(u),p=0;p<c.length;p++)d[p]=c.charCodeAt(p);"blob"===l&&(u=new Blob([u],{type:o}));break;case"document":var f=new DOMParser;u=f.parseFromString(c,o);break;case"json":u=JSON.parse(c);break;default:u=c}setTimeout(function(){n&&n(u),a.manager.itemEnd(i)},0)}catch(e){setTimeout(function(){r&&r(e),a.manager.itemError(i),a.manager.itemEnd(i)},0)}}else{for(var _ in(e=new XMLHttpRequest).open("GET",i,!0),e.addEventListener("load",function(e){var t=e.target.response;200===this.status?n&&n(t):0===this.status?(console.warn("THREE.FileLoader: HTTP Status 0 received."),n&&n(t)):(r&&r(e),a.manager.itemError(i)),a.manager.itemEnd(i)},!1),void 0!==t&&e.addEventListener("progress",function(e){t(e)},!1),void 0!==r&&e.addEventListener("error",function(e){r(e),a.manager.itemError(i),a.manager.itemEnd(i)},!1),void 0!==this.responseType&&(e.responseType=this.responseType),void 0!==this.withCredentials&&(e.withCredentials=this.withCredentials),e.overrideMimeType&&e.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)e.setRequestHeader(_,this.requestHeader[_]);e.send(null)}return a.manager.itemStart(i),e},setPath:function(e){return this.path=e,this},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}}),Object.assign(Be.prototype,{load:function(e,t,i,n){var r=this,a=new De(this.manager);a.setResponseType("arraybuffer"),a.load(e,function(e){void 0!==t&&t(r.parse(e))},i,n)},parse:function(e){e.length<19&&console.error("TGALoader.parse: Not enough data to contain header.");var t=new Uint8Array(e),i=0,_={id_length:t[i++],colormap_type:t[i++],image_type:t[i++],colormap_index:t[i++]|t[i++]<<8,colormap_length:t[i++]|t[i++]<<8,colormap_size:t[i++],origin:[t[i++]|t[i++]<<8,t[i++]|t[i++]<<8],width:t[i++]|t[i++]<<8,height:t[i++]|t[i++]<<8,pixel_size:t[i++],flags:t[i++]};!function(e){switch(e.image_type){case 1:case 9:(256<e.colormap_length||24!==e.colormap_size||1!==e.colormap_type)&&console.error("TGALoader.parse.tgaCheckHeader: Invalid type colormap data for indexed type");break;case 2:case 3:case 10:case 11:e.colormap_type&&console.error("TGALoader.parse.tgaCheckHeader: Invalid type colormap data for colormap type");break;case 0:console.error("TGALoader.parse.tgaCheckHeader: No data");default:console.error('TGALoader.parse.tgaCheckHeader: Invalid type " '+e.image_type+'"')}(e.width<=0||e.height<=0)&&console.error("TGALoader.parse.tgaCheckHeader: Invalid image size"),8!==e.pixel_size&&16!==e.pixel_size&&24!==e.pixel_size&&32!==e.pixel_size&&console.error('TGALoader.parse.tgaCheckHeader: Invalid pixel size "'+e.pixel_size+'"')}(_),_.id_length+i>e.length&&console.error("TGALoader.parse: No data"),i+=_.id_length;var n=!1,r=!1,l=!1;switch(_.image_type){case 9:r=n=!0;break;case 1:r=!0;break;case 10:n=!0;break;case 2:break;case 11:l=n=!0;break;case 3:l=!0}var a=document.createElement("canvas");a.width=_.width,a.height=_.height;var s=a.getContext("2d"),o=s.createImageData(_.width,_.height),h=function(e,t,i,n,r){var a,s,o,h;if(s=i.pixel_size>>3,o=i.width*i.height*s,t&&(h=r.subarray(n,n+=i.colormap_length*(i.colormap_size>>3))),e){var c,u,l;a=new Uint8Array(o);for(var d=0,p=new Uint8Array(s);d<o;)if(u=1+(127&(c=r[n++])),128&c){for(l=0;l<s;++l)p[l]=r[n++];for(l=0;l<u;++l)a.set(p,d+l*s);d+=s*u}else{for(u*=s,l=0;l<u;++l)a[d+l]=r[n++];d+=u}}else a=r.subarray(n,n+=t?i.width*i.height:o);return{pixel_data:a,palettes:h}}(n,r,_,i,t);return function(e,t,i,n,r){var a,s,o,h,c,u;switch((48&_.flags)>>4){default:case 2:c=t,s=a=0,h=o=1,u=i;break;case 0:a=0,c=t,s=i-(o=1),u=h=-1;break;case 3:a=t-1,c=o=-1,s=0,h=1,u=i;break;case 1:a=t-1,s=i-1,u=h=c=o=-1}if(l)switch(_.pixel_size){case 8:!function(e,t,i,n,r,a,s,o){var h,c,u,l=0,d=_.width;for(u=t;u!==n;u+=i)for(c=r;c!==s;c+=a,l++)h=o[l],e[4*(c+d*u)+0]=h,e[4*(c+d*u)+1]=h,e[4*(c+d*u)+2]=h,e[4*(c+d*u)+3]=255}(e,s,h,u,a,o,c,n);break;case 16:!function(e,t,i,n,r,a,s,o){var h,c,u=0,l=_.width;for(c=t;c!==n;c+=i)for(h=r;h!==s;h+=a,u+=2)e[4*(h+l*c)+0]=o[u+0],e[4*(h+l*c)+1]=o[u+0],e[4*(h+l*c)+2]=o[u+0],e[4*(h+l*c)+3]=o[u+1]}(e,s,h,u,a,o,c,n);break;default:console.error("TGALoader.parse.getTgaRGBA: not support this format")}else switch(_.pixel_size){case 8:!function(e,t,i,n,r,a,s,o,h){var c,u,l,d=h,p=0,f=_.width;for(l=t;l!==n;l+=i)for(u=r;u!==s;u+=a,p++)c=o[p],e[4*(u+f*l)+3]=255,e[4*(u+f*l)+2]=d[3*c+0],e[4*(u+f*l)+1]=d[3*c+1],e[4*(u+f*l)+0]=d[3*c+2]}(e,s,h,u,a,o,c,n,r);break;case 16:!function(e,t,i,n,r,a,s,o){var h,c,u,l=0,d=_.width;for(u=t;u!==n;u+=i)for(c=r;c!==s;c+=a,l+=2)h=o[l+0]+(o[l+1]<<8),e[4*(c+d*u)+0]=(31744&h)>>7,e[4*(c+d*u)+1]=(992&h)>>2,e[4*(c+d*u)+2]=(31&h)>>3,e[4*(c+d*u)+3]=32768&h?0:255}(e,s,h,u,a,o,c,n);break;case 24:!function(e,t,i,n,r,a,s,o){var h,c,u=0,l=_.width;for(c=t;c!==n;c+=i)for(h=r;h!==s;h+=a,u+=3)e[4*(h+l*c)+3]=255,e[4*(h+l*c)+2]=o[u+0],e[4*(h+l*c)+1]=o[u+1],e[4*(h+l*c)+0]=o[u+2]}(e,s,h,u,a,o,c,n);break;case 32:!function(e,t,i,n,r,a,s,o){var h,c,u=0,l=_.width;for(c=t;c!==n;c+=i)for(h=r;h!==s;h+=a,u+=4)e[4*(h+l*c)+2]=o[u+0],e[4*(h+l*c)+1]=o[u+1],e[4*(h+l*c)+0]=o[u+2],e[4*(h+l*c)+3]=o[u+3]}(e,s,h,u,a,o,c,n);break;default:console.error("TGALoader.parse.getTgaRGBA: not support this format")}}(o.data,_.width,_.height,h.pixel_data,h.palettes),s.putImageData(o,0,0),a}}),Object.assign(ze.prototype,{load:function(e,t,i,n){var r=this,a=new De(this.manager);a.setResponseType("arraybuffer"),a.load(e,function(e){void 0!==t&&t(r.parse(e))},i,n)},parse:function(e){function g(e,t){switch(e){case 1:console.error("zen3d.RGBELoader Read Error: "+(t||""));break;case 2:console.error("zen3d.RGBELoader Write Error: "+(t||""));break;case 3:console.error("zen3d.RGBELoader Bad File Format: "+(t||""));break;default:case 4:console.error("zen3d.RGBELoader: Error: "+(t||""))}return-1}function h(e,t,i){t=t||1024;for(var n=e.pos,r=-1,a=0,s="",o=String.fromCharCode.apply(null,new Uint16Array(e.subarray(n,n+128)));(r=o.indexOf("\n"))<0&&a<t&&n<e.byteLength;)s+=o,a+=o.length,n+=128,o+=String.fromCharCode.apply(null,new Uint16Array(e.subarray(n,n+128)));return-1<r&&(!1!==i&&(e.pos+=a+r+1),s+o.slice(0,r))}var t=new Uint8Array(e);t.pos=0;var i,n,r,a,s,o,c=function(e){var t,i,n=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,r=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,a=/^\s*FORMAT=(\S+)\s*$/,s=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,o={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};if(e.pos>=e.byteLength||!(t=h(e)))return g(1,"no header found");if(!(i=t.match(/^#\?(\S+)$/)))return g(3,"bad initial token");for(o.valid|=1,o.programtype=i[1],o.string+=t+"\n";!1!==(t=h(e));)if(o.string+=t+"\n","#"!==t.charAt(0)){if((i=t.match(n))&&(o.gamma=parseFloat(i[1],10)),(i=t.match(r))&&(o.exposure=parseFloat(i[1],10)),(i=t.match(a))&&(o.valid|=2,o.format=i[1]),(i=t.match(s))&&(o.valid|=4,o.height=parseInt(i[1],10),o.width=parseInt(i[2],10)),2&o.valid&&4&o.valid)break}else o.comments+=t+"\n";return 2&o.valid?4&o.valid?o:g(3,"missing image size specifier"):g(3,"missing format specifier")}(t);if(-1!==c){var u=c.width,l=c.height,d=function(e,t,i){var n,r,a,s,o,h,c,u,l,d,p,f,_,m=t,v=i;if(m<8||32767<m||2!==e[0]||2!==e[1]||128&e[2])return new Uint8Array(e);if(m!==(e[2]<<8|e[3]))return g(3,"wrong scanline width");if(!(n=new Uint8Array(4*t*i))||!n.length)return g(4,"unable to allocate buffer space");for(a=r=0,u=4*m,_=new Uint8Array(4),h=new Uint8Array(u);0<v&&a<e.byteLength;){if(a+4>e.byteLength)return g(1);if(_[0]=e[a++],_[1]=e[a++],_[2]=e[a++],_[3]=e[a++],2!=_[0]||2!=_[1]||(_[2]<<8|_[3])!=m)return g(3,"bad rgbe scanline format");for(c=0;c<u&&a<e.byteLength;){if((f=128<(s=e[a++]))&&(s-=128),0===s||u<c+s)return g(3,"bad scanline data");if(f)for(o=e[a++],l=0;l<s;l++)h[c++]=o;else h.set(e.subarray(a,a+s),c),c+=s,a+=s}for(d=m,l=0;l<d;l++)p=0,n[r]=h[l+p],p+=m,n[r+1]=h[l+p],p+=m,n[r+2]=h[l+p],p+=m,n[r+3]=h[l+p],r+=4;v--}return n}(t.subarray(t.pos),u,l);if(-1!==d){if(this.type===J.UNSIGNED_BYTE)var p=d,f=$.RGBA,_=J.UNSIGNED_BYTE;else if(this.type===J.FLOAT){for(var m=d.length/4*3,v=new Float32Array(m),M=0;M<m;M++)r=v,a=3*M,void 0,s=(i=d)[(n=4*M)+3],o=Math.pow(2,s-128)/255,r[a+0]=i[n+0]*o,r[a+1]=i[n+1]*o,r[a+2]=i[n+2]*o;p=v,f=$.RGB,_=J.FLOAT}else console.error("zen3d.RGBELoader: unsupported type: ",this.type);return{width:u,height:l,data:p,header:c.string,gamma:c.gamma,exposure:c.exposure,format:f,type:_}}}return null}}),Ge.prototype=Object.assign(Object.create(Oe.prototype),{constructor:Ge,copy:function(e){return Oe.prototype.copy.call(this,e),this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this},updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}}),Ge.fromImage=function(e){var t=new Ge;return t.image=e,t.version++,t},Ge.fromSrc=function(e){var t=new Ge,i=0<e.search(/\.(jpg|jpeg)$/)||0===e.search(/^data\:image\/jpeg/),n=0<e.search(/\.(tga)$/)||0===e.search(/^data\:image\/tga/);0<e.search(/\.(hdr)$/)?(new ze).load(e,function(e){t.image={data:e.data,width:e.width,height:e.height},t.encoding=zen3d.TEXEL_ENCODING_TYPE.RGBE,t.type=e.type,t.format=e.format,t.version++,t.dispatchEvent({type:"onload"})}):(n?new Be:new Ie).load(e,function(e){t.format=i?$.RGB:$.RGBA,t.image=e,t.version++,t.dispatchEvent({type:"onload"})});return t},He.prototype=Object.assign(Object.create(Oe.prototype),{constructor:He,copy:function(e){return Oe.prototype.copy.call(this,e),this.images=e.images.slice(0),this}}),He.fromImage=function(e){for(var t=new He,i=t.images,n=0;n<6;n++)i[n]=e[n];return t.version++,t},He.fromSrc=function(i){var n,r=new He,a=r.images,e=i[0],s=0<e.search(/\.(jpg|jpeg)$/)||0===e.search(/^data\:image\/jpeg/),t=0<e.search(/\.(tga)$/)||0===e.search(/^data\:image\/tga/),o=0<e.search(/\.(hdr)$/);n=o?new ze:t?new Be:new Ie;var h=0;return function e(t){t&&(o?a.push({data:t.data,width:t.width,height:t.height}):a.push(t),h++),6<=h?function(e){e?(r.encoding=se.RGBE,r.type=e.type,r.format=e.format):r.format=s?$.RGB:$.RGBA,r.version++,r.dispatchEvent({type:"onload"})}(o?t:void 0):n.load(i[h],e)}(),r},ke.prototype=Object.assign(Object.create(Oe.prototype),{constructor:ke});var Ve,je,Xe,We,Ye,qe=0;function Ze(){Object.defineProperty(this,"id",{value:qe++}),this.uuid=a(),this.name="",this.type="",this.position=new pe,this.scale=new pe(1,1,1),this.euler=new ge,this.quaternion=new ye;var e=this.euler,t=this.quaternion;e.onChange(function(){t.setFromEuler(e,!1)}),t.onChange(function(){e.setFromQuaternion(t,void 0,!1)}),this.matrix=new de,this.worldMatrix=new de,this.children=new Array,this.parent=null,this.castShadow=!1,this.receiveShadow=!1,this.shadowType=ae.PCF3_SOFT,this.frustumCulled=!0,this.visible=!0,this.renderOrder=0,this.userData={}}function Ke(){Ze.call(this),this.type="bone",this.offsetMatrix=new de}function Qe(e){e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.boneTexture=void 0}function $e(e,t,i,n,r){if(.5<=n)for(var a=0;a!==r;++a)e[t+a]=e[i+a]}function Je(e,t,i,n){ye.slerpFlat(e,t,e,t,e,i,n)}function et(e,t,i,n,r){for(var a=1-n,s=0;s!==r;++s){var o=t+s;e[o]=e[o]*a+e[i+s]*n}}function tt(e,t,i,n){this.target=null,this.property="",this.parseBinding(e,t),this.valueSize=n;var r,a=Float64Array;switch(i){case"quaternion":r=Je;break;case"string":case"bool":a=Array,r=$e;break;default:r=et}this.buffer=new a(3*n),this._mixBufferFunction=r,this.cumulativeWeight=0,this.referenceCount=0,this.useCount=0}function it(){this._clips={},this._bindings={},this._activeClips={}}function nt(e,t,i,n,r){this.target=e,this.propertyPath=t,this.name=this.target.uuid+"."+t,this.times=i,this.values=n,this.valueSize=n.length/i.length,this.interpolant=void 0===r||r}function rt(e,t,i,n,r){nt.call(this,e,t,i,n,r)}function at(e,t,i,n,r){nt.call(this,e,t,i,n,r)}function st(e){this.name=e||"",this.tracks=[],this.loop=!0,this.startFrame=0,this.endFrame=0,this.frame=0}function ot(e,t,i,n,r){nt.call(this,e,t,i,n,r)}function ht(e,t,i,n,r){nt.call(this,e,t,i,n,r)}function ct(e,t,i,n,r){nt.call(this,e,t,i,n,r)}function ut(e,t,i,n,r){nt.call(this,e,t,i,n,r)}function lt(e,t,i){this.array=e,this.size=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===i,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}Object.assign(Ze.prototype,{onBeforeRender:function(){},onAfterRender:function(){},add:function(e){this.children.push(e),e.parent=this},remove:function(e){var t=this.children.indexOf(e);-1!==t&&this.children.splice(t,1),e.parent=null},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var i=0,n=this.children.length;i<n;i++){var r=this.children[i].getObjectByProperty(e,t);if(void 0!==r)return r}},updateMatrix:function(){var e=this.matrix.transform(this.position,this.scale,this.quaternion);if(this.worldMatrix.copy(e),this.parent){var t=this.parent.worldMatrix;this.worldMatrix.premultiply(t)}for(var i=this.children,n=0,r=i.length;n<r;n++)i[n].updateMatrix()},getWorldDirection:(je=new pe,Xe=new ye,We=new pe,function(e){var t=e||new pe;return this.worldMatrix.decompose(je,Xe,We),t.set(0,0,1).applyQuaternion(Xe),t}),lookAt:(Ve=new de,function(e,t){Ve.lookAtRH(e,this.position,t),this.quaternion.setFromRotationMatrix(Ve)}),raycast:function(e,t){},traverse:function(e){e(this);for(var t=this.children,i=0,n=t.length;i<n;i++)t[i].traverse(e)},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.type=e.type,this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.worldMatrix.copy(e.worldMatrix),this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var i=0;i<e.children.length;i++){var n=e.children[i];this.add(n.clone())}return this}}),(Ke.prototype=Object.create(Ze.prototype)).constructor=Ke,Object.assign(Qe.prototype,{pose:function(){for(var e=0;e<this.bones.length;e++){(t=this.bones[e]).worldMatrix.getInverse(t.offsetMatrix)}for(e=0;e<this.bones.length;e++){var t;(t=this.bones[e]).parent&&"bone"==t.parent.type?(t.matrix.getInverse(t.parent.worldMatrix),t.matrix.multiply(t.worldMatrix)):t.matrix.copy(t.worldMatrix),t.matrix.decompose(t.position,t.quaternion,t.scale)}},updateBones:(Ye=new de,function(){for(var e=0;e<this.bones.length;e++){var t=this.bones[e];Ye.multiplyMatrices(t.worldMatrix,t.offsetMatrix),Ye.toArray(this.boneMatrices,16*e)}void 0!==this.boneTexture&&this.boneTexture.version++}),getBoneByName:function(e){for(var t=0,i=this.bones.length;t<i;t++){var n=this.bones[t];if(n.name===e)return n}}}),Object.assign(tt.prototype,{parseBinding:function(e,t){if(1<(t=t.split(".")).length){for(var i=e[t[0]],n=1;n<t.length-1;n++)i=i[t[n]];this.property=t[t.length-1],this.target=i}else this.property=t[0],this.target=e},saveOriginalState:function(){var e=this.buffer,t=this.valueSize,i=2*t;1<this.valueSize?this.target[this.property].toArray?this.target[this.property].toArray(e,i):function(e,t,i,n){for(var r=0;r<n;r++)e[i+r]=t[r]}(e,this.target[this.property],i,this.valueSize):this.target[this.property]=e[i];for(var n=t,r=i;n!==r;++n)e[n]=e[i+n%t];this.cumulativeWeight=0},restoreOriginalState:function(){for(var e=this.buffer,t=this.valueSize,i=2*t,n=t,r=i;n!==r;++n)e[n]=e[i+n%t];this.apply()},accumulate:function(e){var t=this.buffer,i=this.valueSize,n=i,r=this.cumulativeWeight;if(0===r){for(var a=0;a!==i;++a)t[n+a]=t[a];r=e}else{var s=e/(r+=e);this._mixBufferFunction(t,n,0,s,i)}this.cumulativeWeight=r},apply:function(){var e=this.buffer,t=this.valueSize,i=this.cumulativeWeight;if(this.cumulativeWeight=0,i<1){var n=2*t;this._mixBufferFunction(e,t,n,1-i,t)}1<this.valueSize?this.target[this.property].fromArray?this.target[this.property].fromArray(e,t):function(e,t,i,n){for(var r=0;r<n;r++)e[r]=t[i+r]}(this.target[this.property],e,t,this.valueSize):this.target[this.property]=e[t]}}),Object.assign(it.prototype,{add:function(e){if(void 0===this._clips[e.name]){for(var t=e.tracks,i=0;i<t.length;i++){var n,r=t[i],a=r.name;this._bindings[a]?n=this._bindings[a]:(n=new tt(r.target,r.propertyPath,r.valueTypeName,r.valueSize),this._bindings[a]=n),n.referenceCount++}this._clips[e.name]=e}else console.warn("AnimationMixer.add: already has clip: "+e.name)},remove:function(e){if(this._clips[e.name]){for(var t=e.tracks,i=0;i<t.length;i++){var n=t[i].name,r=this._bindings[n];r&&r.referenceCount--,r.referenceCount<=0&&delete this._bindings[n]}delete this._clips[e.name]}else console.warn("AnimationMixer.remove: has no clip: "+e.name)},play:function(e,t){if(void 0===this._activeClips[e]){this._activeClips[e]=void 0===t?1:t;var i=this._clips[e];if(i){i.frame=0;for(var n=i.tracks,r=0;r<n.length;r++){var a=n[r].name,s=this._bindings[a];s&&0==s.useCount++&&s.saveOriginalState()}}else console.warn("AnimationMixer.stop: clip "+e+" is not found.")}else console.warn("AnimationMixer.play: clip "+e+" is playing.")},stop:function(e){if(void 0!==this._activeClips[e]){delete this._activeClips[e];var t=this._clips[e];if(t)for(var i=t.tracks,n=0;n<i.length;n++){var r=i[n].name,a=this._bindings[r];a&&0<a.useCount&&0==--a.useCount&&a.restoreOriginalState()}else console.warn("AnimationMixer.stop: clip "+e+" is not found.")}else console.warn("AnimationMixer.stop: clip "+e+" is not playing.")},update:function(e){for(var t in this._activeClips){var i=this._clips[t],n=this._activeClips[t];i.update(e,this._bindings,n)}for(var r in this._bindings)0<this._bindings[r].useCount&&this._bindings[r].apply()},setClipWeight:function(e,t){void 0!==this._activeClips[e]?this._activeClips[e]=t:console.warn("AnimationMixer.stop: clip "+e+" is not playing.")},getAllClipNames:function(){var e=[];for(var t in this._clips)e.push(t);return e}}),Object.assign(nt.prototype,{_getLastTimeIndex:function(e){var t,i=0,n=this.times.length;for(t=0;t<n;t++)e>=this.times[t]&&(i=t);return i},getValue:function(e,t){for(var i,n,r=this._getLastTimeIndex(e),a=this.times,s=this.values,o=this.valueSize,h=a[r],c=a[r+1],u=0;u<o;u++)if(i=s[r*o+u],n=s[(r+1)*o+u],this.interpolant)if(void 0!==i&&void 0!==n){var l=(e-h)/(c-h);t[u]=i*(1-l)+n*l}else t[u]=i;else t[u]=i}}),rt.prototype=Object.assign(Object.create(nt.prototype),{constructor:rt,valueTypeName:"bool",getValue:function(e,t){var i=this._getLastTimeIndex(e),n=this.times[i];t[0]=this.values[n]}}),at.prototype=Object.assign(Object.create(nt.prototype),{constructor:at,valueTypeName:"color"}),Object.assign(st.prototype,{update:function(e,t,i){this.frame+=e,this.frame>this.endFrame&&(this.loop?this.frame=this.startFrame:this.frame=this.endFrame);for(var n=0,r=this.tracks.length;n<r;n++){var a=this.tracks[n],s=t[a.name];a.getValue(this.frame,s.buffer),s.accumulate(i)}}}),ot.prototype=Object.assign(Object.create(nt.prototype),{constructor:ot,valueTypeName:"number"}),ht.prototype=Object.assign(Object.create(nt.prototype),{constructor:ht,valueTypeName:"quaternion",getValue:function(e,t){var i=this._getLastTimeIndex(e),n=this.times,r=this.values,a=n[i],s=n[i+1],o=0;if(this.interpolant)if(void 0!==s)ye.slerpFlat(t,0,r,4*i,r,4*(i+1),(e-a)/(s-a));else for(o=0;o<4;o++)t[o]=r[4*i+o];else for(o=0;o<4;o++)t[o]=r[4*i+o]}}),ct.prototype=Object.assign(Object.create(nt.prototype),{constructor:ct,valueTypeName:"string",getValue:function(e,t){var i=this._getLastTimeIndex(e),n=this.times[i];t[0]=this.values[n]}}),ut.prototype=Object.assign(Object.create(nt.prototype),{constructor:ut,valueTypeName:"vector"}),Object.assign(lt.prototype,{setArray:function(e){return this.count=void 0!==e?e.length/this.size:0,this.array=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.size=e.size,this.count=e.count,this.normalized=e.normalized,this.dynamic=e.dynamic,this},clone:function(){return new this.constructor(this.array,this.size).copy(this)}});var dt=1;function pt(){le.call(this),Object.defineProperty(this,"id",{value:dt++}),this.uuid=a(),this.attributes={},this.morphAttributes={},this.index=null,this.boundingBox=new we,this.boundingSphere=new Te,this.groups=[]}function ft(e,t,i,n,r,a){pt.call(this),this.buildGeometry(e,t,i,n,r,a)}function _t(e,t,i,n,r,a,s,o){pt.call(this),this.buildGeometry(e,t,i,n,r,a,s,o)}function mt(e,t,i,n){lt.call(this,e,t,i),this.meshPerAttribute=n||1}function vt(){pt.call(this),this.maxInstancedCount=void 0}function gt(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function Mt(e,t,i){gt.call(this,e,t),this.meshPerAttribute=i||1}function Et(e,t,i,n){this.data=e,this.size=t,this.offset=i,this.normalized=!0===n}function St(e,t,i,n){pt.call(this),this.buildGeometry(e,t,i,n)}function yt(e,t,i,n,r,a,s){pt.call(this),this.buildGeometry(e,t,i,n,r,a,s)}function xt(e,t,i,n,r,a){pt.call(this),this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:a},e=e||1,t=t||.4,i=Math.floor(i)||64,n=Math.floor(n)||8,r=r||2,a=a||3;var s,o,h=[],c=[],u=[],l=[],d=new pe,p=new pe,f=new pe,_=new pe,m=new pe,v=new pe,g=new pe;for(s=0;s<=i;++s){var M=s/i*r*Math.PI*2;for(b(M,r,a,e,f),b(.01+M,r,a,e,_),v.subVectors(_,f),g.addVectors(_,f),m.crossVectors(v,g),g.crossVectors(m,v),m.normalize(),g.normalize(),o=0;o<=n;++o){var E=o/n*Math.PI*2,S=-t*Math.cos(E),y=t*Math.sin(E);d.x=f.x+(S*g.x+y*m.x),d.y=f.y+(S*g.y+y*m.y),d.z=f.z+(S*g.z+y*m.z),c.push(d.x,d.y,d.z),p.subVectors(d,f).normalize(),u.push(p.x,p.y,p.z),l.push(s/i),l.push(o/n)}}for(o=1;o<=i;o++)for(s=1;s<=n;s++){var x=(n+1)*(o-1)+(s-1),w=(n+1)*o+(s-1),T=(n+1)*o+s,A=(n+1)*(o-1)+s;h.push(x,w,A),h.push(w,T,A)}function b(e,t,i,n,r){var a=Math.cos(e),s=Math.sin(e),o=i/t*e,h=Math.cos(o);r.x=n*(2+h)*.5*a,r.y=n*(2+h)*s*.5,r.z=n*Math.sin(o)*.5}this.setIndex(h),this.addAttribute("a_Position",new lt(new Float32Array(c),3)),this.addAttribute("a_Normal",new lt(new Float32Array(u),3)),this.addAttribute("a_Uv",new lt(new Float32Array(l),2)),this.computeBoundingBox(),this.computeBoundingSphere()}pt.prototype=Object.assign(Object.create(le.prototype),{constructor:pt,addAttribute:function(e,t){this.attributes[e]=t},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){delete this.attributes[e]},setIndex:function(e){Array.isArray(e)?this.index=new lt(new Uint16Array(e),1):this.index=e},addGroup:function(e,t,i){this.groups.push({start:e,count:t,materialIndex:void 0!==i?i:0})},clearGroups:function(){this.groups=[]},computeBoundingBox:function(){var e=this.attributes.a_Position||this.attributes.position;if(e.isInterleavedBufferAttribute){var t=e.data;this.boundingBox.setFromArray(t.array,t.stride)}else this.boundingBox.setFromArray(e.array,e.size)},computeBoundingSphere:function(){var e=this.attributes.a_Position||this.attributes.position;if(e.isInterleavedBufferAttribute){var t=e.data;this.boundingSphere.setFromArray(t.array,t.stride)}else this.boundingSphere.setFromArray(e.array,e.size)},dispose:function(){this.dispatchEvent({type:"dispose"})}}),ft.prototype=Object.assign(Object.create(pt.prototype),{constructor:ft,buildGeometry:function(e,t,i,n,r,a){var P=this;e=e||1,t=t||1,i=i||1,n=Math.floor(n)||1,r=Math.floor(r)||1,a=Math.floor(a)||1;var L=[],R=[],C=[],O=[],U=0,F=0;function s(e,t,i,n,r,a,s,o,h,c,u){var l,d,p=a/h,f=s/c,_=a/2,m=s/2,v=o/2,g=h+1,M=c+1,E=0,S=0,y=new pe;for(d=0;d<M;d++){var x=d*f-m;for(l=0;l<g;l++){var w=l*p-_;y[e]=w*n,y[t]=x*r,y[i]=v,R.push(y.x,y.y,y.z),y[e]=0,y[t]=0,y[i]=0<o?1:-1,C.push(y.x,y.y,y.z),O.push(l/h),O.push(1-d/c),E+=1}}for(d=0;d<c;d++)for(l=0;l<h;l++){var T=U+l+g*d,A=U+l+g*(d+1),b=U+(l+1)+g*(d+1),N=U+(l+1)+g*d;L.push(T,A,N),L.push(A,b,N),S+=6}P.addGroup(F,S,u),F+=S,U+=E}s("z","y","x",-1,-1,i,t,e,a,r,0),s("z","y","x",1,-1,i,t,-e,a,r,1),s("x","z","y",1,1,e,i,t,n,a,2),s("x","z","y",1,-1,e,i,-t,n,a,3),s("x","y","z",1,-1,e,t,i,n,r,4),s("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(L),this.addAttribute("a_Position",new lt(new Float32Array(R),3)),this.addAttribute("a_Normal",new lt(new Float32Array(C),3)),this.addAttribute("a_Uv",new lt(new Float32Array(O),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),_t.prototype=Object.assign(Object.create(pt.prototype),{constructor:_t,buildGeometry:function(v,g,M,E,S,e,y,x){var w=this;v=void 0!==v?v:1,g=void 0!==g?g:1,M=M||1,E=Math.floor(E)||8,S=Math.floor(S)||1,e=void 0!==e&&e,y=void 0!==y?y:0,x=void 0!==x?x:2*Math.PI;var T=[],A=[],b=[],N=[],P=0,L=[],R=M/2,C=0;function t(e){var t,i,n,r=new Me,a=new pe,s=0,o=!0===e?v:g,h=!0===e?1:-1;for(i=P,t=1;t<=E;t++)A.push(0,R*h,0),b.push(0,h,0),N.push(.5,.5),P++;for(n=P,t=0;t<=E;t++){var c=t/E*x+y,u=Math.cos(c),l=Math.sin(c);a.x=o*l,a.y=R*h,a.z=o*u,A.push(a.x,a.y,a.z),b.push(0,h,0),r.x=.5*u+.5,r.y=.5*l*h+.5,N.push(r.x,r.y),P++}for(t=0;t<E;t++){var d=i+t,p=n+t;!0===e?T.push(p,p+1,d):T.push(p+1,p,d),s+=3}w.addGroup(C,s,!0===e?1:2),C+=s}!function(){var e,t,i=new pe,n=new pe,r=0,a=(g-v)/M;for(t=0;t<=S;t++){var s=[],o=t/S,h=o*(g-v)+v;for(e=0;e<=E;e++){var c=e/E,u=c*x+y,l=Math.sin(u),d=Math.cos(u);n.x=h*l,n.y=-o*M+R,n.z=h*d,A.push(n.x,n.y,n.z),i.set(l,a,d).normalize(),b.push(i.x,i.y,i.z),N.push(c,1-o),s.push(P++)}L.push(s)}for(e=0;e<E;e++)for(t=0;t<S;t++){var p=L[t][e],f=L[t+1][e],_=L[t+1][e+1],m=L[t][e+1];T.push(p,f,m),T.push(f,_,m),r+=6}w.addGroup(C,r,0),C+=r}(),!1===e&&(0<v&&t(!0),0<g&&t(!1)),this.setIndex(T),this.addAttribute("a_Position",new lt(new Float32Array(A),3)),this.addAttribute("a_Normal",new lt(new Float32Array(b),3)),this.addAttribute("a_Uv",new lt(new Float32Array(N),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),mt.prototype=Object.assign(Object.create(lt.prototype),{constructor:mt,isInstancedBufferAttribute:!0,copy:function(e){return lt.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}}),vt.prototype=Object.assign(Object.create(pt.prototype),{constructor:vt,isInstancedGeometry:!0}),Object.assign(gt.prototype,{setArray:function(e){this.count=void 0!==e?e.length/this.stride:0,this.array=e}}),Mt.prototype=Object.assign(Object.create(gt.prototype),{constructor:Mt,isInstancedInterleavedBuffer:!0}),Et.prototype.isInterleavedBufferAttribute=!0,Object.defineProperties(Et.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),St.prototype=Object.assign(Object.create(pt.prototype),{constructor:St,buildGeometry:function(e,t,i,n){var r,a,s=(e=e||1)/2,o=(t=t||1)/2,h=Math.floor(i)||1,c=Math.floor(n)||1,u=h+1,l=c+1,d=e/h,p=t/c,f=[],_=[],m=[],v=[];for(a=0;a<l;a++){var g=a*p-o;for(r=0;r<u;r++){var M=r*d-s;_.push(M,0,g),m.push(0,1,0),v.push(r/h),v.push(1-a/c)}}for(a=0;a<c;a++)for(r=0;r<h;r++){var E=r+u*a,S=r+u*(a+1),y=r+1+u*(a+1),x=r+1+u*a;f.push(E,S,x),f.push(S,y,x)}this.setIndex(f),this.addAttribute("a_Position",new lt(new Float32Array(_),3)),this.addAttribute("a_Normal",new lt(new Float32Array(m),3)),this.addAttribute("a_Uv",new lt(new Float32Array(v),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),yt.prototype=Object.assign(Object.create(pt.prototype),{constructor:yt,buildGeometry:function(e,t,i,n,r,a,s){e=e||1,t=Math.max(3,Math.floor(t)||8),i=Math.max(2,Math.floor(i)||6),n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI;var o,h,c=(a=void 0!==a?a:0)+(s=void 0!==s?s:Math.PI),u=0,l=[],d=new pe,p=new pe,f=[],_=[],m=[],v=[];for(h=0;h<=i;h++){var g=[],M=h/i;for(o=0;o<=t;o++){var E=o/t;d.x=-e*Math.cos(n+E*r)*Math.sin(a+M*s),d.y=e*Math.cos(a+M*s),d.z=e*Math.sin(n+E*r)*Math.sin(a+M*s),_.push(d.x,d.y,d.z),p.set(d.x,d.y,d.z).normalize(),m.push(p.x,p.y,p.z),v.push(E,1-M),g.push(u++)}l.push(g)}for(h=0;h<i;h++)for(o=0;o<t;o++){var S=l[h][o+1],y=l[h][o],x=l[h+1][o],w=l[h+1][o+1];(0!==h||0<a)&&f.push(S,y,w),(h!==i-1||c<Math.PI)&&f.push(y,x,w)}this.setIndex(f),this.addAttribute("a_Position",new lt(new Float32Array(_),3)),this.addAttribute("a_Normal",new lt(new Float32Array(m),3)),this.addAttribute("a_Uv",new lt(new Float32Array(v),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),(xt.prototype=Object.create(pt.prototype)).constructor=xt;var wt=0;function Tt(){le.call(this),Object.defineProperty(this,"id",{value:wt++}),this.type="",this.uuid=a(),this.precision=null,this.opacity=1,this.transparent=!1,this.blending=X.NORMAL,this.blendSrc=Y.SRC_ALPHA,this.blendDst=Y.ONE_MINUS_SRC_ALPHA,this.blendEquation=W.ADD,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.premultipliedAlpha=!1,this.vertexColors=ce.NONE,this.diffuse=new Ne(16777215),this.diffuseMap=null,this.diffuseMapCoord=0,this.normalMap=null,this.alphaMap=null,this.alphaMapCoord=0,this.aoMap=null,this.aoMapIntensity=1,this.aoMapCoord=0,this.bumpMap=null,this.bumpScale=1,this.envMap=null,this.envMapIntensity=1,this.envMapCombine=oe.MULTIPLY,this.emissive=new Ne(0),this.emissiveMap=null,this.emissiveMapCoord=0,this.emissiveIntensity=1,this.depthFunc=ie.LEQUAL,this.depthTest=!0,this.depthWrite=!0,this.colorWrite=!0,this.alphaTest=0,this.side=Z.FRONT,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.shading=K.SMOOTH_SHADING,this.dithering=!1,this.acceptLight=!1,this.drawMode=he.TRIANGLES,this.needsUpdate=!0}function At(){Tt.call(this),this.type=k.BASIC}function bt(){Tt.call(this),this.type=k.LAMBERT,this.acceptLight=!0}function Nt(){Tt.call(this),this.type=k.PHONG,this.shininess=30,this.specular=new Ne(1118481),this.specularMap=null,this.acceptLight=!0}function Pt(){Tt.call(this),this.type=k.PBR,this.roughness=.5,this.metalness=.5,this.roughnessMap=null,this.metalnessMap=null,this.acceptLight=!0}function Lt(){Tt.call(this),this.type=k.PBR2,this.specular=new Ne(1118481),this.glossiness=.5,this.specularMap=null,this.glossinessMap=null,this.acceptLight=!0}function Rt(){Tt.call(this),this.type=k.POINT,this.size=1,this.sizeAttenuation=!0,this.drawMode=he.POINTS}function Ct(){Tt.call(this),this.type=k.LINE,this.lineWidth=1,this.drawMode=he.LINES}function Ot(e){Tt.call(this),this.type=k.SHADER,this.vertexShader=e.vertexShader||"",this.fragmentShader=e.fragmentShader||"",this.defines={},Object.assign(this.defines,e.defines),this.uniforms=c(e.uniforms)}function Ut(){Tt.call(this),this.type=k.DEPTH,this.packToRGBA=!1}function Ft(){Tt.call(this),this.type=k.DISTANCE}function It(n){var r=["","WEBKIT_","MOZ_"],a={};function e(e){if(a[e]||null===a[e])return a[e];var t=null;for(var i in r)if(t=n.getExtension(r[i]+e))break;return a[e]=t}var t=parseFloat(/^WebGL\ ([0-9])/.exec(n.getParameter(n.VERSION))[1]),i=e("EXT_texture_filter_anisotropic");return{version:t,maxPrecision:function(e,t){if("highp"===t){if(0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision)return"highp";t="mediump"}return"mediump"===t&&0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision?"mediump":"lowp"}(n,"highp"),maxTextures:n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),maxVertexTextures:n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),maxTextureSize:n.getParameter(n.MAX_TEXTURE_SIZE),maxCubemapSize:n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),maxVertexUniformVectors:n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),lineWidthRange:n.getParameter(n.ALIASED_LINE_WIDTH_RANGE),anisotropyExt:i,maxAnisotropy:null!==i?n.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT):1,maxSamples:1<t?n.getParameter(n.MAX_SAMPLES):1,getExtension:e}}function Dt(e,t,i,n){var r=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var s=0;s<n;s++)e.texImage2D(i+s,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,r);return a}function Bt(a){var t=!1,s=new Ee,i=null,o=new Ee(0,0,0,0);return{setMask:function(e){i===e||t||(a.colorMask(e,e,e,e),i=e)},setLocked:function(e){t=e},setClear:function(e,t,i,n,r){!0===r&&(e*=n,t*=n,i*=n),s.set(e,t,i,n),!1===o.equals(s)&&(a.clearColor(e,t,i,n),o.copy(s))},getClear:function(){return o},reset:function(){t=!1,i=null,o.set(-1,0,0,0)}}}function zt(t,i){var n=!1,r=null,a=null,s=null;return{setTest:function(e){e?i.enable(t.DEPTH_TEST):i.disable(t.DEPTH_TEST)},setMask:function(e){r===e||n||(t.depthMask(e),r=e)},setFunc:function(e){a!==e&&(t.depthFunc(e),a=e)},setLocked:function(e){n=e},setClear:function(e){s!==e&&(t.clearDepth(e),s=e)},reset:function(){n=!1,s=a=r=null}}}function Gt(n,t){var i=!1,r=null,a=null,s=null,o=null,h=null,c=null,u=null,l=null;return{setTest:function(e){e?t.enable(n.STENCIL_TEST):t.disable(n.STENCIL_TEST)},setMask:function(e){r===e||i||(n.stencilMask(e),r=e)},setFunc:function(e,t,i){a===e&&s===t&&o===i||(n.stencilFunc(e,t,i),a=e,s=t,o=i)},setOp:function(e,t,i){h===e&&c===t&&u===i||(n.stencilOp(e,t,i),h=e,c=t,u=i)},setLocked:function(e){i=e},setClear:function(e){l!==e&&(n.clearStencil(e),l=e)},reset:function(){i=!1,l=u=c=h=o=s=a=r=null}}}function Ht(e,t){this.gl=e,this.capabilities=t,this.colorBuffer=new Bt(e),this.depthBuffer=new zt(e,this),this.stencilBuffer=new Gt(e,this),this.states={},this.currentBlending=null,this.currentBlendEquation=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendEquationAlpha=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipliedAlpha=null,this.currentCullFace=null,this.currentViewport=new Ee,this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBuffers={},this.emptyTextures={},this.emptyTextures[e.TEXTURE_2D]=Dt(e,e.TEXTURE_2D,e.TEXTURE_2D,1),this.emptyTextures[e.TEXTURE_CUBE_MAP]=Dt(e,e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),this.currentFlipSided=!1,this.currentLineWidth=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentProgram=null,this.currentRenderTarget=null,this.colorBuffer.setClear(0,0,0,1),this.depthBuffer.setClear(1),this.stencilBuffer.setClear(0),this.depthBuffer.setTest(!0),this.depthBuffer.setFunc(ie.LEQUAL),this.setCullFace(q.BACK),this.setFlipSided(!1)}function kt(){this.properties=new WeakMap}function Vt(e){return e.wrapS!==te.CLAMP_TO_EDGE||e.wrapT!==te.CLAMP_TO_EDGE||e.minFilter!==ee.NEAREST&&e.minFilter!==ee.LINEAR}function jt(e){return e===ee.NEAREST||e===ee.NEAREST_MIPMAP_LINEAR||e===ee.NEAREST_MIPMAP_NEAREST?ee.NEAREST:ee.LINEAR}function Xt(e){return s(e.width)&&s(e.height)}function Wt(e){if(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement){var t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.width=o(e.width),t.height=o(e.height),t.getContext("2d").drawImage(e,0,0,t.width,t.height),console.warn("image is not power of two ("+e.width+"x"+e.height+"). Resized to "+t.width+"x"+t.height,e),t}return e}function Yt(e,t){if(e.width>t||e.height>t){var i=t/Math.max(e.width,e.height),n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return n.width=Math.floor(e.width*i),n.height=Math.floor(e.height*i),n.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,n.width,n.height),console.warn("image is too big ("+e.width+"x"+e.height+"). Resized to "+n.width+"x"+n.height,e),n}return e}function qt(e,t,i,n){this.gl=e,this.state=t,this.properties=i,this.capabilities=n}function Zt(e,t,i,n){i.isInterleavedBufferAttribute&&(i=i.data);var r=t.get(i);void 0===r.buffer?function(e,t,i,n){var r=i.array,a=i.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW,s=e.createBuffer();e.bindBuffer(n,s),e.bufferData(n,r,a);var o=e.FLOAT;r instanceof Float32Array?o=e.FLOAT:r instanceof Float64Array?console.warn("Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?o=e.UNSIGNED_SHORT:r instanceof Int16Array?o=e.SHORT:r instanceof Uint32Array?o=e.UNSIGNED_INT:r instanceof Int32Array?o=e.INT:r instanceof Int8Array?o=e.BYTE:r instanceof Uint8Array&&(o=e.UNSIGNED_BYTE),t.buffer=s,t.type=o,t.bytesPerElement=r.BYTES_PER_ELEMENT,t.version=i.version}(e,r,i,n):r.version<i.version&&(function(e,t,i,n){var r=i.array,a=i.updateRange;e.bindBuffer(n,t),!1===i.dynamic?e.bufferData(n,r,e.STATIC_DRAW):-1===a.count?e.bufferSubData(n,0,r):0===a.count?console.error("updateBuffer: dynamic BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(e.bufferSubData(n,a.offset*r.BYTES_PER_ELEMENT,r.subarray(a.offset,a.offset+a.count)),a.count=-1)}(e,r.buffer,i,n),r.version=i.version)}function Kt(e,t,i){i.isInterleavedBufferAttribute&&(i=i.data);var n=t.get(i);n.buffer&&e.deleteBuffer(n.buffer),t.delete(i)}function Qt(e,t,i,n){this.gl=e,this.state=t,this.properties=i,this.capabilities=n}Tt.prototype=Object.assign(Object.create(le.prototype),{constructor:Tt,copy:function(e){return this.type=e.type,this.precision=e.precision,e.defines&&(this.defines=Object.assign({},e.defines)),this.opacity=e.opacity,this.transparent=e.transparent,this.premultipliedAlpha=e.premultipliedAlpha,this.vertexColors=e.vertexColors,this.diffuse.copy(e.diffuse),this.diffuseMap=e.diffuseMap,this.diffuseMapCoord=e.diffuseMapCoord,this.alphaMap=e.alphaMap,this.alphaMapCoord=e.alphaMapCoord,this.normalMap=e.normalMap,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.aoMapCoord=e.aoMapCoord,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.envMapCombine=e.envMapCombine,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveMapCoord=e.emissiveMapCoord,this.emissiveIntensity=e.emissiveIntensity,this.blending=e.blending,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.colorWrite=e.colorWrite,this.alphaTest=e.alphaTest,this.side=e.side,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.shading=e.shading,this.acceptLight=e.acceptLight,this.drawMode=e.drawMode,this},clone:function(){return(new this.constructor).copy(this)},dispose:function(){this.dispatchEvent({type:"dispose"})}}),(At.prototype=Object.create(Tt.prototype)).constructor=At,(bt.prototype=Object.create(Tt.prototype)).constructor=bt,Nt.prototype=Object.assign(Object.create(Tt.prototype),{constructor:Nt,copy:function(e){return Tt.prototype.copy.call(this,e),this.shininess=e.shininess,this.specular.copy(e.specular),this.specularMap=e.specularMap,this}}),Pt.prototype=Object.assign(Object.create(Tt.prototype),{constructor:Pt,copy:function(e){return Tt.prototype.copy.call(this,e),this.roughness=e.roughness,this.metalness=e.metalness,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this}}),Lt.prototype=Object.assign(Object.create(Tt.prototype),{constructor:Lt,copy:function(e){return Tt.prototype.copy.call(this,e),this.specular=e.specular,this.glossiness=e.glossiness,this.specularMap=e.specularMap,this.glossinessMap=e.glossinessMap,this}}),Rt.prototype=Object.assign(Object.create(Tt.prototype),{constructor:Rt,copy:function(e){return Tt.prototype.copy.call(this,e),this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}),Ct.prototype=Object.assign(Object.create(Tt.prototype),{constructor:Ct,copy:function(e){return Tt.prototype.copy.call(this,e),this.lineWidth=e.lineWidth,this}}),Ot.prototype=Object.assign(Object.create(Tt.prototype),{constructor:Ot,copy:function(e){return Tt.prototype.copy.call(this,e),this.vertexShader=e.vertexShader,this.fragmentShader=e.fragmentShader,this.uniforms=c(e.uniforms),this}}),(Ut.prototype=Object.create(Tt.prototype)).constructor=Ut,(Ft.prototype=Object.create(Tt.prototype)).constructor=Ft,Object.assign(Ht.prototype,{setBlend:function(e,t,i,n,r,a,s,o){var h=this.gl;e!==X.NONE?this.enable(h.BLEND):this.disable(h.BLEND),e!==X.CUSTOM?(e===this.currentBlending&&o===this.currentPremultipliedAlpha||(e===X.NORMAL&&(o?(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.ONE,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA)):(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.SRC_ALPHA,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA))),e===X.ADD&&(o?(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.ONE,h.ONE,h.ONE,h.ONE)):(h.blendEquation(h.FUNC_ADD),h.blendFunc(h.SRC_ALPHA,h.ONE)))),this.currentBlendEquation=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendEquationAlpha=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null):(r=r||t,a=a||i,s=s||n,t===this.currentBlendEquation&&r===this.currentBlendEquationAlpha||(h.blendEquationSeparate(t,r),this.currentBlendEquation=t,this.currentBlendEquationAlpha=r),i===this.currentBlendSrc&&n===this.currentBlendDst&&a===this.currentBlendSrcAlpha&&s===this.currentBlendDstAlpha||(h.blendFuncSeparate(i,n,a,s),this.currentBlendSrc=i,this.currentBlendDst=n,this.currentBlendSrcAlpha=a,this.currentBlendDstAlpha=s)),this.currentBlending=e,this.currentPremultipliedAlpha=o},setFlipSided:function(e){var t=this.gl;this.currentFlipSided!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e)},setCullFace:function(e){var t=this.gl;e!==q.NONE?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===q.BACK?t.cullFace(t.BACK):e===q.FRONT?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e},viewport:function(e,t,i,n){var r=this.currentViewport;r.x===e&&r.y===t&&r.z===i&&r.w===n||(this.gl.viewport(e,t,i,n),r.set(e,t,i,n))},activeTexture:function(e){var t=this.gl;void 0===e&&(e=t.TEXTURE0+this.capabilities.maxTextures-1),this.currentTextureSlot!==e&&(t.activeTexture(e),this.currentTextureSlot=e)},bindTexture:function(e,t){var i=this.gl;null===this.currentTextureSlot&&this.activeTexture();var n=this.currentBoundTextures[this.currentTextureSlot];void 0===n&&(n={type:void 0,texture:void 0},this.currentBoundTextures[this.currentTextureSlot]=n),n.type===e&&n.texture===t||(i.bindTexture(e,t||this.emptyTextures[e]),n.type=e,n.texture=t)},bindBuffer:function(e,t){var i=this.gl;this.currentBoundBuffers[e]!==t&&(i.bindBuffer(e,t),this.currentBoundBuffers[e]=t)},enable:function(e){!0!==this.states[e]&&(this.gl.enable(e),this.states[e]=!0)},disable:function(e){!1!==this.states[e]&&(this.gl.disable(e),this.states[e]=!1)},setLineWidth:function(e){if(e!==this.currentLineWidth){var t=this.capabilities.lineWidthRange;t[0]<=e&&e<=t[1]?this.gl.lineWidth(e):console.warn("GL_ALIASED_LINE_WIDTH_RANGE is ["+t[0]+","+t[1]+"], but set to "+e+"."),this.currentLineWidth=e}},setPolygonOffset:function(e,t,i){var n=this.gl;e?(this.enable(n.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===t&&this.currentPolygonOffsetUnits===i||(n.polygonOffset(t,i),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=i)):this.disable(n.POLYGON_OFFSET_FILL)},setProgram:function(e){this.currentProgram!==e&&(this.gl.useProgram(e.program),this.currentProgram=e)}}),Object.assign(kt.prototype,{get:function(e){var t=this.properties.get(e);return void 0===t&&(t={},this.properties.set(e,t)),t},delete:function(e){this.properties.delete(e)},clear:function(){this.properties=new WeakMap}}),Object.assign(qt.prototype,{setTexture2D:function(e,t){var i=this.gl,n=this.state,r=this.capabilities;void 0!==t&&(t=i.TEXTURE0+t);var a=this.properties.get(e);if(!e.image||e.image.rtt&&void 0!==t||a.__version===e.version)return n.activeTexture(t),n.bindTexture(i.TEXTURE_2D,a.__webglTexture),a;void 0===a.__webglTexture&&(e.addEventListener("dispose",this.onTextureDispose,this),a.__webglTexture=i.createTexture()),n.activeTexture(t),n.bindTexture(i.TEXTURE_2D,a.__webglTexture);var s=e.image,o=s instanceof HTMLImageElement||s instanceof HTMLCanvasElement;o&&(s=Yt(s,r.maxTextureSize),Vt(e)&&!1===Xt(s)&&r.version<2&&(s=Wt(s)));var h=!Xt(s)&&r.version<2;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,e.flipY),this.setTextureParameters(e,h);var c,u=e.mipmaps,l=e.format,d=e.internalformat||e.format,p=e.type;if(r.version<2?(l!==d&&console.warn("texture format "+l+" not same as internalformat "+d+" in webgl 1.0."),p===J.HALF_FLOAT&&(r.getExtension("OES_texture_half_float")||console.warn("extension OES_texture_half_float is not support in webgl 1.0.")),p===J.FLOAT&&(r.getExtension("OES_texture_float")||console.warn("extension OES_texture_float is not support in webgl 1.0.")),l!==$.DEPTH_COMPONENT&&l!==$.DEPTH_STENCIL||r.getExtension("WEBGL_depth_texture")||console.warn("extension WEBGL_depth_texture is not support in webgl 1.0.")):p===J.HALF_FLOAT&&(p=5131),o)if(0<u.length&&!h){for(var f=0,_=u.length;f<_;f++)c=u[f],i.texImage2D(i.TEXTURE_2D,f,d,l,p,c);e.generateMipmaps=!1,a.__maxMipLevel=u.length-1}else i.texImage2D(i.TEXTURE_2D,0,d,l,p,s),a.__maxMipLevel=0;else if(0<u.length&&!h){for(f=0,_=u.length;f<_;f++)c=u[f],i.texImage2D(i.TEXTURE_2D,f,d,c.width,c.height,e.border,l,p,c.data);e.generateMipmaps=!1,a.__maxMipLevel=u.length-1}else i.texImage2D(i.TEXTURE_2D,0,d,s.width,s.height,e.border,l,p,s.data),a.__maxMipLevel=0;return e.generateMipmaps&&!h&&this.generateMipmap(i.TEXTURE_2D,e,s.width,s.height),a.__version=e.version,a},setTextureCube:function(e,t){var i=this.gl,n=this.state,r=this.capabilities;void 0!==t&&(t=i.TEXTURE0+t);var a=this.properties.get(e);if(6!==e.images.length||e.images[0].rtt&&void 0!==t||a.__version===e.version)return n.activeTexture(t),n.bindTexture(i.TEXTURE_CUBE_MAP,a.__webglTexture),a;void 0===a.__webglTexture&&(e.addEventListener("dispose",this.onTextureDispose,this),a.__webglTexture=i.createTexture()),n.activeTexture(t),n.bindTexture(i.TEXTURE_CUBE_MAP,a.__webglTexture);var s,o=[],h=e.mipmaps,c=e.format,u=e.internalformat||e.format,l=e.type;r.version<2?(c!==u&&console.warn("texture format "+c+" not same as internalformat "+u+" in webgl 1.0."),l===J.HALF_FLOAT&&(r.getExtension("OES_texture_half_float")||console.warn("extension OES_texture_half_float is not support in webgl 1.0.")),l===J.FLOAT&&(r.getExtension("OES_texture_float")||console.warn("extension OES_texture_float is not support in webgl 1.0.")),c!==$.DEPTH_COMPONENT&&c!==$.DEPTH_STENCIL||r.getExtension("WEBGL_depth_texture")||console.warn("extension WEBGL_depth_texture is not support in webgl 1.0.")):l===J.HALF_FLOAT&&(l=5131);for(var d=!1,p=0;p<6;p++){(_=(f=e.images[p])instanceof HTMLImageElement||f instanceof HTMLCanvasElement)&&(f=Yt(f,r.maxTextureSize),Vt(e)&&!1===Xt(f)&&r.version<2&&(f=Wt(f))),!Xt(f)&&r.version<2&&(d=!0),(o[p]=f).__isElement=_}i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,e.flipY),this.setTextureParameters(e,d);for(p=0;p<6;p++){var f,_;if(_=(f=o[p]).__isElement)if(0<h.length&&!d){for(var m=0,v=h.length;m<v;m++)s=h[m][p],i.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+p,0,u,c,l,s);a.__maxMipLevel=h.length-1,e.generateMipmaps=!1}else i.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+p,0,u,c,l,f),a.__maxMipLevel=0;else if(0<h.length&&!d){for(m=0,v=h.length;m<v;m++)s=h[m][p],i.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+p,m,u,s.width,s.height,e.border,c,l,s.data);a.__maxMipLevel=h.length-1,e.generateMipmaps=!1}else i.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+p,0,u,f.width,f.height,e.border,c,l,f.data),a.__maxMipLevel=0}return e.generateMipmaps&&!d&&this.generateMipmap(i.TEXTURE_CUBE_MAP,e,f.width,f.height),a.__version=e.version,a},setTexture3D:function(e,t){var i=this.gl,n=this.state;if(!(this.capabilities.version<2)){void 0!==t&&(t=i.TEXTURE0+t);var r=this.properties.get(e);if(e.image&&r.__version!==e.version){void 0===r.__webglTexture&&(e.addEventListener("dispose",this.onTextureDispose,this),r.__webglTexture=i.createTexture()),n.activeTexture(t),n.bindTexture(i.TEXTURE_3D,r.__webglTexture);var a=e.image;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,e.flipY),this.setTextureParameters(e,!1);var s=e.format,o=e.internalformat||e.format,h=e.type;return i.texImage3D(i.TEXTURE_3D,0,o,a.width,a.height,a.depth,e.border,s,h,a.data),e.generateMipmaps&&this.generateMipmap(i.TEXTURE_3D,e,a.width,a.height),r.__version=e.version,r}return n.activeTexture(t),n.bindTexture(i.TEXTURE_3D,r.__webglTexture),r}console.warn("Try to use Texture3D but browser not support WebGL2.0")},setTextureParameters:function(e,t){var i=this.gl,n=this.capabilities,r=e.textureType,a=function(e,t){var i=e.wrapS,n=e.wrapT,r=e.magFilter,a=e.minFilter,s=e.anisotropy,o=e.compare;return t&&(i=te.CLAMP_TO_EDGE,n=te.CLAMP_TO_EDGE,e.wrapS===te.CLAMP_TO_EDGE&&e.wrapT===te.CLAMP_TO_EDGE||console.warn("Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to zen3d.TEXTURE_WRAP.CLAMP_TO_EDGE.",e),r=jt(e.magFilter),a=jt(e.minFilter),(e.minFilter!==ee.NEAREST&&e.minFilter!==ee.LINEAR||e.magFilter!==ee.NEAREST&&e.magFilter!==ee.LINEAR)&&console.warn("Texture is not power of two. Texture.minFilter and Texture.magFilter should be set to zen3d.TEXTURE_FILTER.NEAREST or zen3d.TEXTURE_FILTER.LINEAR.",e)),[i,n,r,a,s,o]}(e,t);i.texParameteri(r,i.TEXTURE_WRAP_S,a[0]),i.texParameteri(r,i.TEXTURE_WRAP_T,a[1]),i.texParameteri(r,i.TEXTURE_MAG_FILTER,a[2]),i.texParameteri(r,i.TEXTURE_MIN_FILTER,a[3]);var s=n.anisotropyExt;s&&i.texParameterf(r,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a[4],n.maxAnisotropy)),2<=n.version&&(void 0!==a[5]?(i.texParameteri(r,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(r,i.TEXTURE_COMPARE_FUNC,a[5])):i.texParameteri(r,i.TEXTURE_COMPARE_MODE,i.NONE))},generateMipmap:function(e,t,i,n){this.gl.generateMipmap(e),this.properties.get(t).__maxMipLevel=Math.log(Math.max(i,n))*Math.LOG2E},onTextureDispose:function(e){var t=this.gl,i=e.target,n=this.properties.get(i);i.removeEventListener("dispose",this.onTextureDispose,this),n.__webglTexture&&t.deleteTexture(n.__webglTexture),this.properties.delete(i)}}),Object.assign(Qt.prototype,{setGeometry:function(e){var t=this.gl,i=this.properties,n=this.properties.get(e);for(var r in n.created||(e.addEventListener("dispose",this.onGeometryDispose,this),n.created=!0,n._vaos={}),null!==e.index&&Zt(t,i,e.index,t.ELEMENT_ARRAY_BUFFER),e.attributes)Zt(t,i,e.attributes[r],t.ARRAY_BUFFER);for(var r in e.morphAttributes)for(var a=e.morphAttributes[r],s=0,o=a.length;s<o;s++)Zt(t,i,a[s],t.ARRAY_BUFFER);return n},onGeometryDispose:function(e){var t=this.gl,i=e.target,n=this.properties.get(i);for(var r in i.removeEventListener("dispose",this.onGeometryDispose,this),null!==i.index&&Kt(t,this.properties,i.index),i.attributes)Kt(t,this.properties,i.attributes[r]);for(var r in i.morphAttributes)for(var a=i.morphAttributes[r],s=0,o=a.length;s<o;s++)Kt(t,this.properties,a[s]);for(var h in n._vaos){var c=n[h];c&&(2<=this.capabilities.version?t.deleteVertexArray(c):t.deleteVertexArrayOES(c))}n._vaos={},n.created=!1,this.properties.delete(i)}});var $t=new Ge;$t.image={data:new Uint8Array([1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1]),width:2,height:2},$t.magFilter=ee.NEAREST,$t.minFilter=ee.NEAREST,$t.generateMipmaps=!1,$t.version++;var Jt=new Ge;Jt.image={data:null,width:2,height:2},Jt.version++,Jt.type=J.FLOAT_32_UNSIGNED_INT_24_8_REV,Jt.format=$.DEPTH_STENCIL,Jt.internalformat=$.DEPTH32F_STENCIL8,Jt.magFilter=ee.NEAREST,Jt.minFilter=ee.NEAREST,Jt.compare=ie.LESS,Jt.generateMipmaps=!1,Jt.version++;var ei=new ke,ti=new He;function ii(){this.seq=[],this.map={}}function ni(e,t){if(e.length!==t.length)return!1;for(var i=0,n=e.length;i<n;i++)if(e[i]!==t[i])return!1;return!0}function ri(e,t){for(var i=0,n=t.length;i<n;i++)e[i]=t[i]}var ai=[];function si(e,t){var i=ai[t];void 0===i&&(i=new Int32Array(t),ai[t]=i);for(var n=0;n!==t;++n)i[n]=e.allocTexUnit();return i}function oi(e,t){var a=e.gl,s=e.type,o=e.location,h=e.cache;switch(s){case ne.FLOAT:e.setValue=function(e){h[0]!==e&&(a.uniform1f(o,e),h[0]=e)},e.set=t?function(e){ni(h,e)||(a.uniform1fv(o,e),ri(h,e))}:e.setValue;break;case ne.SAMPLER_2D:case ne.SAMPLER_2D_SHADOW:e.setValue=function(e,t){var i=t.allocTexUnit();t.texture.setTexture2D(e||(s===ne.SAMPLER_2D_SHADOW?Jt:$t),i),h[0]!==i&&(a.uniform1i(o,i),h[0]=i)},e.set=t?function(e,t){for(var i=e.length,n=si(t,i),r=0;r!==i;++r)t.texture.setTexture2D(e[r]||(s===ne.SAMPLER_2D_SHADOW?Jt:$t),n[r]);ni(h,n)||(a.uniform1iv(o,n),ri(h,n))}:e.setValue;break;case ne.SAMPLER_CUBE:case ne.SAMPLER_CUBE_SHADOW:e.setValue=function(e,t){var i=t.allocTexUnit();t.texture.setTextureCube(e||ti,i),h[0]!==i&&(a.uniform1i(o,i),h[0]=i)},e.set=t?function(e,t){for(var i=e.length,n=si(t,i),r=0;r!==i;++r)t.texture.setTextureCube(e[r]||ti,n[r]);ni(h,n)||(a.uniform1iv(o,n),ri(h,n))}:e.setValue;break;case ne.SAMPLER_3D:e.setValue=function(e,t){var i=t.allocTexUnit();t.texture.setTexture3D(e||ei,i),h[0]!==i&&(a.uniform1i(o,i),h[0]=i)},e.set=t?function(e,t){for(var i=e.length,n=si(t,i),r=0;r!==i;++r)t.texture.setTexture3D(e[r]||ei,n[r]);ni(h,n)||(a.uniform1iv(o,n),ri(h,n))}:e.setValue;break;case ne.BOOL:case ne.INT:e.setValue=function(e){h[0]!==e&&(a.uniform1i(o,e),h[0]=e)},e.set=t?function(e){ni(h,e)||(a.uniform1iv(o,e),ri(h,e))}:e.setValue;break;case ne.FLOAT_VEC2:e.setValue=function(e,t){h[0]===e&&h[1]===t||(a.uniform2f(o,e,t),h[0]=e,h[1]=t)},e.set=function(e){ni(h,e)||(a.uniform2fv(o,e),ri(h,e))};break;case ne.BOOL_VEC2:case ne.INT_VEC2:e.setValue=function(e,t){h[0]===e&&h[1]===t||(a.uniform2i(o,e,t),h[0]=e,h[1]=t)},e.set=function(e){ni(h,e)||(a.uniform2iv(o,e),ri(h,e))};break;case ne.FLOAT_VEC3:e.setValue=function(e,t,i){h[0]===e&&h[1]===t&&h[2]===i||(a.uniform3f(o,e,t,i),h[0]=e,h[1]=t,h[2]=i)},e.set=function(e){ni(h,e)||(a.uniform3fv(o,e),ri(h,e))};break;case ne.BOOL_VEC3:case ne.INT_VEC3:e.setValue=function(e,t,i){h[0]===e&&h[1]===t&&h[2]===i||(a.uniform3i(o,e,t,i),h[0]=e,h[1]=t,h[2]=i)},e.set=function(e){ni(h,e)||(a.uniform3iv(o,e),ri(h,e))};break;case ne.FLOAT_VEC4:e.setValue=function(e,t,i,n){h[0]===e&&h[1]===t&&h[2]===i&&h[3]===n||(a.uniform4f(o,e,t,i,n),h[0]=e,h[1]=t,h[2]=i,h[3]=n)},e.set=function(e){ni(h,e)||(a.uniform4fv(o,e),ri(h,e))};break;case ne.BOOL_VEC4:case ne.INT_VEC4:e.setValue=function(e,t,i,n){h[0]===e&&h[1]===t&&h[2]===i&&h[3]===n||(a.uniform4i(o,e,t,i,n),h[0]=e,h[1]=t,h[2]=i,h[3]=n)},e.set=function(e){ni(h,e)||(a.uniform4iv(o,e),ri(h,e))};break;case ne.FLOAT_MAT2:e.setValue=e.set=function(e){ni(h,e)||(a.uniformMatrix2fv(o,!1,e),ri(h,e))};break;case ne.FLOAT_MAT3:e.setValue=e.set=function(e){ni(h,e)||(a.uniformMatrix3fv(o,!1,e),ri(h,e))};break;case ne.FLOAT_MAT4:e.setValue=e.set=function(e){ni(h,e)||(a.uniformMatrix4fv(o,!1,e),ri(h,e))}}}function hi(e,t,i,n){this.gl=e,this.id=t,this.type=i.type,this.location=n,this.setValue=void 0,this.set=void 0,this.cache=[],oi(this)}function ci(e,t,i,n){this.gl=e,this.id=t,this.type=i.type,this.size=i.size,this.location=n,this.setValue=void 0,this.set=void 0,this.cache=[],oi(this,!0)}function ui(e){this.id=e,ii.call(this)}ui.prototype.set=function(e,t){for(var i=this.seq,n=0,r=i.length;n!==r;++n){var a=i[n];a.set(e[a.id],t)}};var li=/([\w\d_]+)(\])?(\[|\.)?/g;function di(e,t){e.seq.push(t),e.map[t.id]=t}function pi(e,t,i,n){var r=t.name,a=r.length;for(li.lastIndex=0;;){var s=li.exec(r),o=li.lastIndex,h=s[1],c="]"===s[2],u=s[3];if(c&&(h|=0),void 0===u||"["===u&&o+2===a){di(n,void 0===u?new hi(e,h,t,i):new ci(e,h,t,i));break}var l=n.map[h];void 0===l&&di(n,l=new ui(h)),n=l}}function fi(e,t){ii.call(this);for(var i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),n=0;n<i;++n){var r=e.getActiveUniform(t,n),a=e.getUniformLocation(t,r.name);pi(e,r,a,this)}}function _i(e,t,i){this.gl=e,this.name=i.name,this.type=i.type,this.size=i.size,this.location=e.getAttribLocation(t,this.name),this.count=0,this.initCount(e),this.format=e.FLOAT,this.initFormat(e)}function mi(e,t,i){var n=e.createShader(t);return e.shaderSource(n,i),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS)||console.warn("shader not compiled!",e.getShaderInfoLog(n),function(e){for(var t=e.split("\n"),i=0;i<t.length;i++)t[i]=i+1+": "+t[i];return t.join("\n")}(i)),n}fi.prototype.set=function(e,t,i){var n=this.map[e];void 0!==n&&n.set(t,i)},fi.prototype.has=function(e){return!!this.map[e]},Object.assign(_i.prototype,{initCount:function(e){switch(this.type){case re.FLOAT:case re.BYTE:case re.UNSIGNED_BYTE:case re.UNSIGNED_SHORT:this.count=1;break;case re.FLOAT_VEC2:this.count=2;break;case re.FLOAT_VEC3:this.count=3;break;case re.FLOAT_VEC4:this.count=4}},initFormat:function(e){switch(this.type){case re.FLOAT:case re.FLOAT_VEC2:case re.FLOAT_VEC3:case re.FLOAT_VEC4:this.format=e.FLOAT;break;case re.UNSIGNED_BYTE:this.format=e.UNSIGNED_BYTE;break;case re.UNSIGNED_SHORT:this.format=e.UNSIGNED_SHORT;break;case re.BYTE:this.format=e.BYTE}}});var vi=0;function gi(e,t,i){this.id=vi++,this.usedTimes=1,this.code="",this.gl=e,this.vshaderSource=t,this.fshaderSource=i;var n=mi(e,e.VERTEX_SHADER,this.vshaderSource),r=mi(e,e.FRAGMENT_SHADER,this.fshaderSource);this.program=function(e,t,i){var n=e.createProgram();return e.attachShader(n,t),e.attachShader(n,i),e.linkProgram(n),e.getProgramParameter(n,e.LINK_STATUS)||console.warn("program not linked!",e.getProgramInfoLog(n)),n}(e,n,r),this.uniforms=new fi(e,this.program),this.attributes=function(e,t){for(var i={},n=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),r=0;r<n;r++){var a=e.getActiveAttrib(t,r),s=a.name,o=new _i(e,t,a);i[s]=o}return i}(e,this.program),e.deleteShader(n),e.deleteShader(r)}gi.prototype.dispose=function(){this.gl.deleteProgram(this.program),this.program=void 0};var Mi={alphaTest_frag:"#ifdef ALPHATEST\n\tif ( outColor.a < ALPHATEST ) {\n\t\tdiscard;\n\t} else {\n\t\toutColor.a = u_Opacity;\n\t}\n#endif",ambientlight_pars_frag:"uniform vec3 u_AmbientLightColor;",aoMap_pars_frag:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_frag:"vec4 outColor = vec4(u_Color, u_Opacity);",begin_vert:"vec3 transformed = vec3(a_Position);\n#if defined(USE_NORMAL) || defined(USE_ENV_MAP)\n    vec3 objectNormal = vec3(a_Normal);\n#endif",bsdfs:"\nvec4 BRDF_Diffuse_Lambert(vec4 diffuseColor) {\n    return RECIPROCAL_PI * diffuseColor;\n}\nvec4 F_Schlick( const in vec4 specularColor, const in float dotLH ) {\n\tfloat fresnel = pow( 1.0 - dotLH, 5.0 );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nvec4 BRDF_Specular_BlinnPhong(vec4 specularColor, vec3 N, vec3 L, vec3 V, float shininess) {\n    vec3 H = normalize(L + V);\n    float dotNH = saturate(dot(N, H));\n    float dotLH = saturate(dot(L, H));\n    vec4 F = F_Schlick(specularColor, dotLH);\n    float G = G_BlinnPhong_Implicit( );\n    float D = D_BlinnPhong(shininess, dotNH);\n    return F * G * D;\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nvec4 BRDF_Specular_GGX(vec4 specularColor, vec3 N, vec3 L, vec3 V, float roughness) {\n\tfloat alpha = pow2( roughness );\n\tvec3 H = normalize(L + V);\n\tfloat dotNL = saturate( dot(N, L) );\n\tfloat dotNV = saturate( dot(N, V) );\n\tfloat dotNH = saturate( dot(N, H) );\n\tfloat dotLH = saturate( dot(L, H) );\n\tvec4 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * G * D;\n}\nvec4 BRDF_Specular_GGX_Environment( const in vec3 N, const in vec3 V, const in vec4 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( N, V ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}",bumpMap_pars_frag:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd(vec2 uv) {\n\t\tvec2 dSTdx = dFdx( uv );\n\t\tvec2 dSTdy = dFdy( uv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, uv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, uv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, uv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",clippingPlanes_frag:"#if NUM_CLIPPING_PLANES > 0\n    vec4 plane;\n    #pragma unroll_loop\n    for ( int i = 0; i < NUM_CLIPPING_PLANES; i ++ ) {\n        plane = clippingPlanes[ i ];\n        if ( dot( -v_modelPos, plane.xyz ) > plane.w ) discard;\n    }\n#endif",clippingPlanes_pars_frag:"#if NUM_CLIPPING_PLANES > 0\n    uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",color_frag:"#ifdef USE_VCOLOR_RGB\n    outColor.rgb *= v_Color;\n#endif\n#ifdef USE_VCOLOR_RGBA\n    outColor *= v_Color;\n#endif",color_pars_frag:"#ifdef USE_VCOLOR_RGB\n    varying vec3 v_Color;\n#endif\n#ifdef USE_VCOLOR_RGBA\n    varying vec4 v_Color;\n#endif",color_pars_vert:"#ifdef USE_VCOLOR_RGB\n    attribute vec3 a_Color;\n    varying vec3 v_Color;\n#endif\n#ifdef USE_VCOLOR_RGBA\n    attribute vec4 a_Color;\n    varying vec4 v_Color;\n#endif",color_vert:"#if defined(USE_VCOLOR_RGB) || defined(USE_VCOLOR_RGBA)\n    v_Color = a_Color;\n#endif",common_frag:"uniform mat4 u_View;\nuniform float u_Opacity;\nuniform vec3 u_Color;\nuniform vec3 u_CameraPosition;",common_vert:"attribute vec3 a_Position;\nattribute vec3 a_Normal;\n#include <transpose>\n#include <inverse>\nuniform mat4 u_Projection;\nuniform mat4 u_View;\nuniform mat4 u_Model;\nuniform vec3 u_CameraPosition;\n#ifdef USE_MORPHTARGETS\n    attribute vec3 morphTarget0;\n    attribute vec3 morphTarget1;\n    attribute vec3 morphTarget2;\n    attribute vec3 morphTarget3;\n    #ifdef USE_MORPHNORMALS\n    \tattribute vec3 morphNormal0;\n    \tattribute vec3 morphNormal1;\n    \tattribute vec3 morphNormal2;\n    \tattribute vec3 morphNormal3;\n    #else\n    \tattribute vec3 morphTarget4;\n    \tattribute vec3 morphTarget5;\n    \tattribute vec3 morphTarget6;\n    \tattribute vec3 morphTarget7;\n    #endif\n#endif",diffuseMap_frag:"#ifdef USE_DIFFUSE_MAP\n    #if (USE_DIFFUSE_MAP == 1)\n        vec4 texelColor = texture2D( diffuseMap, v_Uv );\n    #elif (USE_DIFFUSE_MAP == 2)\n        vec4 texelColor = texture2D( diffuseMap, v_Uv2 );\n    #else \n        vec4 texelColor = texture2D( diffuseMap, v_Uv );\n    #endif\n    \n    texelColor = mapTexelToLinear( texelColor );\n    outColor *= texelColor;\n#endif",diffuseMap_pars_frag:"#ifdef USE_DIFFUSE_MAP\n    uniform sampler2D diffuseMap;\n#endif",directlight_pars_frag:"struct DirectLight\n{\n    vec3 direction;\n    vec4 color;\n    int shadow;\n    float shadowBias;\n    float shadowRadius;\n    vec2 shadowMapSize;\n};\nuniform DirectLight u_Directional[NUM_DIR_LIGHTS];",emissiveMap_frag:"#ifdef USE_EMISSIVEMAP\n\t#if (USE_EMISSIVEMAP == 1)\n\t\tvec4 emissiveColor = texture2D(emissiveMap, v_Uv);\n\t#elif (USE_EMISSIVEMAP == 2)\n        vec4 emissiveColor = texture2D(emissiveMap, v_Uv2);\n    #else \n        vec4 emissiveColor = texture2D(emissiveMap, v_Uv);\n    #endif\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissiveMap_pars_frag:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_frag:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_frag:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",end_frag:"gl_FragColor = outColor;",envMap_frag:"#ifdef USE_ENV_MAP\n    vec3 envDir;\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        envDir = reflect(normalize(v_worldPos - u_CameraPosition), N);\n    #else\n        envDir = v_EnvPos;\n    #endif\n    vec4 envColor = textureCube(envMap, envDir);\n    envColor = envMapTexelToLinear( envColor );\n    #ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutColor = mix(outColor, envColor * outColor, u_EnvMap_Intensity);\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutColor = mix(outColor, envColor, u_EnvMap_Intensity);\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutColor += envColor * u_EnvMap_Intensity;\n\t#endif\n#endif",envMap_pars_frag:"#ifdef USE_ENV_MAP\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        varying vec3 v_worldPos;\n    #else\n        varying vec3 v_EnvPos;\n    #endif\n    uniform samplerCube envMap;\n    uniform float u_EnvMap_Intensity;\n    uniform int maxMipLevel;\n#endif",envMap_pars_vert:"#ifdef USE_ENV_MAP\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        varying vec3 v_worldPos;\n    #else\n        varying vec3 v_EnvPos;\n    #endif\n#endif",envMap_vert:"#ifdef USE_ENV_MAP\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        v_worldPos = (u_Model * vec4(transformed, 1.0)).xyz;\n    #else\n        v_EnvPos = reflect(normalize((u_Model * vec4(transformed, 1.0)).xyz - u_CameraPosition), (transposeMat4(inverseMat4(u_Model)) * vec4(objectNormal, 1.0)).xyz);\n    #endif\n#endif",fog_frag:"#ifdef USE_FOG\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\n    #ifdef USE_EXP2_FOG\n        float fogFactor = whiteCompliment( exp2( - u_FogDensity * u_FogDensity * depth * depth * LOG2 ) );\n    #else\n        float fogFactor = smoothstep( u_FogNear, u_FogFar, depth );\n    #endif\n    gl_FragColor.rgb = mix( gl_FragColor.rgb, u_FogColor, fogFactor );\n#endif",fog_pars_frag:"#ifdef USE_FOG\n    uniform vec3 u_FogColor;\n    #ifdef USE_EXP2_FOG\n        uniform float u_FogDensity;\n    #else\n        uniform float u_FogNear;\n        uniform float u_FogFar;\n    #endif\n#endif",inverse:"mat4 inverseMat4(mat4 m) {\n    float\n    a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\n    a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\n    a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\n    a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\n    b00 = a00 * a11 - a01 * a10,\n    b01 = a00 * a12 - a02 * a10,\n    b02 = a00 * a13 - a03 * a10,\n    b03 = a01 * a12 - a02 * a11,\n    b04 = a01 * a13 - a03 * a11,\n    b05 = a02 * a13 - a03 * a12,\n    b06 = a20 * a31 - a21 * a30,\n    b07 = a20 * a32 - a22 * a30,\n    b08 = a20 * a33 - a23 * a30,\n    b09 = a21 * a32 - a22 * a31,\n    b10 = a21 * a33 - a23 * a31,\n    b11 = a22 * a33 - a23 * a32,\n    det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    return mat4(\n        a11 * b11 - a12 * b10 + a13 * b09,\n        a02 * b10 - a01 * b11 - a03 * b09,\n        a31 * b05 - a32 * b04 + a33 * b03,\n        a22 * b04 - a21 * b05 - a23 * b03,\n        a12 * b08 - a10 * b11 - a13 * b07,\n        a00 * b11 - a02 * b08 + a03 * b07,\n        a32 * b02 - a30 * b05 - a33 * b01,\n        a20 * b05 - a22 * b02 + a23 * b01,\n        a10 * b10 - a11 * b08 + a13 * b06,\n        a01 * b08 - a00 * b10 - a03 * b06,\n        a30 * b04 - a31 * b02 + a33 * b00,\n        a21 * b02 - a20 * b04 - a23 * b00,\n        a11 * b07 - a10 * b09 - a12 * b06,\n        a00 * b09 - a01 * b07 + a02 * b06,\n        a31 * b01 - a30 * b03 - a32 * b00,\n        a20 * b03 - a21 * b01 + a22 * b00) / det;\n}",light_frag:"#ifdef USE_LIGHT\n    vec4 light;\n    vec3 L;\n    vec4 totalReflect = vec4(0., 0., 0., 0.);\n    vec3 indirectIrradiance = vec3(0., 0., 0.);    vec3 indirectRadiance = vec3(0., 0., 0.);\n    #ifdef USE_PBR\n        #ifdef USE_PBR2\n            vec4 diffuseColor = outColor.xyzw;\n            vec4 specularColor = vec4(specularFactor.rgb, 1.);\n\t\t\tfloat roughness = clamp(1.0 - glossinessFactor, 0.04, 1.0);\n         #else\n            vec4 diffuseColor = outColor.xyzw * (1.0 - metalnessFactor);\n            vec4 specularColor = mix(vec4(0.04), outColor.xyzw, metalnessFactor);\n            float roughness = clamp(roughnessFactor, 0.04, 1.0);\n         #endif\n    #else\n        vec4 diffuseColor = outColor.xyzw;\n        #ifdef USE_PHONG\n            vec4 specularColor = vec4(u_SpecularColor, 1.);\n            float shininess = u_Specular;\n        #endif\n    #endif\n    #ifdef USE_AMBIENT_LIGHT\n        indirectIrradiance += u_AmbientLightColor;\n    #endif\n    #ifdef USE_PBR\n        #ifdef USE_ENV_MAP\n    \t\tvec3 envDir;\n    \t    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n    \t        envDir = reflect(normalize(v_worldPos - u_CameraPosition), N);\n    \t    #else\n    \t        envDir = v_EnvPos;\n    \t    #endif\n            indirectIrradiance += getLightProbeIndirectIrradiance(maxMipLevel, envDir);\n            indirectRadiance += getLightProbeIndirectRadiance(GGXRoughnessToBlinnExponent(roughness), maxMipLevel, envDir);\n    \t#endif\n    #endif\n    #if (defined(USE_PHONG) || defined(USE_PBR))\n        vec3 V = normalize( u_CameraPosition - v_modelPos );\n    #endif\n    float dotNL;\n    vec4 irradiance;\n    vec4 reflectLight;\n    float dist;\n    #if NUM_DIR_LIGHTS > 0\n        #pragma unroll_loop\n        for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n            L = -u_Directional[ i ].direction;\n            light = u_Directional[ i ].color;\n            L = normalize(L);\n            dotNL = saturate( dot(N, L) );\n            irradiance = light * dotNL;\n            #if NUM_DIR_SHADOWS > 0\n                #ifdef USE_PCSS_SOFT_SHADOW\n                    irradiance *= bool( u_Directional[ i ].shadow ) ? getShadowWithPCSS( directionalDepthMap[ i ], directionalShadowMap[ i ], vDirectionalShadowCoord[ i ], u_Directional[ i ].shadowBias, u_Directional[ i ].shadowRadius, u_Directional[ i ].shadowMapSize ) : 1.0;\n                #else\n                    irradiance *= bool( u_Directional[ i ].shadow ) ? getShadow( directionalShadowMap[ i ], vDirectionalShadowCoord[ i ], u_Directional[ i ].shadowBias, u_Directional[ i ].shadowRadius, u_Directional[ i ].shadowMapSize ) : 1.0;\n                #endif\n            #endif\n            reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\n            #ifdef USE_PHONG\n                reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\n            #endif\n            #ifdef USE_PBR\n                reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness);\n            #endif\n            totalReflect += reflectLight;\n        }\n    #endif\n    #if NUM_POINT_LIGHTS > 0\n        vec3 worldV;\n        #pragma unroll_loop\n        for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n            L = u_Point[ i ].position - v_modelPos;\n            dist = pow(clamp(1. - length(L) / u_Point[ i ].distance, 0.0, 1.0), u_Point[ i ].decay);\n            light = u_Point[ i ].color * dist;\n            L = normalize(L);\n            dotNL = saturate( dot(N, L) );\n            irradiance = light * dotNL;\n            #if NUM_POINT_SHADOWS > 0\n                worldV = v_modelPos - u_Point[ i ].position;\n                irradiance *= bool( u_Point[ i ].shadow ) ? getPointShadow( pointShadowMap[ i ], worldV, u_Point[ i ].shadowBias, u_Point[ i ].shadowRadius, u_Point[ i ].shadowMapSize, u_Point[ i ].shadowCameraNear, u_Point[ i ].shadowCameraFar ) : 1.0;\n            #endif\n            reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\n            #ifdef USE_PHONG\n                reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\n            #endif\n            #ifdef USE_PBR\n                reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness);\n            #endif\n            totalReflect += reflectLight;\n        }\n    #endif\n    #if NUM_SPOT_LIGHTS > 0\n        float lightDistance;\n        float angleCos;\n        float spotEffect;\n        #pragma unroll_loop\n        for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n            L = u_Spot[ i ].position - v_modelPos;\n            lightDistance = length(L);\n            L = normalize(L);\n            angleCos = dot( L, -normalize(u_Spot[ i ].direction) );\n            if( all( bvec2(angleCos > u_Spot[ i ].coneCos, lightDistance < u_Spot[ i ].distance) ) ) {\n                spotEffect = smoothstep( u_Spot[ i ].coneCos, u_Spot[ i ].penumbraCos, angleCos );\n                dist = pow(clamp(1. - lightDistance / u_Spot[ i ].distance, 0.0, 1.0), u_Spot[ i ].decay);\n                light = u_Spot[ i ].color * dist * spotEffect;\n                dotNL = saturate( dot(N, L) );\n                irradiance = light * dotNL;\n                #if NUM_SPOT_SHADOWS > 0\n                    #ifdef USE_PCSS_SOFT_SHADOW\n                        irradiance *= bool( u_Spot[ i ].shadow ) ? getShadowWithPCSS( spotDepthMap[ i ], spotShadowMap[ i ], vSpotShadowCoord[ i ], u_Spot[ i ].shadowBias, u_Spot[ i ].shadowRadius, u_Spot[ i ].shadowMapSize ) : 1.0;\n                    #else\n                        irradiance *= bool( u_Spot[ i ].shadow ) ? getShadow( spotShadowMap[ i ], vSpotShadowCoord[ i ], u_Spot[ i ].shadowBias, u_Spot[ i ].shadowRadius, u_Spot[ i ].shadowMapSize ) : 1.0;\n                    #endif\n                #endif\n                reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\n                #ifdef USE_PHONG\n                    reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\n                #endif\n                #ifdef USE_PBR\n                    reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness);\n                #endif\n                totalReflect += reflectLight;\n            }\n        }\n    #endif\n    vec3 indirectDiffuse = indirectIrradiance * BRDF_Diffuse_Lambert(diffuseColor).rgb;\n    vec3 indirectSpecular = vec3(0., 0., 0.);\n    #if defined( USE_ENV_MAP ) && defined( USE_PBR )\n        indirectSpecular += indirectRadiance * BRDF_Specular_GGX_Environment(N, V, specularColor, roughness).rgb;\n    #endif\n    #ifdef USE_AOMAP\n        #if (USE_AOMAP == 1)\n    \t    float ambientOcclusion = ( texture2D( aoMap, v_Uv ).r - 1.0 ) * aoMapIntensity + 1.0;\n        #elif (USE_AOMAP == 2)\n            float ambientOcclusion = ( texture2D( aoMap, v_Uv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n        #else\n            float ambientOcclusion = ( texture2D( aoMap, v_Uv ).r - 1.0 ) * aoMapIntensity + 1.0;\n        #endif\n    \t\n    \tindirectDiffuse *= ambientOcclusion;\n    \t#if defined( USE_ENV_MAP ) && defined( USE_PBR )\n    \t\tfloat dotNV = saturate( dot( N, V ) );\n    \t\tindirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, GGXRoughnessToBlinnExponent(roughness) );\n    \t#endif\n    #endif\n    outColor.xyz = totalReflect.xyz + indirectDiffuse + indirectSpecular;\n#endif",light_pars_frag:"#ifdef USE_AMBIENT_LIGHT\n    #include <ambientlight_pars_frag>\n#endif\n#if NUM_DIR_LIGHTS > 0\n    #include <directlight_pars_frag>\n#endif\n#if NUM_POINT_LIGHTS > 0\n    #include <pointlight_pars_frag>\n#endif\n#if NUM_SPOT_LIGHTS > 0\n    #include <spotlight_pars_frag>\n#endif\n#if defined(USE_PBR) && defined(USE_ENV_MAP)\n    vec3 getLightProbeIndirectIrradiance(const in int maxMIPLevel, const in vec3 envDir) {\n    \t#ifdef TEXTURE_LOD_EXT\n    \t\tvec4 envMapColor = textureCubeLodEXT( envMap, envDir, float( maxMIPLevel ) );\n    \t#else\n    \t\tvec4 envMapColor = textureCube( envMap, envDir, float( maxMIPLevel ) );\n    \t#endif\n        envMapColor = envMapTexelToLinear( envMapColor );\n        return PI * envMapColor.rgb * u_EnvMap_Intensity;\n    }\n    float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n    \tfloat maxMIPLevelScalar = float( maxMIPLevel );\n    \tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n    \treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n    }\n    vec3 getLightProbeIndirectRadiance(const in float blinnShininessExponent, const in int maxMIPLevel, const in vec3 envDir) {\n        float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n        #ifdef TEXTURE_LOD_EXT\n    \t\tvec4 envMapColor = textureCubeLodEXT( envMap, envDir, specularMIPLevel );\n    \t#else\n    \t\tvec4 envMapColor = textureCube( envMap, envDir, specularMIPLevel );\n    \t#endif\n        envMapColor = envMapTexelToLinear( envMapColor );\n        return envMapColor.rgb * u_EnvMap_Intensity;\n    }\n    float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n    \treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n    }\n#endif",alphamap_pars_frag:"#ifdef USE_ALPHA_MAP\n\tuniform sampler2D alphaMap;\n#endif",alphamap_frag:"#ifdef USE_ALPHA_MAP\n\t#ifdef USE_ALPHA_MAP_UV_TRANSFORM\n\t\toutColor.a *= texture2D(alphaMap, vAlphaMapUV).g;\n\t#else\n\t\t#if (USE_ALPHA_MAP == 1)\n\t\t\toutColor.a *= texture2D(alphaMap, v_Uv).g;\n\t\t#elif (USE_ALPHA_MAP == 2)\n            outColor.a *= texture2D(alphaMap, v_Uv2).g;\n\t\t#else\n            outColor.a *= texture2D(alphaMap, v_Uv).g;\n        #endif\n\t#endif\n#endif",normalMap_pars_frag:"#include <tbn>\n#include <tsn>\nuniform sampler2D normalMap;",normal_frag:"#ifdef USE_NORMAL\n    #ifdef DOUBLE_SIDED\n    \tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n    #else\n    \tfloat flipNormal = 1.0;\n    #endif\n    #ifdef FLAT_SHADED\n    \tvec3 fdx = vec3( dFdx( v_modelPos.x ), dFdx( v_modelPos.y ), dFdx( v_modelPos.z ) );\n    \tvec3 fdy = vec3( dFdy( v_modelPos.x ), dFdy( v_modelPos.y ), dFdy( v_modelPos.z ) );\n    \tvec3 N = normalize( cross( fdx, fdy ) );\n    #else\n        vec3 N = normalize(v_Normal) * flipNormal;\n    #endif\n    #ifdef USE_NORMAL_MAP\n        vec3 normalMapColor = texture2D(normalMap, v_Uv).rgb;\n        mat3 tspace = tsn(N, -v_modelPos, vec2(v_Uv.x, 1.0 - v_Uv.y));\n        N = normalize(tspace * (normalMapColor * 2.0 - 1.0));\n    #elif defined(USE_BUMPMAP)\n        N = perturbNormalArb(-v_modelPos, N, dHdxy_fwd(v_Uv));\n    #endif\n#endif",normal_pars_frag:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\n    varying vec3 v_Normal;\n#endif",normal_pars_vert:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\n    varying vec3 v_Normal;\n#endif",normal_vert:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\n    v_Normal = (transposeMat4(inverseMat4(u_Model)) * vec4(objectNormal, 1.0)).xyz;\n    #ifdef FLIP_SIDED\n    \tv_Normal = - v_Normal;\n    #endif\n#endif",packing:"const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n    vec4 r = vec4( fract( v * PackFactors ), v );\n    r.yzw -= r.xyz * ShiftRight8;    return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n    return dot( v, UnpackFactors );\n}",pointlight_pars_frag:"struct PointLight\n{\n    vec3 position;\n    vec4 color;\n    float distance;\n    float decay;\n    int shadow;\n    float shadowBias;\n    float shadowRadius;\n    vec2 shadowMapSize;\n    float shadowCameraNear;\n    float shadowCameraFar;\n};\nuniform PointLight u_Point[NUM_POINT_LIGHTS];",premultipliedAlpha_frag:"#ifdef USE_PREMULTIPLIED_ALPHA\n    gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;\n#endif",pvm_vert:"gl_Position = u_Projection * u_View * u_Model * vec4(transformed, 1.0);",dithering_frag:"#if defined( DITHERING )\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_frag:"#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",shadow:"\n#ifdef WEBGL2\n    float computeShadow(sampler2DShadow shadowMap, vec3 shadowCoord) {\n        return texture2D( shadowMap, shadowCoord );\n    }\n#else\n    float computeShadow(sampler2D shadowMap, vec3 shadowCoord) {\n        return step( shadowCoord.z, unpackRGBAToDepth( texture2D( shadowMap, shadowCoord.xy ) ) );\n    }\n#endif\nfloat computeShadowWithPoissonSampling( sampler2DShadow shadowMap, vec3 shadowCoord, float texelSize ) {\n    vec3 poissonDisk[4];\n    poissonDisk[0] = vec3(-0.94201624, -0.39906216, 0);\n    poissonDisk[1] = vec3(0.94558609, -0.76890725, 0);\n    poissonDisk[2] = vec3(-0.094184101, -0.92938870, 0);\n    poissonDisk[3] = vec3(0.34495938, 0.29387760, 0);\n    return computeShadow( shadowMap, shadowCoord + poissonDisk[0] * texelSize ) * 0.25 +\n        computeShadow( shadowMap, shadowCoord + poissonDisk[1] * texelSize ) * 0.25 +\n        computeShadow( shadowMap, shadowCoord + poissonDisk[2] * texelSize ) * 0.25 +\n        computeShadow( shadowMap, shadowCoord + poissonDisk[3] * texelSize ) * 0.25;\n}\nfloat computeShadowWithPCF1(sampler2DShadow shadowSampler, vec3 shadowCoord) {\n    return computeShadow(shadowSampler, shadowCoord);\n}\nfloat computeShadowWithPCF3(sampler2DShadow shadowSampler, vec3 shadowCoord, vec2 shadowMapSizeAndInverse) {\n    vec2 uv = shadowCoord.xy * shadowMapSizeAndInverse.x;    uv += 0.5;    vec2 st = fract(uv);    vec2 base_uv = floor(uv) - 0.5;    base_uv *= shadowMapSizeAndInverse.y;\n    vec2 uvw0 = 3. - 2. * st;\n    vec2 uvw1 = 1. + 2. * st;\n    vec2 u = vec2((2. - st.x) / uvw0.x - 1., st.x / uvw1.x + 1.) * shadowMapSizeAndInverse.y;\n    vec2 v = vec2((2. - st.y) / uvw0.y - 1., st.y / uvw1.y + 1.) * shadowMapSizeAndInverse.y;\n    float shadow = 0.;\n    shadow += uvw0.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[0]), shadowCoord.z));\n    shadow += uvw1.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[0]), shadowCoord.z));\n    shadow += uvw0.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[1]), shadowCoord.z));\n    shadow += uvw1.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[1]), shadowCoord.z));\n    shadow = shadow / 16.;\n    return shadow;\n}\nfloat computeShadowWithPCF5(sampler2DShadow shadowSampler, vec3 shadowCoord, vec2 shadowMapSizeAndInverse) {\n    vec2 uv = shadowCoord.xy * shadowMapSizeAndInverse.x;    uv += 0.5;    vec2 st = fract(uv);    vec2 base_uv = floor(uv) - 0.5;    base_uv *= shadowMapSizeAndInverse.y;\n    vec2 uvw0 = 4. - 3. * st;\n    vec2 uvw1 = vec2(7.);\n    vec2 uvw2 = 1. + 3. * st;\n    vec3 u = vec3((3. - 2. * st.x) / uvw0.x - 2., (3. + st.x) / uvw1.x, st.x / uvw2.x + 2.) * shadowMapSizeAndInverse.y;\n    vec3 v = vec3((3. - 2. * st.y) / uvw0.y - 2., (3. + st.y) / uvw1.y, st.y / uvw2.y + 2.) * shadowMapSizeAndInverse.y;\n    float shadow = 0.;\n    shadow += uvw0.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[0]), shadowCoord.z));\n    shadow += uvw1.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[0]), shadowCoord.z));\n    shadow += uvw2.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[2], v[0]), shadowCoord.z));\n    shadow += uvw0.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[1]), shadowCoord.z));\n    shadow += uvw1.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[1]), shadowCoord.z));\n    shadow += uvw2.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[2], v[1]), shadowCoord.z));\n    shadow += uvw0.x * uvw2.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[2]), shadowCoord.z));\n    shadow += uvw1.x * uvw2.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[2]), shadowCoord.z));\n    shadow += uvw2.x * uvw2.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[2], v[2]), shadowCoord.z));\n    shadow = shadow / 144.;\n    return shadow;\n}\nfloat getShadow( sampler2DShadow shadowMap, vec4 shadowCoord, float shadowBias, float shadowRadius, vec2 shadowMapSize ) {\n    shadowCoord.xyz /= shadowCoord.w;\n    shadowCoord.z += shadowBias;\n    bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n    bool inFrustum = all( inFrustumVec );\n    bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n    bool frustumTest = all( frustumTestVec );\n    if ( frustumTest ) {\n        #ifdef USE_HARD_SHADOW\n            return computeShadow(shadowMap, shadowCoord.xyz);\n        #else\n            #ifdef USE_PCF3_SOFT_SHADOW\n                vec2 shadowMapSizeAndInverse = vec2(shadowMapSize.x, 1. / shadowMapSize.x);\n                return computeShadowWithPCF3(shadowMap, shadowCoord.xyz, shadowMapSizeAndInverse);\n            #else\n                #ifdef USE_PCF5_SOFT_SHADOW\n                    vec2 shadowMapSizeAndInverse = vec2(shadowMapSize.x, 1. / shadowMapSize.x);\n                    return computeShadowWithPCF5(shadowMap, shadowCoord.xyz, shadowMapSizeAndInverse);\n                #else\n                    float texelSize = shadowRadius / shadowMapSize.x;\n                    return computeShadowWithPoissonSampling(shadowMap, shadowCoord.xyz, texelSize);\n                #endif\n            #endif\n        #endif\n    }\n    return 1.0;\n}\nfloat textureCubeCompare( samplerCube depths, vec3 uv, float compare ) {\n    return step( compare, unpackRGBAToDepth( textureCube( depths, uv ) ) );\n}\nfloat getPointShadow( samplerCube shadowMap, vec3 V, float shadowBias, float shadowRadius, vec2 shadowMapSize, float shadowCameraNear, float shadowCameraFar ) {\n    float depth = ( length( V ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );    depth += shadowBias;\n    #ifdef USE_HARD_SHADOW\n        return textureCubeCompare( shadowMap, normalize(V), depth);\n    #else\n        float texelSize = shadowRadius / shadowMapSize.x;\n        vec3 poissonDisk[4];\n        poissonDisk[0] = vec3(-1.0, 1.0, -1.0);\n        poissonDisk[1] = vec3(1.0, -1.0, -1.0);\n        poissonDisk[2] = vec3(-1.0, -1.0, -1.0);\n        poissonDisk[3] = vec3(1.0, -1.0, 1.0);\n        return textureCubeCompare( shadowMap, normalize(V) + poissonDisk[0] * texelSize, depth ) * 0.25 +\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[1] * texelSize, depth ) * 0.25 +\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[2] * texelSize, depth ) * 0.25 +\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[3] * texelSize, depth ) * 0.25;\n    #endif\n}\n#ifdef USE_PCSS_SOFT_SHADOW\n    const vec3 PoissonSamplers32[64] = vec3[64](\n        vec3(0.06407013, 0.05409927, 0.),\n        vec3(0.7366577, 0.5789394, 0.),\n        vec3(-0.6270542, -0.5320278, 0.),\n        vec3(-0.4096107, 0.8411095, 0.),\n        vec3(0.6849564, -0.4990818, 0.),\n        vec3(-0.874181, -0.04579735, 0.),\n        vec3(0.9989998, 0.0009880066, 0.),\n        vec3(-0.004920578, -0.9151649, 0.),\n        vec3(0.1805763, 0.9747483, 0.),\n        vec3(-0.2138451, 0.2635818, 0.),\n        vec3(0.109845, 0.3884785, 0.),\n        vec3(0.06876755, -0.3581074, 0.),\n        vec3(0.374073, -0.7661266, 0.),\n        vec3(0.3079132, -0.1216763, 0.),\n        vec3(-0.3794335, -0.8271583, 0.),\n        vec3(-0.203878, -0.07715034, 0.),\n        vec3(0.5912697, 0.1469799, 0.),\n        vec3(-0.88069, 0.3031784, 0.),\n        vec3(0.5040108, 0.8283722, 0.),\n        vec3(-0.5844124, 0.5494877, 0.),\n        vec3(0.6017799, -0.1726654, 0.),\n        vec3(-0.5554981, 0.1559997, 0.),\n        vec3(-0.3016369, -0.3900928, 0.),\n        vec3(-0.5550632, -0.1723762, 0.),\n        vec3(0.925029, 0.2995041, 0.),\n        vec3(-0.2473137, 0.5538505, 0.),\n        vec3(0.9183037, -0.2862392, 0.),\n        vec3(0.2469421, 0.6718712, 0.),\n        vec3(0.3916397, -0.4328209, 0.),\n        vec3(-0.03576927, -0.6220032, 0.),\n        vec3(-0.04661255, 0.7995201, 0.),\n        vec3(0.4402924, 0.3640312, 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.)\n    );\n    const vec3 PoissonSamplers64[64] = vec3[64](\n        vec3(-0.613392, 0.617481, 0.),\n        vec3(0.170019, -0.040254, 0.),\n        vec3(-0.299417, 0.791925, 0.),\n        vec3(0.645680, 0.493210, 0.),\n        vec3(-0.651784, 0.717887, 0.),\n        vec3(0.421003, 0.027070, 0.),\n        vec3(-0.817194, -0.271096, 0.),\n        vec3(-0.705374, -0.668203, 0.),\n        vec3(0.977050, -0.108615, 0.),\n        vec3(0.063326, 0.142369, 0.),\n        vec3(0.203528, 0.214331, 0.),\n        vec3(-0.667531, 0.326090, 0.),\n        vec3(-0.098422, -0.295755, 0.),\n        vec3(-0.885922, 0.215369, 0.),\n        vec3(0.566637, 0.605213, 0.),\n        vec3(0.039766, -0.396100, 0.),\n        vec3(0.751946, 0.453352, 0.),\n        vec3(0.078707, -0.715323, 0.),\n        vec3(-0.075838, -0.529344, 0.),\n        vec3(0.724479, -0.580798, 0.),\n        vec3(0.222999, -0.215125, 0.),\n        vec3(-0.467574, -0.405438, 0.),\n        vec3(-0.248268, -0.814753, 0.),\n        vec3(0.354411, -0.887570, 0.),\n        vec3(0.175817, 0.382366, 0.),\n        vec3(0.487472, -0.063082, 0.),\n        vec3(-0.084078, 0.898312, 0.),\n        vec3(0.488876, -0.783441, 0.),\n        vec3(0.470016, 0.217933, 0.),\n        vec3(-0.696890, -0.549791, 0.),\n        vec3(-0.149693, 0.605762, 0.),\n        vec3(0.034211, 0.979980, 0.),\n        vec3(0.503098, -0.308878, 0.),\n        vec3(-0.016205, -0.872921, 0.),\n        vec3(0.385784, -0.393902, 0.),\n        vec3(-0.146886, -0.859249, 0.),\n        vec3(0.643361, 0.164098, 0.),\n        vec3(0.634388, -0.049471, 0.),\n        vec3(-0.688894, 0.007843, 0.),\n        vec3(0.464034, -0.188818, 0.),\n        vec3(-0.440840, 0.137486, 0.),\n        vec3(0.364483, 0.511704, 0.),\n        vec3(0.034028, 0.325968, 0.),\n        vec3(0.099094, -0.308023, 0.),\n        vec3(0.693960, -0.366253, 0.),\n        vec3(0.678884, -0.204688, 0.),\n        vec3(0.001801, 0.780328, 0.),\n        vec3(0.145177, -0.898984, 0.),\n        vec3(0.062655, -0.611866, 0.),\n        vec3(0.315226, -0.604297, 0.),\n        vec3(-0.780145, 0.486251, 0.),\n        vec3(-0.371868, 0.882138, 0.),\n        vec3(0.200476, 0.494430, 0.),\n        vec3(-0.494552, -0.711051, 0.),\n        vec3(0.612476, 0.705252, 0.),\n        vec3(-0.578845, -0.768792, 0.),\n        vec3(-0.772454, -0.090976, 0.),\n        vec3(0.504440, 0.372295, 0.),\n        vec3(0.155736, 0.065157, 0.),\n        vec3(0.391522, 0.849605, 0.),\n        vec3(-0.620106, -0.328104, 0.),\n        vec3(0.789239, -0.419965, 0.),\n        vec3(-0.545396, 0.538133, 0.),\n        vec3(-0.178564, -0.596057, 0.)\n    );\n    float getRand(vec2 seed) {\n        return fract(sin(dot(seed.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n    float computeShadowWithPCSS(sampler2D depthSampler, sampler2DShadow shadowSampler, vec3 shadowCoord, float shadowMapSizeInverse, float lightSizeUV, int searchTapCount, int pcfTapCount, vec3[64] poissonSamplers) {\n        float depthMetric = shadowCoord.z;\n        float blockerDepth = 0.0;\n        float sumBlockerDepth = 0.0;\n        float numBlocker = 0.0;\n        for (int i = 0; i < searchTapCount; i ++) {\n            blockerDepth = unpackRGBAToDepth( texture( depthSampler, shadowCoord.xy + (lightSizeUV * shadowMapSizeInverse * PoissonSamplers32[i].xy) ) );\n            if (blockerDepth < depthMetric) {\n                sumBlockerDepth += blockerDepth;\n                numBlocker++;\n            }\n        }\n        if (numBlocker < 1.0) {\n            return 1.0;\n        }\n        float avgBlockerDepth = sumBlockerDepth / numBlocker;\n        float AAOffset = shadowMapSizeInverse * 10.;\n        float penumbraRatio = ((depthMetric - avgBlockerDepth) + AAOffset);\n        float filterRadius = penumbraRatio * lightSizeUV * shadowMapSizeInverse;\n        float random = getRand(shadowCoord.xy);        float rotationAngle = random * 3.1415926;\n        vec2 rotationVector = vec2(cos(rotationAngle), sin(rotationAngle));\n        float shadow = 0.;\n        for (int i = 0; i < pcfTapCount; i++) {\n            vec3 offset = poissonSamplers[i];\n            offset = vec3(offset.x * rotationVector.x - offset.y * rotationVector.y, offset.y * rotationVector.x + offset.x * rotationVector.y, 0.);\n            shadow += texture(shadowSampler, shadowCoord + offset * filterRadius);\n        }\n        shadow /= float(pcfTapCount);\n        shadow = mix(shadow, 1., depthMetric - avgBlockerDepth);\n        return shadow;\n    }\n    float getShadowWithPCSS( sampler2D depthSampler, sampler2DShadow shadowMap, vec4 shadowCoord, float shadowBias, float shadowRadius, vec2 shadowMapSize ) {\n        shadowCoord.xyz /= shadowCoord.w;\n        shadowCoord.z += shadowBias;\n        bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n        bool inFrustum = all( inFrustumVec );\n        bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n        bool frustumTest = all( frustumTestVec );\n        if ( frustumTest ) {\n            #ifdef USE_PCSS16_SOFT_SHADOW\n                return computeShadowWithPCSS(depthSampler, shadowMap, shadowCoord.xyz, 1. / shadowMapSize.x, 0.1 * shadowMapSize.x, 16, 16, PoissonSamplers32);\n            #else\n                #ifdef USE_PCSS32_SOFT_SHADOW\n                    return computeShadowWithPCSS(depthSampler, shadowMap, shadowCoord.xyz, 1. / shadowMapSize.x, 0.1 * shadowMapSize.x, 16, 32, PoissonSamplers32);\n                #else\n                    return computeShadowWithPCSS(depthSampler, shadowMap, shadowCoord.xyz, 1. / shadowMapSize.x, 0.1 * shadowMapSize.x, 32, 64, PoissonSamplers64);\n                #endif\n            #endif\n        }\n        return 1.0;\n    }\n#endif",shadowMap_frag:"#ifdef USE_SHADOW\n#endif",shadowMap_pars_frag:"#ifdef USE_SHADOW\n    #if NUM_DIR_SHADOWS > 0\n        uniform sampler2DShadow directionalShadowMap[ NUM_DIR_LIGHTS ];\n        varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n        #ifdef USE_PCSS_SOFT_SHADOW\n            uniform sampler2D directionalDepthMap[ NUM_DIR_LIGHTS ];\n        #endif\n    #endif\n    #if NUM_POINT_SHADOWS > 0\n        uniform samplerCube pointShadowMap[ NUM_POINT_LIGHTS ];\n    #endif\n    #if NUM_SPOT_SHADOWS > 0\n        uniform sampler2DShadow spotShadowMap[ NUM_SPOT_LIGHTS ];\n        varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n        #ifdef USE_PCSS_SOFT_SHADOW\n            uniform sampler2D spotDepthMap[ NUM_SPOT_LIGHTS ];\n        #endif\n    #endif\n    #include <packing>\n    #include <shadow>\n#endif",shadowMap_pars_vert:"#ifdef USE_SHADOW\n    #if NUM_DIR_SHADOWS > 0\n        uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n        varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n    #endif\n    #if NUM_POINT_SHADOWS > 0\n    #endif\n    #if NUM_SPOT_SHADOWS > 0\n        uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n        varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n    #endif\n#endif",shadowMap_vert:"#ifdef USE_SHADOW\n    vec4 worldPosition = u_Model * vec4(transformed, 1.0);\n    #if NUM_DIR_SHADOWS > 0\n        #pragma unroll_loop\n        for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n            vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n        }\n    #endif\n    #if NUM_POINT_SHADOWS > 0\n    #endif\n    #if NUM_SPOT_SHADOWS > 0\n        #pragma unroll_loop\n        for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n            vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n        }\n    #endif\n#endif",morphnormal_vert:"#ifdef USE_MORPHNORMALS\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vert:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vert:"#ifdef USE_MORPHTARGETS\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n        transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n        transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n        transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n        transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",skinning_pars_vert:"#ifdef USE_SKINNING\n    attribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n    uniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n    #ifdef BONE_TEXTURE\n        uniform sampler2D boneTexture;\n        uniform int boneTextureSize;\n        mat4 getBoneMatrix( const in float i ) {\n            float j = i * 4.0;\n            float x = mod( j, float( boneTextureSize ) );\n            float y = floor( j / float( boneTextureSize ) );\n            float dx = 1.0 / float( boneTextureSize );\n            float dy = 1.0 / float( boneTextureSize );\n            y = dy * ( y + 0.5 );\n            vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n            vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n            vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n            vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n            mat4 bone = mat4( v1, v2, v3, v4 );\n            return bone;\n        }\n    #else\n        uniform mat4 boneMatrices[MAX_BONES];\n        mat4 getBoneMatrix(const in float i) {\n            mat4 bone = boneMatrices[int(i)];\n            return bone;\n        }\n    #endif\n#endif",skinning_vert:"#ifdef USE_SKINNING\n    mat4 boneMatX = getBoneMatrix( skinIndex.x );\n    mat4 boneMatY = getBoneMatrix( skinIndex.y );\n    mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n    mat4 boneMatW = getBoneMatrix( skinIndex.w );\n    vec4 skinVertex = bindMatrix * vec4(transformed, 1.0);\n    vec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned = bindMatrixInverse * skinned;\n    transformed = skinned.xyz / skinned.w;\n    #if defined(USE_NORMAL) || defined(USE_ENV_MAP)\n        mat4 skinMatrix = mat4( 0.0 );\n        skinMatrix += skinWeight.x * boneMatX;\n        skinMatrix += skinWeight.y * boneMatY;\n        skinMatrix += skinWeight.z * boneMatZ;\n        skinMatrix += skinWeight.w * boneMatW;\n        skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n        objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n    #endif\n#endif",specularMap_frag:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, v_Uv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularMap_pars_frag:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",spotlight_pars_frag:"struct SpotLight\n{\n    vec3 position;\n    vec4 color;\n    float distance;\n    float decay;\n    float coneCos;\n    float penumbraCos;\n    vec3 direction;\n    int shadow;\n    float shadowBias;\n    float shadowRadius;\n    vec2 shadowMapSize;\n};\nuniform SpotLight u_Spot[NUM_SPOT_LIGHTS];",tbn:"mat3 tbn(vec3 N, vec3 p, vec2 uv) {\n    vec3 dp1 = dFdx(p.xyz);\n    vec3 dp2 = dFdy(p.xyz);\n    vec2 duv1 = dFdx(uv.st);\n    vec2 duv2 = dFdy(uv.st);\n    vec3 dp2perp = cross(dp2, N);\n    vec3 dp1perp = cross(N, dp1);\n    vec3 T = dp2perp * duv1.x + dp1perp * duv2.x;\n    vec3 B = dp2perp * duv1.y + dp1perp * duv2.y;\n    float invmax = 1.0 / sqrt(max(dot(T,T), dot(B,B)));\n    return mat3(T * invmax, B * invmax, N);\n}",transpose:"mat4 transposeMat4(mat4 inMatrix) {\n    vec4 i0 = inMatrix[0];\n    vec4 i1 = inMatrix[1];\n    vec4 i2 = inMatrix[2];\n    vec4 i3 = inMatrix[3];\n    mat4 outMatrix = mat4(\n        vec4(i0.x, i1.x, i2.x, i3.x),\n        vec4(i0.y, i1.y, i2.y, i3.y),\n        vec4(i0.z, i1.z, i2.z, i3.z),\n        vec4(i0.w, i1.w, i2.w, i3.w)\n    );\n    return outMatrix;\n}",tsn:"mat3 tsn(vec3 N, vec3 V, vec2 uv) {\n    vec3 q0 = dFdx( V.xyz );\n    vec3 q1 = dFdy( V.xyz );\n    vec2 st0 = dFdx( uv.st );\n    vec2 st1 = dFdy( uv.st );\n    vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n    vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n    mat3 tsn = mat3( S, T, N );\n    return tsn;\n}",uv_pars_frag:"#if defined(USE_DIFFUSE_MAP) || defined(USE_ALPHA_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP) || defined(USE_GLOSSINESSMAP) || defined(USE_AOMAP)\n    varying vec2 v_Uv;\n#endif\n#ifdef USE_UV2\n    varying vec2 v_Uv2;\n#endif\n#ifdef USE_ALPHA_MAP_UV_TRANSFORM\n    varying vec2 vAlphaMapUV;\n#endif ",uv_pars_vert:"#if defined(USE_DIFFUSE_MAP) || defined(USE_ALPHA_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP) || defined(USE_GLOSSINESSMAP) || defined(USE_AOMAP)\n    attribute vec2 a_Uv;\n    varying vec2 v_Uv;\n    uniform mat3 uvTransform;\n#endif\n#ifdef USE_UV2\n    attribute vec2 a_Uv2;\n    varying vec2 v_Uv2;\n#endif\n#ifdef USE_ALPHA_MAP_UV_TRANSFORM\n    varying vec2 vAlphaMapUV;\n    uniform mat3 alphaMapUVTransform;\n#endif \n",uv_vert:"#if defined(USE_DIFFUSE_MAP) || defined(USE_ALPHA_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP) || defined(USE_GLOSSINESSMAP) || defined(USE_AOMAP)\n    v_Uv = (uvTransform * vec3(a_Uv, 1.)).xy;\n#endif\n#ifdef USE_UV2\n    v_Uv2 = a_Uv2;\n#endif\n#ifdef USE_ALPHA_MAP_UV_TRANSFORM\n    #if (USE_ALPHA_MAP == 1)\n        vAlphaMapUV = (alphaMapUVTransform * vec3(a_Uv, 1.)).xy;\n    #elif (USE_ALPHA_MAP == 2)\n        vAlphaMapUV = (alphaMapUVTransform * vec3(a_Uv2, 1.)).xy;\n    #else\n        vAlphaMapUV = (alphaMapUVTransform * vec3(a_Uv, 1.)).xy;\n    #endif\n#endif ",viewModelPos_pars_frag:"#if (NUM_POINT_LIGHTS > 0) || (NUM_SPOT_LIGHTS > 0) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR) || (NUM_CLIPPING_PLANES > 0) \n    varying vec3 v_modelPos;\n#endif",viewModelPos_pars_vert:"#if (NUM_POINT_LIGHTS > 0) || (NUM_SPOT_LIGHTS > 0) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR)|| (NUM_CLIPPING_PLANES > 0)\n    varying vec3 v_modelPos;\n#endif",viewModelPos_vert:"#if (NUM_POINT_LIGHTS > 0) || (NUM_SPOT_LIGHTS > 0) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR) || (NUM_CLIPPING_PLANES > 0)\n    v_modelPos = (u_Model * vec4(transformed, 1.0)).xyz;\n#endif"},Ei="#include <common_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <viewModelPos_pars_vert>\n#include <envMap_pars_vert>\n#include <shadowMap_pars_vert>\n#include <morphtarget_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <morphtarget_vert>\n    #include <morphnormal_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <normal_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <viewModelPos_vert>\n    #include <envMap_vert>\n    #include <shadowMap_vert>\n}",Si={basic_frag:"#include <common_frag>\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <alphamap_pars_frag>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <fog_pars_frag>\nvoid main() {\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphamap_frag>\n    #include <alphaTest_frag>\n    #include <envMap_frag>\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",basic_vert:"#include <common_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <envMap_pars_vert>\n#include <morphtarget_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <morphtarget_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <envMap_vert>\n}",canvas2d_frag:"#include <common_frag>\nvarying vec2 v_Uv;\nuniform sampler2D spriteTexture;\nvoid main() {\n    #include <begin_frag>\n    outColor *= texture2D(spriteTexture, v_Uv);\n    #include <end_frag>\n    #include <premultipliedAlpha_frag>\n}",canvas2d_vert:"#include <common_vert>\nattribute vec2 a_Uv;\nvarying vec2 v_Uv;\nvoid main() {\n    #include <begin_vert>\n    #include <pvm_vert>\n    v_Uv = a_Uv;\n}",depth_frag:"#include <common_frag>\n#include <diffuseMap_pars_frag>\n#include <uv_pars_frag>\n#include <packing>\nvoid main() {\n    #if defined(USE_DIFFUSE_MAP) && defined(ALPHATEST)\n        vec4 texelColor = texture2D( diffuseMap, v_Uv );\n        float alpha = texelColor.a * u_Opacity;\n        if(alpha < ALPHATEST) discard;\n    #endif\n    \n    #ifdef DEPTH_PACKING_RGBA\n        gl_FragColor = packDepthToRGBA(gl_FragCoord.z);\n    #else\n        gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), u_Opacity );\n    #endif\n}",depth_vert:"#include <common_vert>\n#include <morphtarget_pars_vert>\n#include <skinning_pars_vert>\n#include <uv_pars_vert>\nvoid main() {\n    #include <uv_vert>\n    #include <begin_vert>\n    #include <morphtarget_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n}",distance_frag:"#include <common_frag>\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 v_ModelPos;\n#include <packing>\nvoid main() {\n    float dist = length( v_ModelPos - u_CameraPosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n    gl_FragColor = packDepthToRGBA(dist);\n}",distance_vert:"#include <common_vert>\nvarying vec3 v_ModelPos;\n#include <morphtarget_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <morphtarget_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    v_ModelPos = (u_Model * vec4(transformed, 1.0)).xyz;\n}",lambert_frag:"#include <common_frag>\n#include <dithering_pars_frag>\nuniform vec3 emissive;\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <normalMap_pars_frag>\n#include <alphamap_pars_frag>\n#include <bumpMap_pars_frag>\n#include <light_pars_frag>\n#include <normal_pars_frag>\n#include <viewModelPos_pars_frag>\n#include <bsdfs>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <shadowMap_pars_frag>\n#include <fog_pars_frag>\n#include <emissiveMap_pars_frag>\n#include <clippingPlanes_pars_frag>\nvoid main() {\n    #include <clippingPlanes_frag>\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphamap_frag>\n    #include <alphaTest_frag>\n    #include <normal_frag>\n    #include <light_frag>\n    #include <envMap_frag>\n    #include <shadowMap_frag>\n    vec3 totalEmissiveRadiance = emissive;\n    #include <emissiveMap_frag>\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n    #include <dithering_frag>\n}",lambert_vert:"#include <common_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <viewModelPos_pars_vert>\n#include <envMap_pars_vert>\n#include <shadowMap_pars_vert>\n#include <morphtarget_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <morphtarget_vert>\n    #include <morphnormal_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <normal_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <viewModelPos_vert>\n    #include <envMap_vert>\n    #include <shadowMap_vert>\n}",normaldepth_frag:"#include <common_frag>\n#include <diffuseMap_pars_frag>\n#include <uv_pars_frag>\n#define USE_NORMAL\n#include <packing>\n#include <normal_pars_frag>\nvoid main() {\n    #if defined(USE_DIFFUSE_MAP) && defined(ALPHATEST)\n        vec4 texelColor = texture2D( diffuseMap, v_Uv );\n        float alpha = texelColor.a * u_Opacity;\n        if(alpha < ALPHATEST) discard;\n    #endif\n    vec4 packedNormalDepth;\n    packedNormalDepth.xyz = normalize(v_Normal) * 0.5 + 0.5;\n    packedNormalDepth.w = gl_FragCoord.z;\n    gl_FragColor = packedNormalDepth;\n}",normaldepth_vert:"#include <common_vert>\n#define USE_NORMAL\n#include <morphtarget_pars_vert>\n#include <skinning_pars_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\nvoid main() {\n    #include <uv_vert>\n    #include <begin_vert>\n    #include <morphtarget_vert>\n    #include <morphnormal_vert>\n    #include <skinning_vert>\n    #include <normal_vert>\n    #include <pvm_vert>\n}",pbr_frag:"#include <common_frag>\n#include <dithering_pars_frag>\nuniform float u_Metalness;\n#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif\nuniform float u_Roughness;\n#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif\nuniform vec3 emissive;\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <alphamap_pars_frag>\n#include <normalMap_pars_frag>\n#include <bumpMap_pars_frag>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <light_pars_frag>\n#include <normal_pars_frag>\n#include <viewModelPos_pars_frag>\n#include <bsdfs>\n#include <shadowMap_pars_frag>\n#include <fog_pars_frag>\n#include <emissiveMap_pars_frag>\n#include <clippingPlanes_pars_frag>\nvoid main() {\n    #include <clippingPlanes_frag>\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphamap_frag>\n    #include <alphaTest_frag>\n    #include <normal_frag>\n    float roughnessFactor = u_Roughness;\n    #ifdef USE_ROUGHNESSMAP\n    \tvec4 texelRoughness = texture2D( roughnessMap, v_Uv );\n    \troughnessFactor *= texelRoughness.g;\n    #endif\n    float metalnessFactor = u_Metalness;\n    #ifdef USE_METALNESSMAP\n    \tvec4 texelMetalness = texture2D( metalnessMap, v_Uv );\n    \tmetalnessFactor *= texelMetalness.b;\n    #endif\n    #include <light_frag>\n    #include <shadowMap_frag>\n    vec3 totalEmissiveRadiance = emissive;\n    #include <emissiveMap_frag>\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n    #include <dithering_frag>\n}",pbr_vert:Ei,pbr2_frag:"#include <common_frag>\n#include <dithering_pars_frag>\nuniform vec3 u_SpecularColor;\n#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif\nuniform float glossiness;\n#ifdef USE_GLOSSINESSMAP\n\tuniform sampler2D glossinessMap;\n#endif\nuniform vec3 emissive;\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <alphamap_pars_frag>\n#include <normalMap_pars_frag>\n#include <bumpMap_pars_frag>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <light_pars_frag>\n#include <normal_pars_frag>\n#include <viewModelPos_pars_frag>\n#include <bsdfs>\n#include <shadowMap_pars_frag>\n#include <fog_pars_frag>\n#include <emissiveMap_pars_frag>\n#include <clippingPlanes_pars_frag>\nvoid main() {\n    #include <clippingPlanes_frag>\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphamap_frag>\n    #include <alphaTest_frag>\n    #include <normal_frag>\n    vec3 specularFactor = u_SpecularColor;\n    #ifdef USE_SPECULARMAP\n        vec4 texelSpecular = texture2D(specularMap, v_Uv);\n        texelSpecular = sRGBToLinear(texelSpecular);\n        specularFactor *= texelSpecular.rgb;\n    #endif\n    float glossinessFactor = glossiness;\n    #ifdef USE_GLOSSINESSMAP\n        vec4 texelGlossiness = texture2D(glossinessMap, v_Uv);\n        glossinessFactor *= texelGlossiness.a;\n    #endif\n    #include <light_frag>\n    #include <shadowMap_frag>\n    vec3 totalEmissiveRadiance = emissive;\n    #include <emissiveMap_frag>\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n    #include <dithering_frag>\n}",pbr2_vert:Ei,phong_frag:"#include <common_frag>\n#include <dithering_pars_frag>\nuniform float u_Specular;\nuniform vec3 u_SpecularColor;\n#include <specularMap_pars_frag>\nuniform vec3 emissive;\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <alphamap_pars_frag>\n#include <normalMap_pars_frag>\n#include <bumpMap_pars_frag>\n#include <light_pars_frag>\n#include <normal_pars_frag>\n#include <viewModelPos_pars_frag>\n#include <bsdfs>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <shadowMap_pars_frag>\n#include <fog_pars_frag>\n#include <emissiveMap_pars_frag>\n#include <clippingPlanes_pars_frag>\nvoid main() {\n    #include <clippingPlanes_frag>\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphamap_frag>\n    #include <alphaTest_frag>\n    #include <normal_frag>\n    #include <specularMap_frag>\n    #include <light_frag>\n    #include <envMap_frag>\n    #include <shadowMap_frag>\n    vec3 totalEmissiveRadiance = emissive;\n    #include <emissiveMap_frag>\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n    #include <dithering_frag>\n}",phong_vert:"#include <common_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <viewModelPos_pars_vert>\n#include <envMap_pars_vert>\n#include <shadowMap_pars_vert>\n#include <morphtarget_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <morphtarget_vert>\n    #include <morphnormal_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <normal_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <viewModelPos_vert>\n    #include <envMap_vert>\n    #include <shadowMap_vert>\n}",point_frag:"#include <common_frag>\n#include <diffuseMap_pars_frag>\n#include <fog_pars_frag>\nvoid main() {\n    #include <begin_frag>\n    #ifdef USE_DIFFUSE_MAP\n        outColor *= texture2D(diffuseMap, vec2(gl_PointCoord.x, 1.0 - gl_PointCoord.y));\n    #endif\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",point_vert:"#include <common_vert>\nuniform float u_PointSize;\nuniform float u_PointScale;\nvoid main() {\n    #include <begin_vert>\n    #include <pvm_vert>\n    vec4 mvPosition = u_View * u_Model * vec4(transformed, 1.0);\n    #ifdef USE_SIZEATTENUATION\n        gl_PointSize = u_PointSize * ( u_PointScale / - mvPosition.z );\n    #else\n        gl_PointSize = u_PointSize;\n    #endif\n}"};function yi(e,t){var i;return e?e.encoding&&(i=e.encoding):i=se.LINEAR,i===se.LINEAR&&t&&(i=se.GAMMA),i}function xi(e){switch(e){case se.LINEAR:return["Linear","( value )"];case se.SRGB:return["sRGB","( value )"];case se.RGBE:return["RGBE","( value )"];case se.RGBM7:return["RGBM","( value, 7.0 )"];case se.RGBM16:return["RGBM","( value, 16.0 )"];case se.RGBD:return["RGBD","( value, 256.0 )"];case se.GAMMA:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:console.error("unsupported encoding: "+e)}}function wi(e,t){var i=xi(t);return"vec4 "+e+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function Ti(e,t,i){var n=["precision "+t.precision+" float;","precision "+t.precision+" int;","precision "+t.precision+" sampler2D;","#define SHADER_NAME "+t.materialType,i,2<=t.version?"#define WEBGL2":"",t.useRoughnessMap?"#define USE_ROUGHNESSMAP":"",t.useMetalnessMap?"#define USE_METALNESSMAP":"",t.useGlossinessMap?"#define USE_GLOSSINESSMAP":"",0<t.ambientLightNum?"#define USE_AMBIENT_LIGHT "+t.ambientLightNum:"",0<t.pointLightNum||0<t.directLightNum||0<t.ambientLightNum||0<t.spotLightNum?"#define USE_LIGHT":"",0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum?"#define USE_NORMAL":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useNormalMap?"#define USE_NORMAL_MAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useBumpMap?"#define USE_BUMPMAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useSpecularMap?"#define USE_SPECULARMAP":"",t.useEmissiveMap?"#define USE_EMISSIVEMAP "+t.useEmissiveMap:"",t.useShadow?"#define USE_SHADOW":"",t.flatShading?"#define FLAT_SHADED":"",t.materialType==k.LAMBERT?"#define USE_LAMBERT":"",t.materialType==k.PHONG?"#define USE_PHONG":"",t.materialType==k.PBR||t.materialType==k.PBR2?"#define USE_PBR":"",t.flipSided?"#define FLIP_SIDED":"",t.useDiffuseMap?"#define USE_DIFFUSE_MAP "+t.useDiffuseMap:"",t.useAlphaMap?"#define USE_ALPHA_MAP "+t.useAlphaMap:"",t.useAlphaMapUVTransform?"#define USE_ALPHA_MAP_UV_TRANSFORM":"",t.useEnvMap?"#define USE_ENV_MAP":"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useAOMap?"#define USE_AOMAP "+t.useAOMap:"",t.useVertexColors==ce.RGB?"#define USE_VCOLOR_RGB":"",t.useVertexColors==ce.RGBA?"#define USE_VCOLOR_RGBA":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&!1===t.flatShading?"#define USE_MORPHNORMALS":"",t.useSkinning?"#define USE_SKINNING":"",0<t.bonesNum?"#define MAX_BONES "+t.bonesNum:"",t.useVertexTexture?"#define BONE_TEXTURE":""].filter(bi).join("\n"),r=[t.useStandardDerivatives&&t.version<2?"#extension GL_OES_standard_derivatives : enable":"",t.useShaderTextureLOD&&t.version<2?"#extension GL_EXT_shader_texture_lod : enable":"","precision "+t.precision+" float;","precision "+t.precision+" int;","precision "+t.precision+" sampler2D;",2<=t.version?"precision "+t.precision+" sampler2DShadow;":"",2<=t.version?"precision "+t.precision+" samplerCubeShadow;":"","#define SHADER_NAME "+t.materialType,"#define PI 3.14159265359","#define EPSILON 1e-6","float pow2( const in float x ) { return x*x; }","#define LOG2 1.442695","#define RECIPROCAL_PI 0.31830988618","#define saturate(a) clamp( a, 0.0, 1.0 )","#define whiteCompliment(a) ( 1.0 - saturate( a ) )","highp float rand( const in vec2 uv ) {","const highp float a = 12.9898, b = 78.233, c = 43758.5453;","highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );","return fract(sin(sn) * c);","}",i,2<=t.version?"#define WEBGL2":"",t.version<2?"#define sampler2DShadow sampler2D":"",t.useRoughnessMap?"#define USE_ROUGHNESSMAP":"",t.useMetalnessMap?"#define USE_METALNESSMAP":"",t.useGlossinessMap?"#define USE_GLOSSINESSMAP":"",0<t.ambientLightNum?"#define USE_AMBIENT_LIGHT "+t.ambientLightNum:"",0<t.pointLightNum||0<t.directLightNum||0<t.ambientLightNum||0<t.spotLightNum?"#define USE_LIGHT":"",0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum?"#define USE_NORMAL":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useNormalMap?"#define USE_NORMAL_MAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useBumpMap?"#define USE_BUMPMAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useSpecularMap?"#define USE_SPECULARMAP":"",t.useEmissiveMap?"#define USE_EMISSIVEMAP "+t.useEmissiveMap:"",t.useShadow?"#define USE_SHADOW":"",t.shadowType===ae.HARD?"#define USE_HARD_SHADOW":"",t.shadowType===ae.POISSON_SOFT?"#define USE_POISSON_SOFT_SHADOW":"",t.shadowType===ae.PCF3_SOFT?"#define USE_PCF3_SOFT_SHADOW":"",t.shadowType===ae.PCF5_SOFT?"#define USE_PCF5_SOFT_SHADOW":"",t.shadowType===ae.PCSS16_SOFT?"#define USE_PCSS16_SOFT_SHADOW":"",t.shadowType===ae.PCSS32_SOFT?"#define USE_PCSS32_SOFT_SHADOW":"",t.shadowType===ae.PCSS64_SOFT?"#define USE_PCSS64_SOFT_SHADOW":"",t.shadowType===ae.PCSS16_SOFT||t.shadowType===ae.PCSS32_SOFT||t.shadowType===ae.PCSS64_SOFT?"#define USE_PCSS_SOFT_SHADOW":"",t.flatShading?"#define FLAT_SHADED":"",t.materialType==k.LAMBERT?"#define USE_LAMBERT":"",t.materialType==k.PHONG?"#define USE_PHONG":"",t.materialType==k.PBR||t.materialType==k.PBR2?"#define USE_PBR":"",t.materialType==k.PBR2?"#define USE_PBR2":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.useShaderTextureLOD?"#define TEXTURE_LOD_EXT":"",t.useDiffuseMap?"#define USE_DIFFUSE_MAP "+t.useDiffuseMap:"",t.useAlphaMap?"#define USE_ALPHA_MAP "+t.useAlphaMap:"",t.useAlphaMapUVTransform?"#define USE_ALPHA_MAP_UV_TRANSFORM":"",t.useEnvMap?"#define USE_ENV_MAP":"",t.useAOMap?"#define USE_AOMAP "+t.useAOMap:"",t.useVertexColors==ce.RGB?"#define USE_VCOLOR_RGB":"",t.useVertexColors==ce.RGBA?"#define USE_VCOLOR_RGBA":"",t.premultipliedAlpha?"#define USE_PREMULTIPLIED_ALPHA":"",t.fog?"#define USE_FOG":"",t.fogExp2?"#define USE_EXP2_FOG":"",t.alphaTest?"#define ALPHATEST "+t.alphaTest:"",t.useEnvMap?"#define "+t.envMapCombine:"","#define GAMMA_FACTOR "+t.gammaFactor,t.dithering?"#define DITHERING":"",t.diffuseMapEncoding||t.envMapEncoding||t.emissiveMapEncoding||t.outputEncoding?Mi.encodings_pars_frag:"",t.diffuseMapEncoding?wi("mapTexelToLinear",t.diffuseMapEncoding):"",t.envMapEncoding?wi("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMapEncoding?wi("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.outputEncoding?function(e,t){var i=xi(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}("linearToOutputTexel",t.outputEncoding):"",t.packDepthToRGBA?"#define DEPTH_PACKING_RGBA":""].filter(bi).join("\n"),a=Si[t.materialType+"_vert"]||t.vertexShader||Si.basic_vert,s=Si[t.materialType+"_frag"]||t.fragmentShader||Si.basic_frag,o=[n,a].join("\n"),h=[r,s].join("\n");if(o=Ai(o),h=Ai(h),o=Ni(o,t),h=Ni(h,t),o=Pi(o,t),h=Pi(h,t),o=Li(o),h=Li(h),1<t.version){h=h.replace("#extension GL_EXT_draw_buffers : require","");for(var c=0,u=[];-1<h.indexOf("gl_FragData["+c+"]");)h=h.replace("gl_FragData["+c+"]","pc_fragData"+c),u.push("layout(location = "+c+") out vec4 pc_fragData"+c+";"),c++;h=h.replace("#define whiteCompliment(a) ( 1.0 - saturate( a ) )","#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n"+u.join("\n")+"\n"),o=["#version 300 es\n","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+o,h=["#version 300 es\n","#define varying in",-1<h.indexOf("layout")?"":"out highp vec4 pc_fragColor;","#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+h}return new gi(e,o,h)}var Ai=function(e){return e.replace(/#include +<([\w\d.]+)>/g,function(e,t){var i=Mi[t];if(void 0===i)throw new Error("Can not resolve #include <"+t+">");return Ai(i)})};function bi(e){return""!==e}function Ni(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.directLightNum).replace(/NUM_SPOT_LIGHTS/g,t.spotLightNum).replace(/NUM_POINT_LIGHTS/g,t.pointLightNum).replace(/NUM_DIR_SHADOWS/g,t.directShadowNum).replace(/NUM_SPOT_SHADOWS/g,t.spotShadowNum).replace(/NUM_POINT_SHADOWS/g,t.pointShadowNum)}function Pi(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes)}function Li(e){return e.replace(/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,function(e,t,i,n){for(var r="",a=parseInt(t);a<parseInt(i);a++)r+=n.replace(/\[ i \]/g,"[ "+a+" ]");return r})}function Ri(f,_,m){var v=[];this.getProgram=function(e,t,i,n){t=t||i.material;for(var r,a=n&&t.acceptLight?n.lights:null,s=n?n.fog:null,o=n?n.clippingPlanes:null,h=function(e,t,i,n,r,a,s,o){var h={};h.materialType=n.type,t=t,h.version=t.version,h.precision=n.precision||t.maxPrecision,h.useStandardDerivatives=2<=t.version||!!t.getExtension("OES_standard_derivatives")||!!t.getExtension("GL_OES_standard_derivatives"),h.useShaderTextureLOD=2<=t.version||!!t.getExtension("EXT_shader_texture_lod"),h.useDiffuseMap=n.diffuseMap?n.diffuseMapCoord+1:0,h.useAlphaMap=n.alphaMap?n.alphaMapCoord+1:0,h.useAlphaMapUVTransform=!!n.alphaMap&&n.alphaMap.useUVTransform,h.useNormalMap=!!n.normalMap,h.useBumpMap=!!n.bumpMap,h.useSpecularMap=!!n.specularMap,h.useEnvMap=!!n.envMap,h.envMapCombine=n.envMapCombine,h.useEmissiveMap=n.emissiveMap?n.emissiveMapCoord+1:0,h.useRoughnessMap=!!n.roughnessMap,h.useMetalnessMap=!!n.metalnessMap,h.useGlossinessMap=!!n.glossinessMap,h.useAOMap=n.aoMap?n.aoMapCoord+1:0,h.ambientLightNum=a?a.ambientsNum:0,h.directLightNum=a?a.directsNum:0,h.pointLightNum=a?a.pointsNum:0,h.spotLightNum=a?a.spotsNum:0,h.directShadowNum=r.receiveShadow&&a?a.directShadowNum:0,h.pointShadowNum=r.receiveShadow&&a?a.pointShadowNum:0,h.spotShadowNum=r.receiveShadow&&a?a.spotShadowNum:0,h.useShadow=r.receiveShadow&&!!a&&0<a.shadowsNum,-1<r.shadowType.indexOf("pcss")&&t.version<2?(console.warn("WebGL 1.0 not support PCSS soft shadow, fallback to POISSON_SOFT"),h.shadowType=ae.POISSON_SOFT):h.shadowType=r.shadowType,h.dithering=n.dithering;var c=e.currentRenderTarget;h.gammaFactor=i.gammaFactor,h.outputEncoding=yi(c.texture||null,i.gammaOutput),h.diffuseMapEncoding=yi(n.diffuseMap||n.cubeMap,i.gammaInput),h.envMapEncoding=yi(n.envMap,i.gammaInput),h.emissiveMapEncoding=yi(n.emissiveMap,i.gammaInput),h.alphaTest=n.alphaTest,h.premultipliedAlpha=n.premultipliedAlpha,h.useVertexColors=n.vertexColors,h.numClippingPlanes=o?o.length:0,h.flatShading=n.shading===K.FLAT_SHADING,h.fog=!!s,h.fogExp2=!!s&&s.fogType===j.EXP2,h.sizeAttenuation=n.sizeAttenuation,h.doubleSided=n.side===Z.DOUBLE,h.flipSided=n.side===Z.BACK,h.packDepthToRGBA=n.packToRGBA,h.morphTargets=!!r.morphTargetInfluences,h.morphNormals=!!r.morphTargetInfluences&&r.geometry.morphAttributes.normal;var u=r.type===V.SKINNED_MESH&&r.skeleton,l=t.maxVertexUniformVectors,d=0<t.maxVertexTextures&&(!!t.getExtension("OES_texture_float")||2<=t.version),p=0;return d?p=1024:l<16*(p=r.skeleton?r.skeleton.bones.length:0)&&(console.warn("Program: too many bones ("+p+"), current cpu only support "+Math.floor(l/16)+" bones!!"),p=Math.floor(l/16)),h.useSkinning=u,h.bonesNum=p,h.useVertexTexture=d,n.type===k.SHADER&&(h.vertexShader=n.vertexShader,h.fragmentShader=n.fragmentShader),h}(_,m,e,t,i,a,s,o),c=function(e,t){var i="";for(var n in e)i+=e[n]+"_";if(void 0!==t.defines)for(var r in t.defines)i+=r+"_"+t.defines[r]+"_";return i}(h,t),u=0,l=v.length;u<l;u++){var d=v[u];if(d.code===c){++(r=d).usedTimes;break}}if(void 0===r){var p="";void 0!==t.defines&&(p=function(e){var t=[];for(var i in e){var n=e[i];!1!==n&&t.push("#define "+i+" "+n)}return t.join("\n")}(t.defines)),(r=Ti(f,h,p)).code=c,v.push(r)}return r},this.releaseProgram=function(e){if(0==--e.usedTimes){var t=v.indexOf(e);v[t]=v[v.length-1],v.pop(),e.dispose(f)}},this.programs=v}function Ci(e,t,i){this.gl=e,this.properties=t,this.capabilities=i}function Oi(e,t,i,n,r,a){this.gl=e,this.state=t,this.texture=i,this.renderBuffer=n,this.properties=r,this.capabilities=a}Object.assign(Ci.prototype,{setRenderBuffer:function(e){var t=this.gl,i=this.capabilities,n=this.properties.get(e);return void 0===n.__webglRenderbuffer?(e.addEventListener("dispose",this.onRenderBufferDispose,this),n.__webglRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,n.__webglRenderbuffer),0<e.multipleSampling?(i.version<2&&console.error("render buffer multipleSampling is not support in webgl 1.0."),t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.min(e.multipleSampling,i.maxSamples),e.format,e.width,e.height)):t.renderbufferStorage(t.RENDERBUFFER,e.format,e.width,e.height)):t.bindRenderbuffer(t.RENDERBUFFER,n.__webglRenderbuffer),n},onRenderBufferDispose:function(e){var t=this.gl,i=e.target,n=this.properties.get(i);n.__webglRenderbuffer&&t.deleteRenderbuffer(n.__webglRenderbuffer),this.properties.delete(i)}}),Object.assign(Oi.prototype,{setRenderTarget2D:function(e){var t=this.gl,i=this.state,n=this.texture,r=this.renderBuffer,a=this.capabilities,s=this.properties.get(e);if(void 0!==s.__webglFramebuffer)t.bindFramebuffer(t.FRAMEBUFFER,s.__webglFramebuffer);else{e.addEventListener("dispose",this.onRenderTargetDispose,this),s.__webglFramebuffer=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,s.__webglFramebuffer);var o=[];for(var h in e._attachments)if((h=Number(h))!==ue.DEPTH_ATTACHMENT&&h!==ue.DEPTH_STENCIL_ATTACHMENT||a.version<2&&!a.getExtension("WEBGL_depth_texture")&&console.warn("extension WEBGL_depth_texture is not support in webgl 1.0."),(h<=36073&&36064<=h||h<=577045&&577040<=h)&&o.push(h),e._attachments[h].isTexture){var c=n.setTexture2D(e._attachments[h]);t.framebufferTexture2D(t.FRAMEBUFFER,h,t.TEXTURE_2D,c.__webglTexture,0),i.bindTexture(t.TEXTURE_2D,null)}else{var u=r.setRenderBuffer(e._attachments[h]);t.framebufferRenderbuffer(t.FRAMEBUFFER,h,t.RENDERBUFFER,u.__webglRenderbuffer),t.bindRenderbuffer(t.RENDERBUFFER,null)}1<o.length&&(2<=a.version?t.drawBuffers(o):a.getExtension("WEBGL_draw_buffers")&&a.getExtension("WEBGL_draw_buffers").drawBuffersWEBGL(o));var l=t.checkFramebufferStatus(t.FRAMEBUFFER);l!==t.FRAMEBUFFER_COMPLETE&&(l===t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_ATTACHMENT"):l===t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"):l===t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_DIMENSIONS"):l===t.FRAMEBUFFER_UNSUPPORTED?console.warn("framebuffer not complete: FRAMEBUFFER_UNSUPPORTED"):l===t.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"):console.warn("framebuffer not complete."))}},setRenderTargetCube:function(e){var t=this.gl,i=this.state,n=this.texture,r=this.renderBuffer,a=this.capabilities,s=this.properties.get(e);if(void 0!==s.__webglFramebuffer){for(var o in t.bindFramebuffer(t.FRAMEBUFFER,s.__webglFramebuffer),e._attachments)if(e._attachments[o].isTexture){c=this.properties.get(e._attachments[o]);t.framebufferTexture2D(t.FRAMEBUFFER,o,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,c.__webglTexture,0)}s.__currentActiveCubeFace=e.activeCubeFace}else{e.addEventListener("dispose",this.onRenderTargetDispose,this),s.__webglFramebuffer=t.createFramebuffer(),s.__currentActiveCubeFace=e.activeCubeFace,t.bindFramebuffer(t.FRAMEBUFFER,s.__webglFramebuffer);var h=[];for(var o in e._attachments)if((o=Number(o))!==ue.DEPTH_ATTACHMENT&&o!==ue.DEPTH_STENCIL_ATTACHMENT||a.version<2&&!a.getExtension("WEBGL_depth_texture")&&console.warn("extension WEBGL_depth_texture is not support in webgl 1.0."),(o<=36073&&36064<=o||o<=577045&&577040<=o)&&h.push(o),e._attachments[o].isTexture){var c=n.setTextureCube(e._attachments[o]);t.framebufferTexture2D(t.FRAMEBUFFER,o,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,c.__webglTexture,0),i.bindTexture(t.TEXTURE_CUBE_MAP,null)}else{var u=r.setRenderBuffer(e._attachments[o]);t.framebufferRenderbuffer(t.FRAMEBUFFER,o,t.RENDERBUFFER,u.__webglRenderbuffer),t.bindRenderbuffer(t.RENDERBUFFER,null)}1<h.length&&(2<=a.version?t.drawBuffers(h):a.getExtension("WEBGL_draw_buffers")&&a.getExtension("WEBGL_draw_buffers").drawBuffersWEBGL(h));var l=t.checkFramebufferStatus(t.FRAMEBUFFER);l!==t.FRAMEBUFFER_COMPLETE&&(l===t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_ATTACHMENT"):l===t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"):l===t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_DIMENSIONS"):l===t.FRAMEBUFFER_UNSUPPORTED?console.warn("framebuffer not complete: FRAMEBUFFER_UNSUPPORTED"):l===t.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"):console.warn("framebuffer not complete."))}},blitRenderTarget:function(e,t,i,n,r){var a=this.gl,s=this.properties,o=this.capabilities;if(o.version<2)console.warn("blitFramebuffer not support by WebGL"+o.version);else{var h=s.get(e).__webglFramebuffer,c=s.get(t).__webglFramebuffer;a.bindFramebuffer(a.READ_FRAMEBUFFER,h),a.bindFramebuffer(a.DRAW_FRAMEBUFFER,c);var u=0;void 0!==i&&!i||(u|=a.COLOR_BUFFER_BIT),void 0!==n&&!n||(u|=a.DEPTH_BUFFER_BIT),void 0!==r&&!r||(u|=a.STENCIL_BUFFER_BIT),a.blitFramebuffer(0,0,e.width,e.height,0,0,t.width,t.height,u,a.NEAREST)}},updateRenderTargetMipmap:function(e){var t=this.gl,i=this.state,n=e.texture;if(n.generateMipmaps&&function(e){return s(e.width)&&s(e.height)}(e)&&n.minFilter!==t.NEAREST&&n.minFilter!==t.LINEAR){var r=n.textureType,a=this.properties.get(n).__webglTexture;i.bindTexture(r,a),t.generateMipmap(r),i.bindTexture(r,null)}},onRenderTargetDispose:function(e){var t=this.gl,i=this.state,n=e.target,r=this.properties.get(n);for(var a in n.removeEventListener("dispose",this.onRenderTargetDispose,this),r.__webglFramebuffer&&t.deleteFramebuffer(r.__webglFramebuffer),n._attachments)n._attachments[a].dispose();this.properties.delete(n),i.currentRenderTarget===n&&(i.currentRenderTarget=null)},setRenderTarget:function(e){var t=this.gl,i=this.state;if(e.view)i.currentRenderTarget===e||(t.bindFramebuffer(t.FRAMEBUFFER,null),i.currentRenderTarget=e);else{var n=void 0!==e.activeCubeFace;if(i.currentRenderTarget!==e)n?this.setRenderTargetCube(e):this.setRenderTarget2D(e),i.currentRenderTarget=e;else if(n){var r=this.properties.get(e);if(r.__currentActiveCubeFace!==e.activeCubeFace){for(var a in e._attachments){var s=this.properties.get(e._attachments[a]);t.framebufferTexture2D(t.FRAMEBUFFER,a,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,s.__webglTexture,0)}r.__currentActiveCubeFace=e.activeCubeFace}}}}});var Ui=new pe,Fi=new Ee,Ii=new WeakMap,Di=new Float32Array(8);function Bi(e){return e.material}function zi(e){return!0}function Gi(){}var Hi,ki,Vi,ji,Xi,Wi,Yi,qi=(ki=new Ae,function(e,t){(!Hi||Hi.length<4*e.length)&&(Hi=new Float32Array(4*e.length));for(var i=0;i<e.length;i++)ki.copy(e[i]),Hi[4*i+0]=ki.normal.x,Hi[4*i+1]=ki.normal.y,Hi[4*i+2]=ki.normal.z,Hi[4*i+3]=ki.constant;return Hi});function Zi(e){this.gl=e;var t=new kt;this.properties=t;var i=new It(e),n=new Ht(e,this.capabilities=i),r=new qt(e,this.state=n,t,i);this.texture=r;var a=new Ci(e,t,i);this.renderTarget=new Oi(e,n,r,a,t,i),this.geometry=new Qt(e,n,t,i),this.programs=new Ri(e,n,i),this._usedTextureUnits=0,this._currentGeometryProgram=""}function Ki(){Ze.call(this),this.type=V.CAMERA,this.viewMatrix=new de,this.projectionMatrix=new de,this.frustum=new be,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.rect=new Ee(0,0,1,1),this.frustumCulled=!0}function Qi(e,t){le.call(this),this.width=e,this.height=t}function $i(e,t,i,n){le.call(this),this.width=e,this.height=t,this.format=void 0!==i?i:$.RGBA8,this.multipleSampling=void 0!==n?n:0}function Ji(e,t){Qi.call(this,e,t),this._attachments={},this.attach(new He,ue.COLOR_ATTACHMENT0),this.attach(new $i(e,t,$.DEPTH_STENCIL),ue.DEPTH_STENCIL_ATTACHMENT),this.activeCubeFace=0}function en(e){this.camera=new Ki,this.targets=[new pe(1,0,0),new pe(-1,0,0),new pe(0,1,0),new pe(0,-1,0),new pe(0,0,1),new pe(0,0,-1)],this.ups=[new pe(0,-1,0),new pe(0,-1,0),new pe(0,0,1),new pe(0,0,-1),new pe(0,-1,0),new pe(0,-1,0)],this.camera.setPerspective(.5*Math.PI,1,1,1e3),this.position=new pe,this.lookTarget=new pe,this.renderTarget=e||new Ji(512,512),this.renderTexture=this.renderTarget.texture,this.renderTexture.minFilter=ee.LINEAR_MIPMAP_LINEAR}function tn(){this.depthMaterial=new Ut,this.depthMaterial.packToRGBA=!0,this.distanceMaterial=new Ft,this.oldClearColor=new Ee}Object.assign(Zi.prototype,{clear:function(e,t,i){var n=this.gl,r=0;void 0!==e&&!e||(r|=n.COLOR_BUFFER_BIT),void 0!==t&&!t||(r|=n.DEPTH_BUFFER_BIT),void 0!==i&&!i||(r|=n.STENCIL_BUFFER_BIT),n.clear(r)},render:function(t,e,i){var n;n=(i=void 0===i||i)?t.updateRenderList(e):t.getRenderList(e),this.renderPass(n.opaque,e,{scene:t,getMaterial:function(e){return t.overrideMaterial||e.material}}),this.renderPass(n.transparent,e,{scene:t,getMaterial:function(e){return t.overrideMaterial||e.material}})},renderPass:function(e,t,i){i=i||{};for(var n=this.gl,r=this.state,a=this.capabilities.getExtension("OES_vertex_array_object"),s=i.getMaterial||Bi,o=i.beforeRender||Gi,h=i.afterRender||Gi,c=i.ifRender||zi,u=i.scene||{},l=r.currentRenderTarget,d=0,p=e.length;d<p;d++){var f=e[d];if(c(f)){var _=f.object,m=s.call(this,f),v=f.geometry,g=f.group;_.onBeforeRender(f,m),o.call(this,f,m);var M=this.properties.get(m);if(!1===m.needsUpdate)if(void 0===M.program)m.needsUpdate=!0;else if(M.fog!==u.fog)m.needsUpdate=!0;else if(u.clippingPlanes&&u.clippingPlanes.length!==M.numClippingPlanes)m.needsUpdate=!0;else if(t.gammaInput!==M.gammaInput||t.gammaOutput!==M.gammaOutput||t.gammaFactor!==M.gammaFactor)m.needsUpdate=!0;else{var E=m.acceptLight&&!!u.lights&&0<u.lights.totalNum;E!==M.acceptLight?m.needsUpdate=!0:E&&(u.lights.hash.compare(M.lightsHash)&&_.receiveShadow===M.receiveShadow&&_.shadowType===M.shadowType||(m.needsUpdate=!0))}if(m.needsUpdate){void 0===M.program&&m.addEventListener("dispose",this.onMaterialDispose,this);var S=M.program;M.program=this.programs.getProgram(t,m,_,u),S&&this.programs.releaseProgram(S),M.fog=u.fog,u.lights?(M.acceptLight=m.acceptLight,M.lightsHash=u.lights.hash.copyTo(M.lightsHash),M.receiveShadow=_.receiveShadow,M.shadowType=_.shadowType):M.acceptLight=!1,M.numClippingPlanes=u.clippingPlanes?u.clippingPlanes.length:0,M.gammaInput=t.gammaInput,M.gammaOutput=t.gammaOutput,M.gammaFactor=t.gammaFactor,m.needsUpdate=!1}var y=M.program;r.setProgram(y);var x=this.geometry.setGeometry(v);if(_.morphTargetInfluences&&this.updateMorphtargets(_,v,y),_.morphTargetInfluences)this.setupVertexAttributes(y,v),this._currentGeometryProgram="";else if(2<=this.capabilities.version)x._vaos[y.id]?n.bindVertexArray(x._vaos[y.id]):(x._vaos[y.id]=n.createVertexArray(),n.bindVertexArray(x._vaos[y.id]),this.setupVertexAttributes(y,v));else if(a)x._vaos[y.id]?a.bindVertexArrayOES(x._vaos[y.id]):(x._vaos[y.id]=a.createVertexArrayOES(),a.bindVertexArrayOES(x._vaos[y.id]),this.setupVertexAttributes(y,v));else{var w=y.id+"_"+v.id;w!==this._currentGeometryProgram&&(this.setupVertexAttributes(y,v),this._currentGeometryProgram=w),this._currentGeometryProgram=w}for(var T=y.uniforms,A=0,b=T.seq.length;A<b;A++){var N=T.seq[A],P=N.id;if(m.uniforms&&void 0!==m.uniforms[P])N.set(m.uniforms[P],this);else switch(P){case"u_Projection":if(_.type===V.CANVAS2D&&_.isScreenCanvas)var L=_.orthoCamera.projectionMatrix.elements;else L=t.projectionMatrix.elements;N.set(L);break;case"u_View":if(_.type===V.CANVAS2D&&_.isScreenCanvas)var R=_.orthoCamera.viewMatrix.elements;else R=t.viewMatrix.elements;N.set(R);break;case"u_Model":var C=_.worldMatrix.elements;N.set(C);break;case"u_Color":var O=m.diffuse;N.setValue(O.r,O.g,O.b);break;case"u_Opacity":N.set(m.opacity);break;case"diffuseMap":N.set(m.diffuseMap,this);break;case"alphaMap":N.set(m.alphaMap,this);break;case"normalMap":N.set(m.normalMap,this);break;case"bumpMap":N.set(m.bumpMap,this);break;case"bumpScale":N.set(m.bumpScale);break;case"envMap":N.set(m.envMap,this);break;case"cubeMap":N.set(m.cubeMap,this);break;case"u_EnvMap_Intensity":N.set(m.envMapIntensity);break;case"maxMipLevel":N.set(this.properties.get(m.envMap).__maxMipLevel||0);break;case"u_Specular":N.set(m.shininess);break;case"u_SpecularColor":O=m.specular;N.setValue(O.r,O.g,O.b);break;case"specularMap":N.set(m.specularMap,this);break;case"aoMap":N.set(m.aoMap,this);break;case"aoMapIntensity":N.set(m.aoMapIntensity);break;case"u_Roughness":N.set(m.roughness);break;case"roughnessMap":N.set(m.roughnessMap,this);break;case"u_Metalness":N.set(m.metalness);break;case"metalnessMap":N.set(m.metalnessMap,this);break;case"glossiness":N.set(m.glossiness);break;case"glossinessMap":N.set(m.glossinessMap,this);break;case"emissive":O=m.emissive;var U=m.emissiveIntensity;N.setValue(O.r*U,O.g*U,O.b*U);break;case"emissiveMap":N.set(m.emissiveMap,this);break;case"u_CameraPosition":Ui.setFromMatrixPosition(t.worldMatrix),N.setValue(Ui.x,Ui.y,Ui.z);break;case"u_FogColor":O=u.fog.color;N.setValue(O.r,O.g,O.b);break;case"u_FogDensity":N.set(u.fog.density);break;case"u_FogNear":N.set(u.fog.near);break;case"u_FogFar":N.set(u.fog.far);break;case"u_PointSize":N.set(m.size);break;case"u_PointScale":var F=.5*l.height;N.set(F);break;case"dashSize":N.set(m.dashSize);break;case"totalSize":N.set(m.dashSize+m.gapSize);break;case"scale":N.set(m.scale);break;case"clippingPlanes":var I=qi(u.clippingPlanes||[],t);N.set(I);break;case"uvTransform":var D;(D=m.diffuseMap||m.specularMap||m.normalMap||m.bumpMap||m.roughnessMap||m.metalnessMap||m.emissiveMap)&&(D.matrixAutoUpdate&&D.updateMatrix(),N.set(D.matrix.elements));break;case"alphaMapUVTransform":m.alphaMap.updateMatrix(),N.set(m.alphaMap.matrix.elements)}}_.type===V.SKINNED_MESH&&this.uploadSkeleton(T,_,y.program),m.acceptLight&&u.lights&&this.uploadLights(T,u.lights,_.receiveShadow,t);var B=_.worldMatrix.determinant()<0;this.setStates(m,B);var z=Fi.set(l.width,l.height,l.width,l.height).multiply(t.rect);if(z.z-=z.x,z.w-=z.y,z.x=Math.floor(z.x),z.y=Math.floor(z.y),z.z=Math.floor(z.z),z.w=Math.floor(z.w),_.type===V.CANVAS2D){_.isScreenCanvas&&(_.setRenderViewport(z.x,z.y,z.z,z.w),r.viewport(_.viewport.x,_.viewport.y,_.viewport.z,_.viewport.w));for(var G=0,H=0;H<_.drawArray.length;H++){var k=_.drawArray[H];T.set("spriteTexture",k.texture,this),n.drawElements(n.TRIANGLES,6*k.count,n.UNSIGNED_SHORT,2*G),G+=6*k.count,this._usedTextureUnits=0}}else r.viewport(z.x,z.y,z.z,z.w),this.draw(v,m,g);2<=this.capabilities.version?n.bindVertexArray(null):a&&a.bindVertexArrayOES(null),this._usedTextureUnits=0,r.depthBuffer.setTest(!0),r.depthBuffer.setMask(!0),r.colorBuffer.setMask(!0),h(this,f),_.onAfterRender(f)}}},setStates:function(e,t){var i=this.state;e.transparent?i.setBlend(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):i.setBlend(X.NONE),i.depthBuffer.setFunc(e.depthFunc),i.depthBuffer.setTest(e.depthTest),i.depthBuffer.setMask(e.depthWrite),i.colorBuffer.setMask(e.colorWrite),i.setCullFace(e.side===Z.DOUBLE?q.NONE:q.BACK);var n=e.side===Z.BACK;t&&(n=!n),i.setFlipSided(n),void 0!==e.lineWidth&&i.setLineWidth(e.lineWidth),i.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},draw:function(e,t,i){var n=this.gl,r=this.properties,a=this.capabilities,s=null!==e.index,o=0,h=s?e.index.count:e.getAttribute("a_Position").count,c=i?i.start:0,u=i?i.count:1/0;if(o=Math.max(o,c),h=Math.min(h,u),s){var l=r.get(e.index),d=l.bytesPerElement,p=l.type;p===n.UNSIGNED_INT&&a.version<2&&!a.getExtension("OES_element_index_uint")&&console.warn("draw elements type not support UNSIGNED_INT!"),e.isInstancedGeometry?0<e.maxInstancedCount&&(2<=a.version?n.drawElementsInstanced(t.drawMode,h,p,o*d,e.maxInstancedCount):a.getExtension("ANGLE_instanced_arrays")?a.getExtension("ANGLE_instanced_arrays").drawElementsInstancedANGLE(t.drawMode,h,p,o*d,e.maxInstancedCount):console.warn("no support instanced draw.")):n.drawElements(t.drawMode,h,p,o*d)}else e.isInstancedGeometry?0<e.maxInstancedCount&&(2<=a.version?n.drawArraysInstanced(t.drawMode,o,h,e.maxInstancedCount):a.getExtension("ANGLE_instanced_arrays")?a.getExtension("ANGLE_instanced_arrays").drawArraysInstancedANGLE(t.drawMode,o,h,e.maxInstancedCount):console.warn("no support instanced draw.")):n.drawArrays(t.drawMode,o,h)},uploadSkeleton:function(e,t,i){if(t.skeleton&&0<t.skeleton.bones.length){var n=t.skeleton,r=this.capabilities;if(n.updateBones(),0<r.maxVertexTextures&&(r.getExtension("OES_texture_float")||2<=r.version)){if(void 0===n.boneTexture){var a=Math.sqrt(4*n.bones.length);a=h(Math.ceil(a)),a=Math.max(4,a);var s=new Float32Array(a*a*4);s.set(n.boneMatrices);var o=new Ge;o.image={data:s,width:a,height:a},2<=r.version&&(o.internalformat=$.RGBA32F,o.format=$.RGBA),o.type=J.FLOAT,o.magFilter=ee.NEAREST,o.minFilter=ee.NEAREST,o.generateMipmaps=!1,o.flipY=!1,n.boneMatrices=s,n.boneTexture=o}e.set("boneTexture",n.boneTexture,this),e.set("boneTextureSize",n.boneTexture.image.width)}else e.set("boneMatrices",n.boneMatrices);e.set("bindMatrix",t.bindMatrix.elements),e.set("bindMatrixInverse",t.bindMatrixInverse.elements)}},uploadLights:function(e,t,i,n){0<t.ambientsNum&&e.set("u_AmbientLightColor",t.ambient),0<t.directsNum&&(e.set("u_Directional",t.directional),e.has("directionalShadowMap")&&(2<=this.capabilities.version?e.set("directionalShadowMap",t.directionalShadowDepthMap,this):e.set("directionalShadowMap",t.directionalShadowMap,this),e.set("directionalShadowMatrix",t.directionalShadowMatrix)),e.has("directionalDepthMap")&&e.set("directionalDepthMap",t.directionalShadowMap,this)),0<t.pointsNum&&(e.set("u_Point",t.point),e.has("pointShadowMap")&&e.set("pointShadowMap",t.pointShadowMap,this)),0<t.spotsNum&&(e.set("u_Spot",t.spot),e.has("spotShadowMap")&&(2<=this.capabilities.version?e.set("spotShadowMap",t.spotShadowDepthMap,this):e.set("spotShadowMap",t.spotShadowMap,this),e.set("spotShadowMatrix",t.spotShadowMatrix)),e.has("spotDepthMap")&&e.set("spotDepthMap",t.spotShadowMap,this))},allocTexUnit:function(){var e=this._usedTextureUnits;return e>=this.capabilities.maxTextures&&console.warn("trying to use "+e+" texture units while this GPU supports only "+this.capabilities.maxTextures),this._usedTextureUnits+=1,e},updateMorphtargets:function(e,t,i){var n=e.morphTargetInfluences;Ii.has(t)||Ii.set(t,n.slice(0));for(var r=t.morphAttributes.position,a=t.morphAttributes.normal,s=Ii.get(t),o=0;o<s.length;o++){0!==(c=s[o])&&(r&&t.removeAttribute("morphTarget"+o),a&&t.removeAttribute("morphNormal"+o))}for(o=0;o<n.length;o++)s[o]=n[o];s.length=n.length;var h=0;for(o=0;o<s.length;o++){var c;0<(c=s[o])&&(r&&t.addAttribute("morphTarget"+h,r[o]),a&&t.addAttribute("morphNormal"+h,a[o]),Di[h]=c,h++)}for(;h<8;h++)Di[h]=0;i.uniforms.set("morphTargetInfluences",Di)},setupVertexAttributes:function(e,t){var i=this.gl,n=e.attributes,r=this.properties,a=this.capabilities;for(var s in n){var o=n[s],h=t.getAttribute(s);if(h){var c,u=h.normalized,l=h.size;o.count!==l&&console.warn("WebGLCore: attribute "+s+" size not match! "+o.count+" : "+l);var d=(c=h.isInterleavedBufferAttribute?r.get(h.data):r.get(h)).buffer,p=c.type;o.format;var f=c.bytesPerElement;if(h.isInterleavedBufferAttribute){var _=h.data,m=_.stride,v=h.offset;i.enableVertexAttribArray(o.location),_&&_.isInstancedInterleavedBuffer&&(2<=a.version?i.vertexAttribDivisor(o.location,_.meshPerAttribute):a.getExtension("ANGLE_instanced_arrays")?a.getExtension("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(o.location,_.meshPerAttribute):console.warn("vertexAttribDivisor not supported"),void 0===t.maxInstancedCount&&(t.maxInstancedCount=_.meshPerAttribute*_.count)),i.bindBuffer(i.ARRAY_BUFFER,d),i.vertexAttribPointer(o.location,o.count,p,u,f*m,f*v)}else i.enableVertexAttribArray(o.location),h&&h.isInstancedBufferAttribute&&(2<=a.version?i.vertexAttribDivisor(o.location,h.meshPerAttribute):a.getExtension("ANGLE_instanced_arrays")?a.getExtension("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(o.location,h.meshPerAttribute):console.warn("vertexAttribDivisor not supported"),void 0===t.maxInstancedCount&&(t.maxInstancedCount=h.meshPerAttribute*h.count)),i.bindBuffer(i.ARRAY_BUFFER,d),i.vertexAttribPointer(o.location,o.count,p,u,0,0)}}if(t.index){var g=r.get(t.index);i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,g.buffer)}},onMaterialDispose:function(e){var t=e.target,i=this.properties.get(t);t.removeEventListener("dispose",this.onMaterialDispose,this);var n=i.program;void 0!==n&&this.programs.releaseProgram(n),this.properties.delete(t)}}),Ki.prototype=Object.assign(Object.create(Ze.prototype),{constructor:Ki,lookAt:(Yi=new de,function(e,t){Yi.lookAtRH(this.position,e,t),this.quaternion.setFromRotationMatrix(Yi)}),setOrtho:function(e,t,i,n,r,a){this.projectionMatrix.set(2/(t-e),0,0,-(t+e)/(t-e),0,2/(n-i),0,-(n+i)/(n-i),0,0,-2/(a-r),-(a+r)/(a-r),0,0,0,1)},setPerspective:function(e,t,i,n){this.projectionMatrix.set(1/(t*Math.tan(e/2)),0,0,0,0,1/Math.tan(e/2),0,0,0,0,-(n+i)/(n-i),-2*n*i/(n-i),0,0,-1,0)},getWorldDirection:(ji=new pe,Xi=new ye,Wi=new pe,function(e){var t=e||new pe;return this.worldMatrix.decompose(ji,Xi,Wi),t.set(0,0,-1).applyQuaternion(Xi),t}),updateMatrix:(Vi=new de,function(){Ze.prototype.updateMatrix.call(this),this.viewMatrix.getInverse(this.worldMatrix),Vi.multiplyMatrices(this.projectionMatrix,this.viewMatrix),this.frustum.setFromMatrix(Vi)}),copy:function(e,t){return Ze.prototype.copy.call(this,e,t),this.viewMatrix.copy(e.viewMatrix),this.projectionMatrix.copy(e.projectionMatrix),this.frustum.copy(e.frustum),this.gammaFactor=e.gammaFactor,this.gammaInput=e.gammaInput,this.gammaOutput=e.gammaOutput,this.rect.copy(e.rect),this.frustumCulled=e.frustumCulled,this}}),Qi.prototype=Object.assign(Object.create(le.prototype),{constructor:Qi,resize:function(e,t){return(this.width!==e||this.height!==t)&&(this.dispose(),this.width=e,this.height=t,!0)},dispose:function(){this.dispatchEvent({type:"dispose"})}}),$i.prototype=Object.assign(Object.create(le.prototype),{constructor:$i,isRenderBuffer:!0,resize:function(e,t){return(this.width!==e||this.height!==t)&&(this.dispose(),this.width=e,this.height=t,!0)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.format=e.format,this.multipleSampling=e.multipleSampling,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),((Ji.prototype=Object.create(Qi.prototype)).constructor=Ji).prototype=Object.assign(Object.create(Qi.prototype),{constructor:Ji,attach:function(e,t){if(e.isTexture){for(var i=!1,n=0;n<6;n++)e.images[n]&&e.images[n].rtt?e.images[n].width===this.width&&e.images[n].height===this.height||(e.images[n].width=this.width,e.images[n].height=this.height,i=!0):(e.images[n]={rtt:!0,data:null,width:this.width,height:this.height},i=!0);i&&e.version++}else e.resize(this.width,this.height);this._attachments[t||ue.COLOR_ATTACHMENT0]=e},detach:function(e){delete this._attachments[e||ue.COLOR_ATTACHMENT0]},resize:function(e,t){if(Qi.prototype.resize.call(this,e,t))for(var i in this._attachments){var n=this._attachments[i];if(n.isTexture){for(var r=0;r<6;r++)n.images[r]={rtt:!0,data:null,width:this.width,height:this.height};n.version++}else n.resize(e,t)}}}),Object.defineProperties(Ji.prototype,{texture:{set:function(e){e?e.isTexture&&this.attach(e,ue.COLOR_ATTACHMENT0):this.detach(ue.COLOR_ATTACHMENT0)},get:function(){var e=this._attachments[ue.COLOR_ATTACHMENT0];return e.isTexture?e:null}}}),en.prototype.render=function(e,t){this.camera.position.copy(this.position);for(var i=0;i<6;i++)this.lookTarget.set(this.targets[i].x+this.camera.position.x,this.targets[i].y+this.camera.position.y,this.targets[i].z+this.camera.position.z),this.camera.lookAt(this.lookTarget,this.ups[i]),this.camera.updateMatrix(),this.renderTarget.activeCubeFace=i,e.renderTarget.setRenderTarget(this.renderTarget),e.clear(!0,!0,!0),e.render(t,this.camera),e.renderTarget.updateRenderTargetMipmap(this.renderTarget)},tn.prototype.render=function(e,t){var i=e.gl,n=e.state,r=n.states[i.STENCIL_TEST];r&&n.stencilBuffer.setTest(!1),this.oldClearColor.copy(n.colorBuffer.getClear()),n.colorBuffer.setClear(1,1,1,1);for(var a=t.lights.shadows,s=0;s<a.length;s++){var o=a[s],h=o.shadow,c=h.camera,u=h.renderTarget,l=o.lightType==H.POINT,d=l?6:1;2<=e.capabilities.version&&(l||h.depthMap||h._initDepthMap());for(var p=0;p<d;p++){l?(h.update(o,p),u.activeCubeFace=p):h.update(o);var f=t.updateRenderList(c);e.renderTarget.setRenderTarget(u),e.clear(!0,!0);var _=l?this.distanceMaterial:this.depthMaterial;_.uniforms=_.uniforms||{},_.uniforms.nearDistance=h.cameraNear,_.uniforms.farDistance=h.cameraFar,e.renderPass(f.opaque,c,{getMaterial:function(e){return _.side=e.material.side,_},ifRender:function(e){return e.object.castShadow}})}}r&&n.stencilBuffer.setTest(!0),n.colorBuffer.setClear(this.oldClearColor.x,this.oldClearColor.y,this.oldClearColor.z,this.oldClearColor.w)};var nn=new pe,rn=new WeakMap;function an(e){if(rn.has(e))return rn.get(e);var t;switch(e.lightType){case H.DIRECT:t={direction:new Float32Array(3),color:new Float32Array([0,0,0,1]),shadow:0,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2)};break;case H.POINT:t={position:new Float32Array(3),color:new Float32Array([0,0,0,1]),distance:0,decay:0,shadow:0,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2),shadowCameraNear:1,shadowCameraFar:1e3};break;case H.SPOT:t={position:new Float32Array(3),direction:new Float32Array(3),color:new Float32Array([0,0,0,1]),distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:0,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2)}}return rn.set(e,t),t}function sn(){this._factor=new Uint16Array(4)}function on(){this.ambient=new Float32Array([0,0,0]),this.directional=[],this.directionalShadowMap=[],this.directionalShadowDepthMap=[],this.directionalShadowMatrix=[],this.point=[],this.pointShadowMap=[],this.pointShadowMatrix=[],this.spot=[],this.spotShadowMap=[],this.spotShadowDepthMap=[],this.spotShadowMatrix=[],this.shadows=[],this.ambientsNum=0,this.directsNum=0,this.pointsNum=0,this.spotsNum=0,this.directShadowNum=0,this.pointShadowNum=0,this.spotShadowNum=0,this.shadowsNum=0,this.totalNum=0,this.hash=new sn}Object.assign(sn.prototype,{update:function(e){this._factor[0]=e.ambientsNum,this._factor[1]=e.directsNum,this._factor[2]=e.pointsNum,this._factor[3]=e.spotsNum},compare:function(e){return!!e&&!(this._factor[0]!==e[0]||this._factor[1]!==e[1]||this._factor[2]!==e[2]||this._factor[3]!==e[3])},copyTo:function(e){return(e=e||new Uint16Array(4)).set(this._factor),e}}),Object.assign(on.prototype,{startCount:function(){for(var e=0;e<3;e++)this.ambient[e]=0;this.shadows.length=0,this.ambientsNum=0,this.directsNum=0,this.pointsNum=0,this.spotsNum=0,this.directShadowNum=0,this.pointShadowNum=0,this.spotShadowNum=0,this.shadowsNum=0,this.totalNum=0},add:function(e){e.lightType==H.AMBIENT?this._doAddAmbientLight(e):e.lightType==H.DIRECT?this._doAddDirectLight(e):e.lightType==H.POINT?this._doAddPointLight(e):e.lightType==H.SPOT&&this._doAddSpotLight(e),e.castShadow&&e.lightType!==H.AMBIENT&&(this.shadows.push(e),this.shadowsNum++),this.totalNum++},endCount:function(){this.hash.update(this)},_doAddAmbientLight:function(e){var t=e.intensity,i=e.color;this.ambient[0]+=i.r*t,this.ambient[1]+=i.g*t,this.ambient[2]+=i.b*t,this.ambientsNum++},_doAddDirectLight:function(e){var t=e.intensity,i=e.color,n=an(e);n.color[0]=i.r*t,n.color[1]=i.g*t,n.color[2]=i.b*t;var r=nn;if(e.getWorldDirection(r),n.direction[0]=r.x,n.direction[1]=r.y,n.direction[2]=r.z,e.castShadow?(n.shadow=1,n.shadowBias=e.shadow.bias,n.shadowRadius=e.shadow.radius,n.shadowMapSize[0]=e.shadow.mapSize.x,n.shadowMapSize[1]=e.shadow.mapSize.y,this.directShadowNum++):n.shadow=0,e.castShadow){var a=16*(this.directsNum+1);if(this.directionalShadowMatrix.length<a){var s=this.directionalShadowMatrix;this.directionalShadowMatrix=new Float32Array(a),this.directionalShadowMatrix.set(s)}this.directionalShadowMatrix.set(e.shadow.matrix.elements,16*this.directsNum),this.directionalShadowMap[this.directsNum]=e.shadow.map,this.directionalShadowDepthMap[this.directsNum]=e.shadow.depthMap}this.directional[this.directsNum]=n,this.directsNum++},_doAddPointLight:function(e){var t=e.intensity,i=e.color,n=e.distance,r=e.decay,a=an(e);a.color[0]=i.r*t,a.color[1]=i.g*t,a.color[2]=i.b*t,a.distance=n,a.decay=r;var s=nn.setFromMatrixPosition(e.worldMatrix);if(a.position[0]=s.x,a.position[1]=s.y,a.position[2]=s.z,e.castShadow?(a.shadow=1,a.shadowBias=e.shadow.bias,a.shadowRadius=e.shadow.radius,a.shadowMapSize[0]=e.shadow.mapSize.x,a.shadowMapSize[1]=e.shadow.mapSize.y,a.shadowCameraNear=e.shadow.cameraNear,a.shadowCameraFar=e.shadow.cameraFar,this.pointShadowNum++):a.shadow=0,e.castShadow){var o=16*(this.pointsNum+1);if(this.pointShadowMatrix.length<o){var h=this.pointShadowMatrix;this.pointShadowMatrix=new Float32Array(o),this.pointShadowMatrix.set(h)}this.pointShadowMatrix.set(e.shadow.matrix.elements,16*this.pointsNum),this.pointShadowMap[this.pointsNum]=e.shadow.map}this.point[this.pointsNum]=a,this.pointsNum++},_doAddSpotLight:function(e){var t=e.intensity,i=e.color,n=e.distance,r=e.decay,a=an(e);a.color[0]=i.r*t,a.color[1]=i.g*t,a.color[2]=i.b*t,a.distance=n,a.decay=r;var s=nn.setFromMatrixPosition(e.worldMatrix);a.position[0]=s.x,a.position[1]=s.y,a.position[2]=s.z;var o=nn;e.getWorldDirection(nn),a.direction[0]=o.x,a.direction[1]=o.y,a.direction[2]=o.z;var h=Math.cos(e.angle),c=Math.cos(e.angle*(1-e.penumbra));if(a.coneCos=h,a.penumbraCos=c,e.castShadow?(a.shadow=1,a.shadowBias=e.shadow.bias,a.shadowRadius=e.shadow.radius,a.shadowMapSize[0]=e.shadow.mapSize.x,a.shadowMapSize[1]=e.shadow.mapSize.y,this.spotShadowNum++):a.shadow=0,e.castShadow){var u=16*(this.spotsNum+1);if(this.spotShadowMatrix.length<u){var l=this.spotShadowMatrix;this.spotShadowMatrix=new Float32Array(u),this.spotShadowMatrix.set(l)}this.spotShadowMatrix.set(e.shadow.matrix.elements,16*this.spotsNum),this.spotShadowMap[this.spotsNum]=e.shadow.map,this.spotShadowDepthMap[this.spotsNum]=e.shadow.depthMap}this.spot[this.spotsNum]=a,this.spotsNum++}});function hn(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function cn(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.material.id!==t.material.id?e.material.id-t.material.id:e.id-t.id}var un,ln,dn,pn,fn,_n,mn,vn,gn,Mn,En,Sn,yn,xn=new pe,wn=new Te;function Tn(){var s=[],o=0,h=[],c=0,u=[],l=0;function d(e,t,i,n,r){var a=s[o];void 0===a?(a={object:e,geometry:t,material:i,z:n,renderOrder:e.renderOrder,group:r},s[o]=a):(a.object=e,a.geometry=t,a.material=i,a.z=n,a.renderOrder=e.renderOrder,a.group=r),i.transparent?(u[l]=a,l++):(h[c]=a,c++),o++}return{opaque:h,transparent:u,startCount:function(){l=c=o=0},add:function(e,t){if(e.frustumCulled&&t.frustumCulled&&(wn.copy(e.geometry.boundingSphere).applyMatrix4(e.worldMatrix),!t.frustum.intersectsSphere(wn)))return;if(xn.setFromMatrixPosition(e.worldMatrix),xn.applyMatrix4(t.viewMatrix).applyMatrix4(t.projectionMatrix),Array.isArray(e.material))for(var i=e.geometry.groups,n=0;n<i.length;n++){var r=i[n],a=e.material[r.materialIndex];a&&d(e,e.geometry,a,xn.z,r)}else d(e,e.geometry,e.material,xn.z)},endCount:function(){h.length=c,u.length=l},sort:function(){h.sort(hn),u.sort(cn)}}}function An(){Ze.call(this),this.type=V.SCENE,this.overrideMaterial=null,this.fog=null,this.clippingPlanes=[],this.lights=new on,this._renderListMap=new WeakMap}function bn(e,t){Ze.call(this),this.geometry=e,this.material=t,this.morphTargetInfluences=null,this.type=V.MESH}function Nn(e,t,i,n,r,a,s){var o=e.material;if(null===(o.side===Z.BACK?i.intersectTriangle(a,r,n,!0,s):i.intersectTriangle(n,r,a,o.side!==Z.DOUBLE,s)))return null;yn.copy(s),yn.applyMatrix4(e.worldMatrix);var h=t.ray.origin.distanceTo(yn);return h<t.near||h>t.far?null:{distance:h,point:yn.clone(),object:e}}function Pn(e){var t=new An,i=this.camera=new Ki;i.frustumCulled=!1,i.position.set(0,1,0),i.lookAt(new pe(0,0,0),new pe(0,0,-1)),i.setOrtho(-1,1,-1,1,.1,2),t.add(i);var n=new St(2,2,1,1),r=this.material=new Ot(e);this.uniforms=r.uniforms;var a=new bn(n,r);a.frustumCulled=!1,t.add(a),t.updateMatrix(),this.renderList=t.updateRenderList(i),this.renderConfig={}}function Ln(e){Qi.call(this,e.width,e.height),this.view=e}function Rn(e,t){var i={antialias:!0,alpha:!1,stencil:!0},n=e.getContext("webgl2",t||i)||e.getContext("webgl",t||i);this.glCore=new Zi(n),console.info("ForwardRenderer use WebGL Version: "+this.glCore.capabilities.version),this.backRenderTarget=new Ln(e),this.shadowMapPass=new tn,this.shadowAutoUpdate=!0,this.shadowNeedsUpdate=!1,this.matrixAutoUpdate=!0,this.lightsAutoupdate=!0,this.autoClear=!0}function Cn(e,t){Qi.call(this,e,t),this._attachments={},this.attach(new Ge,ue.COLOR_ATTACHMENT0),this.attach(new $i(e,t,$.DEPTH_STENCIL),ue.DEPTH_STENCIL_ATTACHMENT)}function On(){Ze.call(this),this.type=V.GROUP}function Un(e,t){Ze.call(this),this.type=V.LIGHT,this.lightType="",this.color=new Ne(void 0!==e?e:16777215),this.intensity=void 0!==t?t:1}function Fn(e,t){Un.call(this,e,t),this.lightType=H.AMBIENT}function In(){this.camera=new Ki,this.matrix=new de,this.bias=3e-4,this.radius=2,this.cameraNear=1,this.cameraFar=500,this.mapSize=new Me(512,512),this.renderTarget=null,this.map=null}function Dn(){In.call(this),this.camera.frustumCulled=!1,this.renderTarget=new Cn(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=ee.LINEAR,this.map=e,this.depthMap=null,this.windowSize=500,this._lookTarget=new pe,this._up=new pe(0,1,0)}function Bn(e,t){Un.call(this,e,t),this.lightType=H.DIRECT,this.shadow=new Dn}function zn(){In.call(this),this.renderTarget=new Ji(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=ee.LINEAR,this.map=e,this._targets=[new pe(1,0,0),new pe(-1,0,0),new pe(0,1,0),new pe(0,-1,0),new pe(0,0,1),new pe(0,0,-1)],this._ups=[new pe(0,-1,0),new pe(0,-1,0),new pe(0,0,1),new pe(0,0,-1),new pe(0,-1,0),new pe(0,-1,0)],this._lookTarget=new pe}function Gn(e,t,i,n){Un.call(this,e,t),this.lightType=H.POINT,this.decay=void 0!==n?n:1,this.distance=void 0!==i?i:200,this.shadow=new zn}function Hn(){In.call(this),this.renderTarget=new Cn(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=ee.LINEAR,this.map=e,this.depthMap=null,this._lookTarget=new pe,this._up=new pe(0,1,0)}function kn(e,t,i,n,r,a){Un.call(this,e,t),this.lightType=H.SPOT,this.decay=void 0!==a?a:1,this.distance=void 0!==i?i:200,this.penumbra=void 0!==r?r:0,this.angle=void 0!==n?n:Math.PI/6,this.shadow=new Hn}function Vn(e,t){bn.call(this,e,t),this.type=V.SKINNED_MESH,this.skeleton=void 0,this.bindMode="attached",this.bindMatrix=new de,this.bindMatrixInverse=new de}An.prototype=Object.assign(Object.create(Ze.prototype),{constructor:An,updateRenderList:function(e){this._renderListMap.has(e)||this._renderListMap.set(e,new Tn);var t=this._renderListMap.get(e);return t.startCount(),this._doUpdateRenderList(this,e,t),t.endCount(),t.sort(),t},getRenderList:function(e){return this._renderListMap.get(e)},updateLights:function(){var e=this.lights;return e.startCount(),this._doUpdateLights(this),e.endCount(),e},_doUpdateRenderList:function(e,t,i){if(e.visible&&(e.geometry&&e.material&&i.add(e,t),V.CANVAS2D!==e.type))for(var n=e.children,r=0,a=n.length;r<a;r++)this._doUpdateRenderList(n[r],t,i)},_doUpdateLights:function(e){if(e.visible&&(V.LIGHT===e.type&&this.lights.add(e),V.CANVAS2D!==e.type))for(var t=e.children,i=0,n=t.length;i<n;i++)this._doUpdateLights(t[i])}}),bn.prototype=Object.assign(Object.create(Ze.prototype),{constructor:bn,raycast:(un=new Te,ln=new we,dn=new de,pn=new fe,fn=new pe,_n=new pe,mn=new pe,vn=new pe,gn=new Me,Mn=new Me,En=new Me,Sn=new pe,yn=new pe,function(e,t){var i=this.geometry,n=this.worldMatrix;if(un.copy(i.boundingSphere),un.applyMatrix4(n),e.ray.intersectsSphere(un)&&(ln.copy(i.boundingBox),ln.applyMatrix4(n),e.ray.intersectsBox(ln))){dn.getInverse(n),pn.copy(e.ray).applyMatrix4(dn);for(var r,a,s,o,h,c,u=i.index.array,l=i.getAttribute("a_Position"),d=i.getAttribute("a_Uv"),p=0;p<u.length;p+=3){r=u[p],a=u[p+1],s=u[p+2],_n.fromArray(l.array,3*r),mn.fromArray(l.array,3*a),vn.fromArray(l.array,3*s);var f=Nn(this,e,pn,_n,mn,vn,Sn);f&&(gn.fromArray(d.array,2*r),Mn.fromArray(d.array,2*a),En.fromArray(d.array,2*s),f.uv=(o=gn,h=Mn,c=En,Le.barycoordFromPoint(Sn,_n,mn,vn,fn),o.multiplyScalar(fn.x),h.multiplyScalar(fn.y),c.multiplyScalar(fn.z),o.add(h).add(c),o.clone()),f.face=[r,a,s],f.faceIndex=r,t.push(f))}}}),copy:function(e){return Ze.prototype.copy.call(this,e),e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),this},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Pn.prototype.render=function(e){e.renderPass(this.renderList.opaque,this.camera,this.renderConfig)},Ln.prototype=Object.assign(Object.create(Qi.prototype),{constructor:Ln,resize:function(e,t){this.view.width=e,this.view.height=t,this.width=e,this.height=t},dispose:function(){}}),Rn.prototype.render=function(e,t,i,n){this.matrixAutoUpdate&&e.updateMatrix(),this.lightsAutoupdate&&e.updateLights(),(this.shadowAutoUpdate||this.shadowNeedsUpdate)&&(this.shadowMapPass.render(this.glCore,e),this.shadowNeedsUpdate=!1),void 0===i&&(i=this.backRenderTarget),this.glCore.renderTarget.setRenderTarget(i),(this.autoClear||n)&&this.glCore.clear(!0,!0,!0),this.glCore.render(e,t),i.texture&&this.glCore.renderTarget.updateRenderTargetMipmap(i)},Cn.prototype=Object.assign(Object.create(Qi.prototype),{constructor:Cn,attach:function(e,t){e.isTexture?e.image&&e.image.rtt?e.image.width===this.width&&e.image.height===this.height||(e.version++,e.image.width=this.width,e.image.height=this.height):(e.version++,e.image={rtt:!0,data:null,width:this.width,height:this.height}):e.resize(this.width,this.height),this._attachments[t||ue.COLOR_ATTACHMENT0]=e},detach:function(e){delete this._attachments[e||ue.COLOR_ATTACHMENT0]},resize:function(e,t){var i=Qi.prototype.resize.call(this,e,t);if(i)for(var n in this._attachments){var r=this._attachments[n];r.isTexture?(r.image={rtt:!0,data:null,width:this.width,height:this.height},r.version++):r.resize(e,t)}return i}}),Object.defineProperties(Cn.prototype,{texture:{set:function(e){e?e.isTexture&&this.attach(e,ue.COLOR_ATTACHMENT0):this.detach(ue.COLOR_ATTACHMENT0)},get:function(){var e=this._attachments[ue.COLOR_ATTACHMENT0];return e.isTexture?e:null}}}),(On.prototype=Object.create(Ze.prototype)).constructor=On,Un.prototype=Object.assign(Object.create(Ze.prototype),{constructor:Un,copy:function(e){return Ze.prototype.copy.call(this,e),this.type=e.type,this.lightType=e.lightType,this.color.copy(e.color),this.intensity=e.intensity,this}}),(Fn.prototype=Object.create(Un.prototype)).constructor=Fn,Object.assign(In.prototype,{update:function(e,t){},copy:function(e){return this.camera.copy(e.camera),this.matrix.copy(e.matrix),this.bias=e.bias,this.radius=e.radius,this.cameraNear=e.cameraNear,this.cameraFar=e.cameraFar,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)}}),Dn.prototype=Object.assign(Object.create(In.prototype),{constructor:Dn,update:function(e){this._updateCamera(e),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e){var t=this.camera,i=this._lookTarget;e.getWorldDirection(this._lookTarget),t.position.setFromMatrixPosition(e.worldMatrix),i.set(i.x+t.position.x,i.y+t.position.y,i.z+t.position.z),t.lookAt(i,this._up),t.updateMatrix();var n=this.windowSize/2;t.setOrtho(-n,n,-n,n,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)},copy:function(e){return In.prototype.copy.call(this,e),this.windowSize=e.windowSize,this},_initDepthMap:function(){var e=new Ge;e.type=J.FLOAT_32_UNSIGNED_INT_24_8_REV,e.format=$.DEPTH_STENCIL,e.internalformat=$.DEPTH32F_STENCIL8,e.magFilter=ee.LINEAR,e.minFilter=ee.LINEAR,e.compare=ie.LESS,e.generateMipmaps=!1,this.renderTarget.attach(e,ue.DEPTH_STENCIL_ATTACHMENT),this.depthMap=e}}),Bn.prototype=Object.assign(Object.create(Un.prototype),{constructor:Bn,copy:function(e){return Un.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),zn.prototype=Object.assign(Object.create(In.prototype),{constructor:zn,update:function(e,t){this._updateCamera(e,t),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e,t){var i=this.camera,n=this._lookTarget,r=this._targets,a=this._ups;i.position.setFromMatrixPosition(e.worldMatrix),n.set(r[t].x+i.position.x,r[t].y+i.position.y,r[t].z+i.position.z),i.lookAt(n,a[t]),i.updateMatrix(),i.setPerspective(.5*Math.PI,1,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)}}),Gn.prototype=Object.assign(Object.create(Un.prototype),{constructor:Gn,copy:function(e){return Un.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),Hn.prototype=Object.assign(Object.create(In.prototype),{constructor:Hn,update:function(e){this._updateCamera(e),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e){var t=this.camera,i=this._lookTarget;e.getWorldDirection(this._lookTarget),t.position.setFromMatrixPosition(e.worldMatrix),i.set(i.x+t.position.x,i.y+t.position.y,i.z+t.position.z),t.lookAt(i,this._up),t.updateMatrix(),t.setPerspective(2*e.angle,1,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)},_initDepthMap:function(){var e=new Ge;e.type=J.FLOAT_32_UNSIGNED_INT_24_8_REV,e.format=$.DEPTH_STENCIL,e.internalformat=$.DEPTH32F_STENCIL8,e.magFilter=ee.LINEAR,e.minFilter=ee.LINEAR,e.compare=ie.LESS,e.generateMipmaps=!1,this.renderTarget.attach(e,ue.DEPTH_STENCIL_ATTACHMENT),this.depthMap=e}}),kn.prototype=Object.assign(Object.create(Un.prototype),{constructor:kn,copy:function(e){return Un.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),Vn.prototype=Object.assign(Object.create(bn.prototype),{constructor:Vn,bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrix(),t=this.worldMatrix),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},updateMatrix:function(){bn.prototype.updateMatrix.call(this),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.worldMatrix):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("zen3d.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),e.ATTACHMENT=ue,e.AmbientLight=Fn,e.AnimationMixer=it,e.BLEND_EQUATION=W,e.BLEND_FACTOR=Y,e.BLEND_TYPE=X,e.BasicMaterial=At,e.Bone=Ke,e.BooleanKeyframeTrack=rt,e.Box2=xe,e.Box3=we,e.BufferAttribute=lt,e.CULL_FACE_TYPE=q,e.Camera=Ki,e.Color3=Ne,e.ColorKeyframeTrack=at,e.CubeGeometry=ft,e.Curve=Re,e.CylinderGeometry=_t,e.DRAW_BUFFER={DRAW_BUFFER0:34853,DRAW_BUFFER1:34854,DRAW_BUFFER2:34855,DRAW_BUFFER3:34856,DRAW_BUFFER4:34857,DRAW_BUFFER5:34858,DRAW_BUFFER6:34859,DRAW_BUFFER7:34860,DRAW_BUFFER8:34861,DRAW_BUFFER9:34862,DRAW_BUFFER10:34863,DRAW_BUFFER11:34864,DRAW_BUFFER12:34865,DRAW_BUFFER13:34866,DRAW_BUFFER14:34867,DRAW_BUFFER15:34868},e.DRAW_MODE=he,e.DRAW_SIDE=Z,e.DefaultLoadingManager=Fe,e.DepthMaterial=Ut,e.DirectionalLight=Bn,e.DirectionalLightShadow=Dn,e.DistanceMaterial=Ft,e.ENVMAP_COMBINE_TYPE=oe,e.EnvironmentMapPass=en,e.Euler=ge,e.EventDispatcher=le,e.FOG_TYPE=j,e.FileLoader=De,e.Fog=function(e,t,i){this.fogType=j.NORMAL,this.color=new Ne(void 0!==e?e:0),this.near=void 0!==t?t:1,this.far=void 0!==i?i:1e3},e.FogExp2=function(e,t){this.fogType=j.EXP2,this.color=new Ne(void 0!==e?e:0),this.density=void 0!==t?t:25e-5},e.Frustum=be,e.Geometry=pt,e.Group=On,e.ImageLoader=Ie,e.InstancedBufferAttribute=mt,e.InstancedGeometry=vt,e.InstancedInterleavedBuffer=Mt,e.InterleavedBuffer=gt,e.InterleavedBufferAttribute=Et,e.KeyframeClip=st,e.KeyframeTrack=nt,e.LIGHT_TYPE=H,e.LambertMaterial=bt,e.Light=Un,e.LightCache=on,e.LightShadow=In,e.LineMaterial=Ct,e.LoadingManager=Ue,e.MATERIAL_TYPE=k,e.Material=Tt,e.Matrix3=Se,e.Matrix4=de,e.Mesh=bn,e.NumberKeyframeTrack=ot,e.OBJECT_TYPE=V,e.Object3D=Ze,e.PBR2Material=Lt,e.PBRMaterial=Pt,e.PhongMaterial=Nt,e.Plane=Ae,e.PlaneGeometry=St,e.PointLight=Gn,e.PointLightShadow=zn,e.PointsMaterial=Rt,e.PropertyBindingMixer=tt,e.Quaternion=ye,e.QuaternionKeyframeTrack=ht,e.RGBELoader=ze,e.Ray=fe,e.Raycaster=_e,e.RenderBuffer=$i,e.RenderList=Tn,e.RenderTarget2D=Cn,e.RenderTargetBack=Ln,e.RenderTargetBase=Qi,e.RenderTargetCube=Ji,e.Renderer=Rn,e.SHADING_TYPE=K,e.SHADOW_TYPE=ae,e.Scene=An,e.ShaderChunk=Mi,e.ShaderLib=Si,e.ShaderMaterial=Ot,e.ShaderPostPass=Pn,e.ShadowMapPass=tn,e.Skeleton=Qe,e.SkinnedMesh=Vn,e.Sphere=Te,e.SphereGeometry=yt,e.Spherical=Ce,e.SpotLight=kn,e.SpotLightShadow=Hn,e.StringKeyframeTrack=ct,e.TEXEL_ENCODING_TYPE=se,e.TGALoader=Be,e.Texture2D=Ge,e.Texture3D=ke,e.TextureBase=Oe,e.TextureCube=He,e.TorusKnotGeometry=xt,e.Triangle=Le,e.VERTEX_COLOR=ce,e.Vector2=Me,e.Vector3=pe,e.Vector4=Ee,e.VectorKeyframeTrack=ut,e.WEBGL_ATTRIBUTE_TYPE=re,e.WEBGL_COMPARE_FUNC=ie,e.WEBGL_PIXEL_FORMAT=$,e.WEBGL_PIXEL_TYPE=J,e.WEBGL_TEXTURE_FILTER=ee,e.WEBGL_TEXTURE_TYPE=Q,e.WEBGL_TEXTURE_WRAP=te,e.WEBGL_UNIFORM_TYPE=ne,e.WebGLAttribute=_i,e.WebGLCapabilities=It,e.WebGLCore=Zi,e.WebGLGeometry=Qt,e.WebGLProgram=gi,e.WebGLPrograms=Ri,e.WebGLProperties=kt,e.WebGLState=Ht,e.WebGLTexture=qt,e.WebGLUniforms=fi,e.cloneUniforms=c,e.generateUUID=a,e.isPowerOfTwo=s,e.nearestPowerOfTwo=o,e.nextPowerOfTwo=h,Object.defineProperty(e,"__esModule",{value:!0})});