// github.com/shawn0326/zen-3d
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.zen3d={})}(this,function(e){"use strict";function t(e){return 0==(e&e-1)&&0!==e}function i(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}function n(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e}function r(e){var t={};for(var i in e){var n=e[i];Array.isArray(n)?t[i]=n.slice():t[i]=n}return t}function a(){this.eventMap={}}function s(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function o(e,t,i){this.x=e||0,this.y=t||0,this.z=i||0}function h(e,t){this.origin=void 0!==e?e:new o,this.direction=void 0!==t?t:new o}function u(e,t,i,n){this.ray=new h(e,t),this.near=i||0,this.far=n||1/0}function c(e,t){return e.distance-t.distance}function l(e,t,i,n){if(e.raycast(t,i),!0===n)for(var r=e.children,a=0,s=r.length;a<s;a++)l(r[a],t,i,!0)}function d(e,t,i,n){this._x=e||0,this._y=t||0,this._z=i||0,this._order=n||d.DefaultOrder}function p(e,t){this.x=e||0,this.y=t||0}function f(e,t,i,n){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==n?n:1}function _(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1])}function v(e,t,i,n){this._x=e||0,this._y=t||0,this._z=i||0,this._w=void 0!==n?n:1}function m(e,t){this.min=void 0!==e?e:new p(1/0,1/0),this.max=void 0!==t?t:new p(-1/0,-1/0)}function g(e,t){this.min=void 0!==e?e:new o(1/0,1/0,1/0),this.max=void 0!==t?t:new o(-1/0,-1/0,-1/0)}function E(e,t){this.center=void 0!==e?e:new o,this.radius=void 0!==t?t:0}function M(e,t){this.normal=void 0!==e?e:new o(1,0,0),this.constant=void 0!==t?t:0}function x(e,t,i,n,r,a){this.planes=[void 0!==e?e:new M,void 0!==t?t:new M,void 0!==i?i:new M,void 0!==n?n:new M,void 0!==r?r:new M,void 0!==a?a:new M]}function S(e,t,i){return this.r=0,this.g=0,this.b=0,void 0===t&&void 0===i?this.setHex(e):this.setRGB(e,t,i)}function y(e,t,i){this.a=void 0!==e?e:new o,this.b=void 0!==t?t:new o,this.c=void 0!==i?i:new o}function w(e,t){this.posPoints=void 0,this.ctrlPoints=void 0,this.segCount=0,this.set(e,t)}function T(e,t,i){this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==i?i:0}function b(){a.call(this),this.uuid=Yt(),this.textureType="",this.border=0,this.format=oi.RGBA,this.internalformat=null,this.type=hi.UNSIGNED_BYTE,this.magFilter=ui.LINEAR,this.minFilter=ui.LINEAR_MIPMAP_LINEAR,this.wrapS=ci.CLAMP_TO_EDGE,this.wrapT=ci.CLAMP_TO_EDGE,this.anisotropy=1,this.compare=void 0,this.generateMipmaps=!0,this.encoding=_i.LINEAR,this.flipY=!0,this.version=0}function A(e,t,i){var n=this,r=!1,a=0,s=0,o=void 0;this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){s++,!1===r&&void 0!==n.onStart&&n.onStart(e,a,s),r=!0},this.itemEnd=function(e){a++,void 0!==n.onProgress&&n.onProgress(e,a,s),a===s&&(r=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this}}function C(e){this.crossOrigin=void 0,this.path=void 0,this.manager=void 0!==e?e:Mi}function N(e){this.path=void 0,this.responseType=void 0,this.withCredentials=void 0,this.mimeType=void 0,this.requestHeader=void 0,this.manager=void 0!==e?e:Mi}function L(e){this.manager=void 0!==e?e:Mi}function P(){b.call(this),this.textureType=si.TEXTURE_2D,this.image=null,this.mipmaps=[],this.offset=new p,this.repeat=new p(1,1),this.center=new p,this.rotation=0,this.matrix=new _,this.matrixAutoUpdate=!0}function R(){b.call(this),this.textureType=si.TEXTURE_CUBE_MAP,this.images=[],this.flipY=!1}function O(){b.call(this),this.textureType=si.TEXTURE_3D,this.image={data:new Uint8Array(255,255,255,255,255,255,255,255),width:2,height:2,depth:2},this.format=oi.RED,this.internalformat=oi.R8,this.type=hi.UNSIGNED_BYTE,this.flipY=!1}function F(){Object.defineProperty(this,"id",{value:xi++}),this.uuid=Yt(),this.name="",this.type="",this.position=new o,this.scale=new o(1,1,1),this.euler=new d,this.quaternion=new v;var e=this.euler,t=this.quaternion;e.onChange(function(){t.setFromEuler(e,!1)}),t.onChange(function(){e.setFromQuaternion(t,void 0,!1)}),this.matrix=new s,this.worldMatrix=new s,this.children=new Array,this.parent=null,this.castShadow=!1,this.receiveShadow=!1,this.shadowType=fi.PCF3_SOFT,this.frustumCulled=!0,this.visible=!0,this.renderOrder=0,this.userData={}}function D(){F.call(this),this.type="bone",this.offsetMatrix=new s}function U(e){e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.boneTexture=void 0}function I(e,t,i,n,r){if(n>=.5)for(var a=0;a!==r;++a)e[t+a]=e[i+a]}function z(e,t,i,n){v.slerpFlat(e,t,e,t,e,i,n)}function B(e,t,i,n,r){for(var a=1-n,s=0;s!==r;++s){var o=t+s;e[o]=e[o]*a+e[i+s]*n}}function G(e,t,i,n){this.target=null,this.property="",this.parseBinding(e,t),this.valueSize=n;var r,a=Float64Array;switch(i){case"quaternion":r=z;break;case"string":case"bool":a=Array,r=I;break;default:r=B}this.buffer=new a(2*n),this._mixBufferFunction=r,this.cumulativeWeight=0,this.referenceCount=0,this.useCount=0}function H(){this._clips={},this._bindings={},this._activeClips={}}function k(e,t,i,n,r){this.target=e,this.propertyPath=t,this.name=this.target.uuid+"."+t,this.times=i,this.values=n,this.valueSize=n.length/i.length,this.interpolant=void 0===r||r}function V(e,t,i,n,r){k.call(this,e,t,i,n,r)}function j(e,t,i,n,r){k.call(this,e,t,i,n,r)}function X(e){this.name=e||"",this.tracks=[],this.loop=!0,this.startFrame=0,this.endFrame=0,this.frame=0}function W(e,t,i,n,r){k.call(this,e,t,i,n,r)}function Y(e,t,i,n,r){k.call(this,e,t,i,n,r)}function q(e,t,i,n,r){k.call(this,e,t,i,n,r)}function Z(e,t,i,n,r){k.call(this,e,t,i,n,r)}function K(e,t,i){this.uuid=Yt(),this.array=e,this.size=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===i,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function Q(){a.call(this),Object.defineProperty(this,"id",{value:Si++}),this.uuid=Yt(),this.attributes={},this.index=null,this.boundingBox=new g,this.boundingSphere=new E,this.groups=[]}function J(e,t,i,n,r,a){Q.call(this),this.buildGeometry(e,t,i,n,r,a)}function $(e,t,i,n,r,a,s,o){Q.call(this),this.buildGeometry(e,t,i,n,r,a,s,o)}function ee(e,t,i,n){K.call(this,e,t,i),this.meshPerAttribute=n||1}function te(){Q.call(this),this.maxInstancedCount=void 0}function ie(e,t){this.uuid=Yt(),this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function ne(e,t,i){ie.call(this,e,t),this.meshPerAttribute=i||1}function re(e,t,i,n){this.uuid=Yt(),this.data=e,this.size=t,this.offset=i,this.normalized=!0===n}function ae(e,t,i,n){Q.call(this),this.buildGeometry(e,t,i,n)}function se(e,t,i,n,r,a,s){Q.call(this),this.buildGeometry(e,t,i,n,r,a,s)}function oe(e,t,i,n,r,a){function s(e,t,i,n,r){var a=Math.cos(e),s=Math.sin(e),o=i/t*e,h=Math.cos(o);r.x=n*(2+h)*.5*a,r.y=n*(2+h)*s*.5,r.z=n*Math.sin(o)*.5}Q.call(this),this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:a},e=e||1,t=t||.4,i=Math.floor(i)||64,n=Math.floor(n)||8,r=r||2,a=a||3;var h,u,c=[],l=[],d=[],p=[],f=new o,_=new o,v=new o,m=new o,g=new o,E=new o,M=new o;for(h=0;h<=i;++h){var x=h/i*r*Math.PI*2;for(s(x,r,a,e,v),s(x+.01,r,a,e,m),E.subVectors(m,v),M.addVectors(m,v),g.crossVectors(E,M),M.crossVectors(g,E),g.normalize(),M.normalize(),u=0;u<=n;++u){var S=u/n*Math.PI*2,y=-t*Math.cos(S),w=t*Math.sin(S);f.x=v.x+(y*M.x+w*g.x),f.y=v.y+(y*M.y+w*g.y),f.z=v.z+(y*M.z+w*g.z),l.push(f.x,f.y,f.z),_.subVectors(f,v).normalize(),d.push(_.x,_.y,_.z),p.push(h/i),p.push(u/n)}}for(u=1;u<=i;u++)for(h=1;h<=n;h++){var T=(n+1)*(u-1)+(h-1),b=(n+1)*u+(h-1),A=(n+1)*u+h,C=(n+1)*(u-1)+h;c.push(T,b,C),c.push(b,A,C)}this.setIndex(c),this.addAttribute("a_Position",new K(new Float32Array(l),3)),this.addAttribute("a_Normal",new K(new Float32Array(d),3)),this.addAttribute("a_Uv",new K(new Float32Array(p),2)),this.computeBoundingBox(),this.computeBoundingSphere()}function he(){a.call(this),Object.defineProperty(this,"id",{value:yi++}),this.type="",this.uuid=Yt(),this.opacity=1,this.transparent=!1,this.blending=ei.NORMAL,this.blendSrc=ii.SRC_ALPHA,this.blendDst=ii.ONE_MINUS_SRC_ALPHA,this.blendEquation=ti.ADD,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.premultipliedAlpha=!1,this.vertexColors=!1,this.diffuse=new S(16777215),this.diffuseMap=null,this.normalMap=null,this.aoMap=null,this.aoMapIntensity=1,this.bumpMap=null,this.bumpScale=1,this.envMap=null,this.envMapIntensity=1,this.envMapCombine=vi.MULTIPLY,this.emissive=new S(0),this.emissiveMap=null,this.emissiveIntensity=1,this.depthTest=!0,this.depthWrite=!0,this.colorWrite=!0,this.alphaTest=0,this.side=ri.FRONT,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.shading=ai.SMOOTH_SHADING,this.acceptLight=!1,this.drawMode=mi.TRIANGLES,this.needsUpdate=!0}function ue(){he.call(this),this.type=Jt.BASIC}function ce(){he.call(this),this.type=Jt.LAMBERT,this.acceptLight=!0}function le(){he.call(this),this.type=Jt.PHONG,this.shininess=30,this.specular=new S(1118481),this.specularMap=null,this.acceptLight=!0}function de(){he.call(this),this.type=Jt.PBR,this.roughness=.5,this.metalness=.5,this.roughnessMap=null,this.metalnessMap=null,this.acceptLight=!0}function pe(){he.call(this),this.type=Jt.POINT,this.size=1,this.sizeAttenuation=!0,this.drawMode=mi.POINTS}function fe(){he.call(this),this.type=Jt.LINE,this.lineWidth=1,this.drawMode=mi.LINES}function _e(){he.call(this),this.type=Jt.LINE_LOOP,this.lineWidth=1,this.drawMode=mi.LINE_LOOP}function ve(){he.call(this),this.type=Jt.LINE_DASHED,this.lineWidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.drawMode=mi.LINE_STRIP}function me(e){he.call(this),this.type=Jt.SHADER,this.vertexShader=e.vertexShader||"",this.fragmentShader=e.fragmentShader||"",this.defines={},Object.assign(this.defines,e.defines),this.uniforms=r(e.uniforms)}function ge(){he.call(this),this.type=Jt.DEPTH,this.packToRGBA=!1}function Ee(){he.call(this),this.type=Jt.DISTANCE}function Me(e){function t(t){if(n[t]||null===n[t])return n[t];var r=null;for(var a in i)if(r=e.getExtension(i[a]+t))break;return n[t]=r,r}var i=["","WEBKIT_","MOZ_"],n={},r=t("EXT_texture_filter_anisotropic");return{version:parseFloat(/^WebGL\ ([0-9])/.exec(e.getParameter(e.VERSION))[1]),maxPrecision:function(e,t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}(e,"highp"),maxTextures:e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),maxVertexTextures:e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),maxTextureSize:e.getParameter(e.MAX_TEXTURE_SIZE),maxCubemapSize:e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),maxVertexUniformVectors:e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),lineWidthRange:e.getParameter(e.ALIASED_LINE_WIDTH_RANGE),anisotropyExt:r,maxAnisotropy:null!==r?e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT):1,getExtension:t}}function xe(e,t,i,n){var r=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var s=0;s<n;s++)e.texImage2D(i+s,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,r);return a}function Se(e){var t=!1,i=new f,n=null,r=new f(0,0,0,0);return{setMask:function(i){n===i||t||(e.colorMask(i,i,i,i),n=i)},setLocked:function(e){t=e},setClear:function(t,n,a,s,o){!0===o&&(t*=s,n*=s,a*=s),i.set(t,n,a,s),!1===r.equals(i)&&(e.clearColor(t,n,a,s),r.copy(i))},getClear:function(){return r},reset:function(){t=!1,n=null,r.set(-1,0,0,0)}}}function ye(e,t){var i=!1,n=null,r=null,a=null;return{setTest:function(i){i?t.enable(e.DEPTH_TEST):t.disable(e.DEPTH_TEST)},setMask:function(t){n===t||i||(e.depthMask(t),n=t)},setFunc:function(t){r!==t&&(e.depthFunc(t),r=t)},setLocked:function(e){i=e},setClear:function(t){a!==t&&(e.clearDepth(t),a=t)},reset:function(){i=!1,n=null,r=null,a=null}}}function we(e,t){var i=!1,n=null,r=null,a=null,s=null,o=null,h=null,u=null,c=null;return{setTest:function(i){i?t.enable(e.STENCIL_TEST):t.disable(e.STENCIL_TEST)},setMask:function(t){n===t||i||(e.stencilMask(t),n=t)},setFunc:function(t,i,n){r===t&&a===i&&s===n||(e.stencilFunc(t,i,n),r=t,a=i,s=n)},setOp:function(t,i,n){o===t&&h===i&&u===n||(e.stencilOp(t,i,n),o=t,h=i,u=n)},setLocked:function(e){i=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){i=!1,n=null,r=null,a=null,s=null,o=null,h=null,u=null,c=null}}}function Te(e,t){this.gl=e,this.capabilities=t,this.colorBuffer=new Se(e),this.depthBuffer=new ye(e,this),this.stencilBuffer=new we(e,this),this.states={},this.currentBlending=null,this.currentBlendEquation=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendEquationAlpha=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipliedAlpha=null,this.currentCullFace=null,this.currentViewport=new f,this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBuffers={},this.emptyTextures={},this.emptyTextures[e.TEXTURE_2D]=xe(e,e.TEXTURE_2D,e.TEXTURE_2D,1),this.emptyTextures[e.TEXTURE_CUBE_MAP]=xe(e,e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),this.currentFlipSided=!1,this.currentLineWidth=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentProgram=null,this.currentRenderTarget=null,this.colorBuffer.setClear(0,0,0,1),this.depthBuffer.setClear(1),this.stencilBuffer.setClear(0),this.depthBuffer.setTest(!0),this.depthBuffer.setFunc(li.LEQUAL),this.setCullFace(ni.BACK),this.setFlipSided(!1)}function be(){this.properties=new WeakMap}function Ae(e){return e.wrapS!==ci.CLAMP_TO_EDGE||e.wrapT!==ci.CLAMP_TO_EDGE||e.minFilter!==ui.NEAREST&&e.minFilter!==ui.LINEAR}function Ce(e){return e===ui.NEAREST||e===ui.NEAREST_MIPMAP_LINEAR||e===ui.NEAREST_MIPMAP_NEAREST?ui.NEAREST:ui.LINEAR}function Ne(e){return t(e.width)&&t(e.height)}function Le(e){if(Zt&&(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement)){var t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.width=i(e.width),t.height=i(e.height),t.getContext("2d").drawImage(e,0,0,t.width,t.height),console.warn("image is not power of two ("+e.width+"x"+e.height+"). Resized to "+t.width+"x"+t.height,e),t}return e}function Pe(e,t){if(e.width>t||e.height>t){if(!Zt)return console.warn("image is too big ("+e.width+"x"+e.height+"). max size is "+t+"x"+t,e),e;var i=t/Math.max(e.width,e.height),n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return n.width=Math.floor(e.width*i),n.height=Math.floor(e.height*i),n.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,n.width,n.height),console.warn("image is too big ("+e.width+"x"+e.height+"). Resized to "+n.width+"x"+n.height,e),n}return e}function Re(e,t){var i=e.wrapS,n=e.wrapT,r=e.magFilter,a=e.minFilter,s=e.anisotropy,o=e.compare;return t&&(i=ci.CLAMP_TO_EDGE,n=ci.CLAMP_TO_EDGE,e.wrapS===ci.CLAMP_TO_EDGE&&e.wrapT===ci.CLAMP_TO_EDGE||console.warn("Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to zen3d.TEXTURE_WRAP.CLAMP_TO_EDGE.",e),r=Ce(e.magFilter),a=Ce(e.minFilter),(e.minFilter!==ui.NEAREST&&e.minFilter!==ui.LINEAR||e.magFilter!==ui.NEAREST&&e.magFilter!==ui.LINEAR)&&console.warn("Texture is not power of two. Texture.minFilter and Texture.magFilter should be set to zen3d.TEXTURE_FILTER.NEAREST or zen3d.TEXTURE_FILTER.LINEAR.",e)),[i,n,r,a,s,o]}function Oe(e,t,i,n){this.gl=e,this.state=t,this.properties=i,this.capabilities=n}function Fe(e,t,i,n){var r=i.array,a=i.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW,s=e.createBuffer();e.bindBuffer(n,s),e.bufferData(n,r,a);var o=e.FLOAT;r instanceof Float32Array?o=e.FLOAT:r instanceof Float64Array?console.warn("Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?o=e.UNSIGNED_SHORT:r instanceof Int16Array?o=e.SHORT:r instanceof Uint32Array?o=e.UNSIGNED_INT:r instanceof Int32Array?o=e.INT:r instanceof Int8Array?o=e.BYTE:r instanceof Uint8Array&&(o=e.UNSIGNED_BYTE),t.buffer=s,t.type=o,t.bytesPerElement=r.BYTES_PER_ELEMENT,t.version=i.version}function De(e,t,i,n){var r=i.array,a=i.updateRange;e.bindBuffer(n,t),!1===i.dynamic?e.bufferData(n,r,e.STATIC_DRAW):-1===a.count?e.bufferSubData(n,0,r):0===a.count?console.error("updateBuffer: dynamic BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(e.bufferSubData(n,a.offset*r.BYTES_PER_ELEMENT,r.subarray(a.offset,a.offset+a.count)),a.count=-1)}function Ue(e,t,i,n){i.isInterleavedBufferAttribute&&(i=i.data);var r=t.get(i);void 0===r.buffer?Fe(e,r,i,n):r.version<i.version&&(De(e,r.buffer,i,n),r.version=i.version)}function Ie(e,t,i){i.isInterleavedBufferAttribute&&(i=i.data);var n=t.get(i);n.buffer&&e.deleteBuffer(n.buffer),t.delete(i)}function ze(e,t,i,n){this.gl=e,this.state=t,this.properties=i,this.capabilities=n}function Be(){this.seq=[],this.map={}}function Ge(e,t){if(e.length!==t.length)return!1;for(var i=0,n=e.length;i<n;i++)if(e[i]!==t[i])return!1;return!0}function He(e,t){for(var i=0,n=t.length;i<n;i++)e[i]=t[i]}function ke(e,t){var i=e.gl,n=e.type,r=e.location,a=e.cache;switch(n){case di.FLOAT:e.setValue=function(e){a[0]!==e&&(i.uniform1f(r,e),a[0]=e)},e.set=t?function(e){Ge(a,e)||(i.uniform1fv(r,e),He(a,e))}:e.setValue;break;case di.SAMPLER_2D:case di.SAMPLER_CUBE:case di.SAMPLER_2D_SHADOW:case di.SAMPLER_CUBE_SHADOW:case di.SAMPLER_3D:case di.BOOL:case di.INT:e.setValue=function(e){a[0]!==e&&(i.uniform1i(r,e),a[0]=e)},e.set=t?function(e){Ge(a,e)||(i.uniform1iv(r,e),He(a,e))}:e.setValue;break;case di.FLOAT_VEC2:e.setValue=function(e,t){a[0]===e&&a[1]===t||(i.uniform2f(r,e,t),a[0]=e,a[1]=t)},e.set=function(e){Ge(a,e)||(i.uniform2fv(r,e),He(a,e))};break;case di.BOOL_VEC2:case di.INT_VEC2:e.setValue=function(e,t){a[0]===e&&a[1]===t||(i.uniform2i(r,e,t),a[0]=e,a[1]=t)},e.set=function(e){Ge(a,e)||(i.uniform2iv(r,e),He(a,e))};break;case di.FLOAT_VEC3:e.setValue=function(e,t,n){a[0]===e&&a[1]===t&&a[2]===n||(i.uniform3f(r,e,t,n),a[0]=e,a[1]=t,a[2]=n)},e.set=function(e){Ge(a,e)||(i.uniform3fv(r,e),He(a,e))};break;case di.BOOL_VEC3:case di.INT_VEC3:e.setValue=function(e,t,n){a[0]===e&&a[1]===t&&a[2]===n||(i.uniform3i(r,e,t,n),a[0]=e,a[1]=t,a[2]=n)},e.set=function(e){Ge(a,e)||(i.uniform3iv(r,e),He(a,e))};break;case di.FLOAT_VEC4:e.setValue=function(e,t,n,s){a[0]===e&&a[1]===t&&a[2]===n&&a[3]===s||(i.uniform4f(r,e,t,n,s),a[0]=e,a[1]=t,a[2]=n,a[3]=s)},e.set=function(e){Ge(a,e)||(i.uniform4fv(r,e),He(a,e))};break;case di.BOOL_VEC4:case di.INT_VEC4:e.setValue=function(e,t,n,s){a[0]===e&&a[1]===t&&a[2]===n&&a[3]===s||(i.uniform4i(r,e,t,n,s),a[0]=e,a[1]=t,a[2]=n,a[3]=s)},e.set=function(e){Ge(a,e)||(i.uniform4iv(r,e),He(a,e))};break;case di.FLOAT_MAT2:e.setValue=e.set=function(e){Ge(a,e)||(i.uniformMatrix2fv(r,!1,e),He(a,e))};break;case di.FLOAT_MAT3:e.setValue=e.set=function(e){Ge(a,e)||(i.uniformMatrix3fv(r,!1,e),He(a,e))};break;case di.FLOAT_MAT4:e.setValue=e.set=function(e){Ge(a,e)||(i.uniformMatrix4fv(r,!1,e),He(a,e))}}}function Ve(e,t,i,n){this.gl=e,this.id=t,this.type=i.type,this.location=n,this.setValue=void 0,this.set=void 0,this.cache=[],ke(this)}function je(e,t,i,n){this.gl=e,this.id=t,this.type=i.type,this.size=i.size,this.location=n,this.setValue=void 0,this.set=void 0,this.cache=[],ke(this,!0)}function Xe(e){this.id=e,Be.call(this)}function We(e,t){e.seq.push(t),e.map[t.id]=t}function Ye(e,t,i,n){var r=t.name,a=r.length;for(wi.lastIndex=0;;){var s=wi.exec(r),o=wi.lastIndex,h=s[1],u="]"===s[2],c=s[3];if(u&&(h|=0),void 0===c||"["===c&&o+2===a){We(n,void 0===c?new Ve(e,h,t,i):new je(e,h,t,i));break}var l=n.map[h];void 0===l&&We(n,l=new Xe(h)),n=l}}function qe(e,t){Be.call(this);for(var i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),n=0;n<i;++n){var r=e.getActiveUniform(t,n);Ye(e,r,e.getUniformLocation(t,r.name),this)}}function Ze(e,t,i){this.gl=e,this.name=i.name,this.type=i.type,this.size=i.size,this.location=e.getAttribLocation(t,this.name),this.count=0,this.initCount(e),this.format=e.FLOAT,this.initFormat(e)}function Ke(e){for(var t=e.split("\n"),i=0;i<t.length;i++)t[i]=i+1+": "+t[i];return t.join("\n")}function Qe(e,t,i){var n=e.createShader(t);return e.shaderSource(n,i),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS)||console.warn("shader not compiled!",e.getShaderInfoLog(n),Ke(i)),n}function Je(e,t,i){var n=e.createProgram();return e.attachShader(n,t),e.attachShader(n,i),e.linkProgram(n),e.getProgramParameter(n,e.LINK_STATUS)||console.warn("program not linked!",e.getProgramInfoLog(n)),n}function $e(e,t){for(var i={},n=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),r=0;r<n;r++){var a=e.getActiveAttrib(t,r),s=a.name,o=new Ze(e,t,a);i[s]=o}return i}function et(e,t,i){this.id=Ti++,this.uuid=Yt(),this.usedTimes=1,this.code="",this.gl=e,this.vshaderSource=t,this.fshaderSource=i;var n=Qe(e,e.VERTEX_SHADER,this.vshaderSource),r=Qe(e,e.FRAGMENT_SHADER,this.fshaderSource);this.program=Je(e,n,r),this.uniforms=new qe(e,this.program),this.attributes=$e(e,this.program),e.deleteShader(n),e.deleteShader(r)}function tt(e,t){var i="";for(var n in e)i+=e[n]+"_";if(void 0!==t.defines)for(var r in t.defines)i+=r+"_"+t.defines[r]+"_";return i}function it(e,t){var i;return e?e.encoding&&(i=e.encoding):i=_i.LINEAR,i===_i.LINEAR&&t&&(i=_i.GAMMA),i}function nt(e){switch(e){case _i.LINEAR:return["Linear","( value )"];case _i.SRGB:return["sRGB","( value )"];case _i.RGBE:return["RGBE","( value )"];case _i.RGBM7:return["RGBM","( value, 7.0 )"];case _i.RGBM16:return["RGBM","( value, 16.0 )"];case _i.RGBD:return["RGBD","( value, 256.0 )"];case _i.GAMMA:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:console.error("unsupported encoding: "+e)}}function rt(e,t){var i=nt(t);return"vec4 "+e+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function at(e,t){var i=nt(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function st(e){var t=[];for(var i in e){var n=e[i];!1!==n&&t.push("#define "+i+" "+n)}return t.join("\n")}function ot(e,t,i){var n=["precision "+t.precision+" float;","precision "+t.precision+" int;","precision "+t.precision+" sampler2D;","#define SHADER_NAME "+t.materialType,i,t.version>=2?"#define WEBGL2":"",t.useRoughnessMap?"#define USE_ROUGHNESSMAP":"",t.useMetalnessMap?"#define USE_METALNESSMAP":"",t.ambientLightNum>0?"#define USE_AMBIENT_LIGHT "+t.ambientLightNum:"",t.pointLightNum>0||t.directLightNum>0||t.ambientLightNum>0||t.spotLightNum>0?"#define USE_LIGHT":"",t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0?"#define USE_NORMAL":"",(t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0)&&t.useNormalMap?"#define USE_NORMAL_MAP":"",(t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0)&&t.useBumpMap?"#define USE_BUMPMAP":"",(t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0)&&t.useSpecularMap?"#define USE_SPECULARMAP":"",t.useEmissiveMap?"#define USE_EMISSIVEMAP":"",t.useShadow?"#define USE_SHADOW":"",t.flatShading?"#define FLAT_SHADED":"",t.materialType==Jt.LAMBERT?"#define USE_LAMBERT":"",t.materialType==Jt.PHONG?"#define USE_PHONG":"",t.materialType==Jt.PBR?"#define USE_PBR":"",t.flipSided?"#define FLIP_SIDED":"",t.useDiffuseMap?"#define USE_DIFFUSE_MAP":"",t.useEnvMap?"#define USE_ENV_MAP":"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useAOMap?"#define USE_AOMAP":"",t.useVertexColors?"#define USE_VCOLOR":"",t.useSkinning?"#define USE_SKINNING":"",t.bonesNum>0?"#define MAX_BONES "+t.bonesNum:"",t.useVertexTexture?"#define BONE_TEXTURE":""].join("\n"),r=[t.useStandardDerivatives&&t.version<2?"#extension GL_OES_standard_derivatives : enable":"",t.useShaderTextureLOD&&t.version<2?"#extension GL_EXT_shader_texture_lod : enable":"","precision "+t.precision+" float;","precision "+t.precision+" int;","precision "+t.precision+" sampler2D;",t.version>=2?"precision "+t.precision+" sampler2DShadow;":"",t.version>=2?"precision "+t.precision+" samplerCubeShadow;":"","#define SHADER_NAME "+t.materialType,"#define PI 3.14159265359","#define EPSILON 1e-6","float pow2( const in float x ) { return x*x; }","#define LOG2 1.442695","#define RECIPROCAL_PI 0.31830988618","#define saturate(a) clamp( a, 0.0, 1.0 )","#define whiteCompliment(a) ( 1.0 - saturate( a ) )",i,t.version>=2?"#define WEBGL2":"",t.version<2?"#define sampler2DShadow sampler2D":"",t.useRoughnessMap?"#define USE_ROUGHNESSMAP":"",t.useMetalnessMap?"#define USE_METALNESSMAP":"",t.ambientLightNum>0?"#define USE_AMBIENT_LIGHT "+t.ambientLightNum:"",t.pointLightNum>0||t.directLightNum>0||t.ambientLightNum>0||t.spotLightNum>0?"#define USE_LIGHT":"",t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0?"#define USE_NORMAL":"",(t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0)&&t.useNormalMap?"#define USE_NORMAL_MAP":"",(t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0)&&t.useBumpMap?"#define USE_BUMPMAP":"",(t.pointLightNum>0||t.directLightNum>0||t.spotLightNum>0)&&t.useSpecularMap?"#define USE_SPECULARMAP":"",t.useEmissiveMap?"#define USE_EMISSIVEMAP":"",t.useShadow?"#define USE_SHADOW":"",t.shadowType===fi.HARD?"#define USE_HARD_SHADOW":"",t.shadowType===fi.POISSON_SOFT?"#define USE_POISSON_SOFT_SHADOW":"",t.shadowType===fi.PCF3_SOFT?"#define USE_PCF3_SOFT_SHADOW":"",t.shadowType===fi.PCF5_SOFT?"#define USE_PCF5_SOFT_SHADOW":"",t.shadowType===fi.PCSS16_SOFT?"#define USE_PCSS16_SOFT_SHADOW":"",t.shadowType===fi.PCSS32_SOFT?"#define USE_PCSS32_SOFT_SHADOW":"",t.shadowType===fi.PCSS64_SOFT?"#define USE_PCSS64_SOFT_SHADOW":"",t.shadowType===fi.PCSS16_SOFT||t.shadowType===fi.PCSS32_SOFT||t.shadowType===fi.PCSS64_SOFT?"#define USE_PCSS_SOFT_SHADOW":"",t.flatShading?"#define FLAT_SHADED":"",t.materialType==Jt.LAMBERT?"#define USE_LAMBERT":"",t.materialType==Jt.PHONG?"#define USE_PHONG":"",t.materialType==Jt.PBR?"#define USE_PBR":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.useShaderTextureLOD?"#define TEXTURE_LOD_EXT":"",t.useDiffuseMap?"#define USE_DIFFUSE_MAP":"",t.useEnvMap?"#define USE_ENV_MAP":"",t.useAOMap?"#define USE_AOMAP":"",t.useVertexColors?"#define USE_VCOLOR":"",t.premultipliedAlpha?"#define USE_PREMULTIPLIED_ALPHA":"",t.fog?"#define USE_FOG":"",t.fogExp2?"#define USE_EXP2_FOG":"",t.alphaTest?"#define ALPHATEST "+t.alphaTest:"",t.useEnvMap?"#define "+t.envMapCombine:"","#define GAMMA_FACTOR "+t.gammaFactor,t.diffuseMapEncoding||t.envMapEncoding||t.emissiveMapEncoding||t.outputEncoding?bi.encodings_pars_frag:"",t.diffuseMapEncoding?rt("mapTexelToLinear",t.diffuseMapEncoding):"",t.envMapEncoding?rt("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMapEncoding?rt("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.outputEncoding?at("linearToOutputTexel",t.outputEncoding):"",t.packDepthToRGBA?"#define DEPTH_PACKING_RGBA":""].join("\n"),a=Ai[t.materialType+"_vert"]||t.vertexShader||Ai.basic_vert,s=Ai[t.materialType+"_frag"]||t.fragmentShader||Ai.basic_frag,o=[n,a].join("\n"),h=[r,s].join("\n");if(o=Ci(o),h=Ci(h),o=ht(o,t),h=ht(h,t),o=ut(o,t),h=ut(h,t),o=ct(o),h=ct(h),t.version>1){h=h.replace("#extension GL_EXT_draw_buffers : require","");for(var u=0,c=[];h.indexOf("gl_FragData["+u+"]")>-1;)h=h.replace("gl_FragData["+u+"]","pc_fragData"+u),c.push("layout(location = "+u+") out vec4 pc_fragData"+u+";"),u++;h=h.replace("#define whiteCompliment(a) ( 1.0 - saturate( a ) )","#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n"+c.join("\n")+"\n"),o=["#version 300 es\n","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+o,h=["#version 300 es\n","#define varying in",h.indexOf("layout")>-1?"":"out highp vec4 pc_fragColor;","#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+h}return new et(e,o,h)}function ht(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.directLightNum).replace(/NUM_SPOT_LIGHTS/g,t.spotLightNum).replace(/NUM_POINT_LIGHTS/g,t.pointLightNum)}function ut(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes)}function ct(e){var t=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;return e.replace(t,function(e,t,i,n){for(var r="",a=parseInt(t);a<parseInt(i);a++)r+=n.replace(/\[ i \]/g,"[ "+a+" ]");return r})}function lt(e,t,i,n,r,a,s,o){var h={};h.materialType=n.type;var t=t;h.version=t.version,h.precision=t.maxPrecision,h.useStandardDerivatives=t.version>=2||!!t.getExtension("OES_standard_derivatives")||!!t.getExtension("GL_OES_standard_derivatives"),h.useShaderTextureLOD=t.version>=2||!!t.getExtension("EXT_shader_texture_lod"),h.useDiffuseMap=!!n.diffuseMap,h.useNormalMap=!!n.normalMap,h.useBumpMap=!!n.bumpMap,h.useSpecularMap=!!n.specularMap,h.useEnvMap=!!n.envMap,h.envMapCombine=n.envMapCombine,h.useEmissiveMap=!!n.emissiveMap,h.useRoughnessMap=!!n.roughnessMap,h.useMetalnessMap=!!n.metalnessMap,h.useAOMap=!!n.aoMap,h.ambientLightNum=a?a.ambientsNum:0,h.directLightNum=a?a.directsNum:0,h.pointLightNum=a?a.pointsNum:0,h.spotLightNum=a?a.spotsNum:0,h.useShadow=r.receiveShadow,r.shadowType.indexOf("pcss")>-1&&t.version<2?(console.warn("WebGL 1.0 not support PCSS soft shadow, fallback to POISSON_SOFT"),h.shadowType=fi.POISSON_SOFT):h.shadowType=r.shadowType;var u=e.currentRenderTarget;h.gammaFactor=i.gammaFactor,h.outputEncoding=it(u.texture||null,i.gammaOutput),h.diffuseMapEncoding=it(n.diffuseMap,i.gammaInput),h.envMapEncoding=it(n.envMap,i.gammaInput),h.emissiveMapEncoding=it(n.emissiveMap,i.gammaInput),h.alphaTest=n.alphaTest,h.premultipliedAlpha=n.premultipliedAlpha,h.useVertexColors=n.vertexColors,h.numClippingPlanes=o?o.length:0,h.flatShading=n.shading===ai.FLAT_SHADING,h.fog=!!s,h.fogExp2=!!s&&s.fogType===$t.EXP2,h.sizeAttenuation=n.sizeAttenuation,h.doubleSided=n.side===ri.DOUBLE,h.flipSided=n.side===ri.BACK,h.packDepthToRGBA=n.packToRGBA;var c=r.type===Kt.SKINNED_MESH&&r.skeleton,l=t.maxVertexUniformVectors,d=t.maxVertexTextures>0&&(!!t.getExtension("OES_texture_float")||t.version>=2),p=0;return d?p=1024:16*(p=r.skeleton?r.skeleton.bones.length:0)>l&&(console.warn("Program: too many bones ("+p+"), current cpu only support "+Math.floor(l/16)+" bones!!"),p=Math.floor(l/16)),h.useSkinning=c,h.bonesNum=p,h.useVertexTexture=d,n.type===Jt.SHADER&&(h.vertexShader=n.vertexShader,h.fragmentShader=n.fragmentShader),h}function dt(e,t,i){var n=[];this.getProgram=function(r,a,s,o){for(var h,a=a||s.material,u=o&&a.acceptLight?o.lights:null,c=o?o.fog:null,l=o?o.clippingPlanes:null,d=lt(t,i,r,a,s,u,c,l),p=tt(d,a),f=0,_=n.length;f<_;f++){var v=n[f];if(v.code===p){++(h=v).usedTimes;break}}if(void 0===h){var m="";void 0!==a.defines&&(m=st(a.defines)),(h=ot(e,d,m)).code=p,n.push(h)}return h},this.releaseProgram=function(t){if(0==--t.usedTimes){var i=n.indexOf(t);n[i]=n[n.length-1],n.pop(),t.dispose(e)}},this.programs=n}function pt(e){return t(e.width)&&t(e.height)}function ft(e,t,i,n,r){this.gl=e,this.state=t,this.texture=i,this.properties=n,this.capabilities=r}function _t(e){return e.material}function vt(e){return!0}function mt(){}function gt(e){this.gl=e;var t=new be;this.properties=t;var i=new Me(e);this.capabilities=i;var n=new Te(e,i);this.state=n;var r=new Oe(e,n,t,i);this.texture=r,this.renderTarget=new ft(e,n,r,t,i),this.geometry=new ze(e,n,t,i),this.programs=new dt(e,n,i),this._usedTextureUnits=0,this._currentGeometryProgram=""}function Et(){F.call(this),this.type=Kt.CAMERA,this.viewMatrix=new s,this.projectionMatrix=new s,this.frustum=new x,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.rect=new f(0,0,1,1),this.frustumCulled=!0}function Mt(e,t){a.call(this),this.uuid=Yt(),this.width=e,this.height=t,this.depthBuffer=!0,this.stencilBuffer=!0,this.multipleSampling=0}function xt(e,t){Mt.call(this,e,t),this._textures={},this.texture=new R,this.activeCubeFace=0}function St(e){this.camera=new Et,this.targets=[new o(1,0,0),new o(-1,0,0),new o(0,1,0),new o(0,-1,0),new o(0,0,1),new o(0,0,-1)],this.ups=[new o(0,-1,0),new o(0,-1,0),new o(0,0,1),new o(0,0,-1),new o(0,-1,0),new o(0,-1,0)],this.camera.setPerspective(.5*Math.PI,1,1,1e3),this.position=new o,this.lookTarget=new o,this.renderTarget=e||new xt(512,512),this.renderTexture=this.renderTarget.texture,this.renderTexture.minFilter=ui.LINEAR_MIPMAP_LINEAR}function yt(e){if(!e.depthMap){var t=new P;t.type=hi.FLOAT_32_UNSIGNED_INT_24_8_REV,t.format=oi.DEPTH_STENCIL,t.internalformat=oi.DEPTH32F_STENCIL8,t.magFilter=ui.LINEAR,t.minFilter=ui.LINEAR,t.compare=li.LESS,t.generateMipmaps=!1,e.renderTarget.attach(t,gi.DEPTH_STENCIL_ATTACHMENT),e.depthMap=t}}function wt(){this.depthMaterial=new ge,this.depthMaterial.packToRGBA=!0,this.distanceMaterial=new Ee,this.oldClearColor=new f}function Tt(e){if(zi.has(e))return zi.get(e);var t;switch(e.lightType){case Qt.DIRECT:t={direction:new Float32Array(3),color:new Float32Array([0,0,0,1]),shadow:0,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2)};break;case Qt.POINT:t={position:new Float32Array(3),color:new Float32Array([0,0,0,1]),distance:0,decay:0,shadow:0,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2),shadowCameraNear:1,shadowCameraFar:1e3};break;case Qt.SPOT:t={position:new Float32Array(3),direction:new Float32Array(3),color:new Float32Array([0,0,0,1]),distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:0,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2)}}return zi.set(e,t),t}function bt(){this._factor=new Uint16Array(4)}function At(){this.ambient=new Float32Array([0,0,0,1]),this.directional=[],this.directionalShadowMap=[],this.directionalDepthMap=[],this.directionalShadowMatrix=[],this.point=[],this.pointShadowMap=[],this.pointShadowMatrix=[],this.spot=[],this.spotShadowMap=[],this.spotDepthMap=[],this.spotShadowMatrix=[],this.shadows=[],this.ambientsNum=0,this.directsNum=0,this.pointsNum=0,this.spotsNum=0,this.shadowsNum=0,this.totalNum=0,this.hash=new bt}function Ct(){function e(e,o,h,u,c){var l=t[i];void 0===l?(l={object:e,geometry:o,material:h,z:u,renderOrder:e.renderOrder,group:c},t[i]=l):(l.object=e,l.geometry=o,l.material=h,l.z=u,l.renderOrder=e.renderOrder,l.group=c),h.transparent?(a[s]=l,s++):(n[r]=l,r++),i++}var t=[],i=0,n=[],r=0,a=[],s=0;return{opaque:n,transparent:a,startCount:function(){i=0,r=0,s=0},add:function(t,i){if(!t.frustumCulled||!i.frustumCulled||(Gi.copy(t.geometry.boundingSphere).applyMatrix4(t.worldMatrix),i.frustum.intersectsSphere(Gi)))if(Bi.setFromMatrixPosition(t.worldMatrix),Bi.applyMatrix4(i.viewMatrix).applyMatrix4(i.projectionMatrix),Array.isArray(t.material))for(var n=t.geometry.groups,r=0;r<n.length;r++){var a=n[r],s=t.material[a.materialIndex];s&&e(t,t.geometry,s,Bi.z,a)}else e(t,t.geometry,t.material,Bi.z)},endCount:function(){n.length=r,a.length=s},sort:function(){n.sort(Hi),a.sort(ki)}}}function Nt(){F.call(this),this.type=Kt.SCENE,this.overrideMaterial=null,this.fog=null,this.clippingPlanes=[],this.lights=new At,this._renderListMap=new WeakMap}function Lt(e,t){F.call(this),this.geometry=e,this.material=t,this.type=Kt.MESH}function Pt(e){var t=new Nt,i=this.camera=new Et;i.frustumCulled=!1,i.position.set(0,1,0),i.lookAt(new o(0,0,0),new o(0,0,-1)),i.setOrtho(-1,1,-1,1,.1,2),t.add(i);var n=new ae(2,2,1,1),r=this.material=new me(e);this.uniforms=r.uniforms;var a=new Lt(n,r);a.frustumCulled=!1,t.add(a),t.updateMatrix(),this.renderList=t.updateRenderList(i),this.renderConfig={}}function Rt(e){Mt.call(this,e.width,e.height),this.view=e}function Ot(){this._entities={},this.enableCounter=!1}function Ft(e,t){var i={antialias:!0,alpha:!1,stencil:!0},n=e.getContext("webgl2",t||i)||e.getContext("webgl",t||i);this.glCore=new gt(n),console.info("ForwardRenderer use WebGL Version: "+this.glCore.capabilities.version),this.backRenderTarget=new Rt(e),this.performance=new Ot,this.shadowMapPass=new wt,this.shadowAutoUpdate=!0,this.shadowNeedsUpdate=!1,this.matrixAutoUpdate=!0,this.lightsAutoupdate=!0,this.autoClear=!0}function Dt(e,t){Mt.call(this,e,t),this._textures={},this.texture=new P}function Ut(){F.call(this),this.type=Kt.GROUP}function It(e,t){F.call(this),this.type=Kt.LIGHT,this.lightType="",this.color=new S(void 0!==e?e:16777215),this.intensity=void 0!==t?t:1}function zt(e,t){It.call(this,e,t),this.lightType=Qt.AMBIENT}function Bt(){this.camera=new Et,this.matrix=new s,this.bias=3e-4,this.radius=2,this.cameraNear=1,this.cameraFar=500,this.mapSize=new p(512,512),this.renderTarget=null,this.map=null}function Gt(){Bt.call(this),this.camera.frustumCulled=!1,this.renderTarget=new Dt(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=ui.LINEAR,this.map=e,this.windowSize=500,this._lookTarget=new o,this._up=new o(0,1,0)}function Ht(e,t){It.call(this,e,t),this.lightType=Qt.DIRECT,this.shadow=new Gt}function kt(){Bt.call(this),this.renderTarget=new xt(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=ui.LINEAR,this.map=e,this._targets=[new o(1,0,0),new o(-1,0,0),new o(0,1,0),new o(0,-1,0),new o(0,0,1),new o(0,0,-1)],this._ups=[new o(0,-1,0),new o(0,-1,0),new o(0,0,1),new o(0,0,-1),new o(0,-1,0),new o(0,-1,0)],this._lookTarget=new o}function Vt(e,t,i,n){It.call(this,e,t),this.lightType=Qt.POINT,this.decay=void 0!==n?n:1,this.distance=void 0!==i?i:200,this.shadow=new kt}function jt(){Bt.call(this),this.renderTarget=new Dt(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=ui.LINEAR,this.map=e,this._lookTarget=new o,this._up=new o(0,1,0)}function Xt(e,t,i,n,r,a){It.call(this,e,t),this.lightType=Qt.SPOT,this.decay=void 0!==a?a:1,this.distance=void 0!==i?i:200,this.penumbra=void 0!==r?r:0,this.angle=void 0!==n?n:Math.PI/6,this.shadow=new jt}function Wt(e,t){Lt.call(this,e,t),this.type=Kt.SKINNED_MESH,this.skeleton=void 0,this.bindMode="attached",this.bindMatrix=new s,this.bindMatrixInverse=new s}var Yt=function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=new Array(36),n=0;return function(){for(var r=0;r<36;r++)8===r||13===r||18===r||23===r?i[r]="-":14===r?i[r]="4":(n<=2&&(n=33554432+16777216*Math.random()|0),e=15&n,n>>=4,i[r]=t[19===r?3&e|8:e]);return i.join("")}}(),qt=function(){if(!window.navigator)return!0;var e=navigator.userAgent.toLowerCase();return-1!=e.indexOf("mobile")||-1!=e.indexOf("android")}(),Zt=!!document,Kt={MESH:"mesh",SKINNED_MESH:"skinned_mesh",LIGHT:"light",CAMERA:"camera",SCENE:"scene",GROUP:"group",CANVAS2D:"canvas2d"},Qt={AMBIENT:"ambient",DIRECT:"direct",POINT:"point",SPOT:"spot"},Jt={BASIC:"basic",LAMBERT:"lambert",PHONG:"phong",PBR:"pbr",POINT:"point",LINE:"line",LINE_LOOP:"lineloop",LINE_DASHED:"linedashed",CANVAS2D:"canvas2d",SHADER:"shader",DEPTH:"depth",DISTANCE:"distance"},$t={NORMAL:"normal",EXP2:"exp2"},ei={NONE:"none",NORMAL:"normal",ADD:"add",CUSTOM:"custom"},ti={ADD:32774,SUBTRACT:32778,REVERSE_SUBTRACT:32779},ii={ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775},ni={NONE:"none",FRONT:"front",BACK:"back",FRONT_AND_BACK:"front_and_back"},ri={FRONT:"front",BACK:"back",DOUBLE:"double"},ai={SMOOTH_SHADING:"smooth_shading",FLAT_SHADING:"flat_shading"},si={TEXTURE_2D:3553,TEXTURE_CUBE_MAP:34067,TEXTURE_3D:32879},oi={DEPTH_COMPONENT:6402,DEPTH_STENCIL:34041,ALPHA:6406,RED:6403,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,R8:33321,RGBA16F:34842,RGBA32F:34836,DEPTH_COMPONENT24:33190,DEPTH_COMPONENT32F:36012,DEPTH24_STENCIL8:35056,DEPTH32F_STENCIL8:36013},hi={BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,HALF_FLOAT:36193,UNSIGNED_INT_24_8:34042,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FLOAT_32_UNSIGNED_INT_24_8_REV:36269},ui={NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987},ci={REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648},li={LEQUAL:515,GEQUAL:518,LESS:513,GREATER:516,EQUAL:514,NOTEQUAL:517,ALWAYS:519,NEVER:512},di={FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_2D_SHADOW:35682,SAMPLER_CUBE:35680,SAMPLER_CUBE_SHADOW:36293,SAMPLER_3D:35679,BYTE:65535,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126},pi={FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,FLOAT:5126,BYTE:65535,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123},fi={HARD:"hard",POISSON_SOFT:"poisson_soft",PCF3_SOFT:"pcf3_soft",PCF5_SOFT:"pcf5_soft",PCSS16_SOFT:"pcss16_soft",PCSS32_SOFT:"pcss32_soft",PCSS64_SOFT:"pcss64_soft"},_i={LINEAR:"linear",SRGB:"sRGB",RGBE:"RGBE",RGBM7:"RGBM7",RGBM16:"RGBM16",RGBD:"RGBD",GAMMA:"Gamma"},vi={MULTIPLY:"ENVMAP_BLENDING_MULTIPLY",MIX:"ENVMAP_BLENDING_MIX",ADD:"ENVMAP_BLENDING_ADD"},mi={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},gi={COLOR_ATTACHMENT0:36064,COLOR_ATTACHMENT1:36065,COLOR_ATTACHMENT2:36066,COLOR_ATTACHMENT3:36067,COLOR_ATTACHMENT4:36068,COLOR_ATTACHMENT5:36069,COLOR_ATTACHMENT6:36070,COLOR_ATTACHMENT7:36071,COLOR_ATTACHMENT8:36072,COLOR_ATTACHMENT9:36073,COLOR_ATTACHMENT10:577040,COLOR_ATTACHMENT11:577041,COLOR_ATTACHMENT12:577042,COLOR_ATTACHMENT13:577043,COLOR_ATTACHMENT14:577044,COLOR_ATTACHMENT15:577045,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306},Ei={DRAW_BUFFER0:34853,DRAW_BUFFER1:34854,DRAW_BUFFER2:34855,DRAW_BUFFER3:34856,DRAW_BUFFER4:34857,DRAW_BUFFER5:34858,DRAW_BUFFER6:34859,DRAW_BUFFER7:34860,DRAW_BUFFER8:34861,DRAW_BUFFER9:34862,DRAW_BUFFER10:34863,DRAW_BUFFER11:34864,DRAW_BUFFER12:34865,DRAW_BUFFER13:34866,DRAW_BUFFER14:34867,DRAW_BUFFER15:34868};Object.assign(a.prototype,{addEventListener:function(e,t,i){var n=this.eventMap[e];n||(n=this.eventMap[e]=[]),n.push({listener:t,thisObject:i||this})},removeEventListener:function(e,t,i){var n=this.eventMap[e];if(n)for(var r=0,a=n.length;r<a;r++){var s=n[r];if(s.listener==t&&s.thisObject==(i||this)){n.splice(r,1);break}}},dispatchEvent:function(e){e.target=this,this.notifyListener(e)},notifyListener:function(e){var t=this.eventMap[e.type];if(t)for(var i=0,n=t.length;i<n;i++){var r=t[i];r.listener.call(r.thisObject,e)}}}),Object.assign(s.prototype,{identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},set:function(e,t,i,n,r,a,s,o,h,u,c,l,d,p,f,_){var v=this.elements;return v[0]=e,v[4]=t,v[8]=i,v[12]=n,v[1]=r,v[5]=a,v[9]=s,v[13]=o,v[2]=h,v[6]=u,v[10]=c,v[14]=l,v[3]=d,v[7]=p,v[11]=f,v[15]=_,this},copy:function(e){return this.elements.set(e.elements),this},makeTranslation:function(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var i=e.elements,n=t.elements,r=this.elements,a=i[0],s=i[4],o=i[8],h=i[12],u=i[1],c=i[5],l=i[9],d=i[13],p=i[2],f=i[6],_=i[10],v=i[14],m=i[3],g=i[7],E=i[11],M=i[15],x=n[0],S=n[4],y=n[8],w=n[12],T=n[1],b=n[5],A=n[9],C=n[13],N=n[2],L=n[6],P=n[10],R=n[14],O=n[3],F=n[7],D=n[11],U=n[15];return r[0]=a*x+s*T+o*N+h*O,r[4]=a*S+s*b+o*L+h*F,r[8]=a*y+s*A+o*P+h*D,r[12]=a*w+s*C+o*R+h*U,r[1]=u*x+c*T+l*N+d*O,r[5]=u*S+c*b+l*L+d*F,r[9]=u*y+c*A+l*P+d*D,r[13]=u*w+c*C+l*R+d*U,r[2]=p*x+f*T+_*N+v*O,r[6]=p*S+f*b+_*L+v*F,r[10]=p*y+f*A+_*P+v*D,r[14]=p*w+f*C+_*R+v*U,r[3]=m*x+g*T+E*N+M*O,r[7]=m*S+g*b+E*L+M*F,r[11]=m*y+g*A+E*P+M*D,r[15]=m*w+g*C+E*R+M*U,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},inverse:function(){return this.getInverse(this)},getInverse:function(e){var t=this.elements,i=e.elements,n=i[0],r=i[1],a=i[2],s=i[3],o=i[4],h=i[5],u=i[6],c=i[7],l=i[8],d=i[9],p=i[10],f=i[11],_=i[12],v=i[13],m=i[14],g=i[15],E=d*m*c-v*p*c+v*u*f-h*m*f-d*u*g+h*p*g,M=_*p*c-l*m*c-_*u*f+o*m*f+l*u*g-o*p*g,x=l*v*c-_*d*c+_*h*f-o*v*f-l*h*g+o*d*g,S=_*d*u-l*v*u-_*h*p+o*v*p+l*h*m-o*d*m,y=n*E+r*M+a*x+s*S;if(0===y)return console.warn("can't invert matrix, determinant is 0"),this.identity();var w=1/y;return t[0]=E*w,t[1]=(v*p*s-d*m*s-v*a*f+r*m*f+d*a*g-r*p*g)*w,t[2]=(h*m*s-v*u*s+v*a*c-r*m*c-h*a*g+r*u*g)*w,t[3]=(d*u*s-h*p*s-d*a*c+r*p*c+h*a*f-r*u*f)*w,t[4]=M*w,t[5]=(l*m*s-_*p*s+_*a*f-n*m*f-l*a*g+n*p*g)*w,t[6]=(_*u*s-o*m*s-_*a*c+n*m*c+o*a*g-n*u*g)*w,t[7]=(o*p*s-l*u*s+l*a*c-n*p*c-o*a*f+n*u*f)*w,t[8]=x*w,t[9]=(_*d*s-l*v*s-_*r*f+n*v*f+l*r*g-n*d*g)*w,t[10]=(o*v*s-_*h*s+_*r*c-n*v*c-o*r*g+n*h*g)*w,t[11]=(l*h*s-o*d*s-l*r*c+n*d*c+o*r*f-n*h*f)*w,t[12]=S*w,t[13]=(l*v*a-_*d*a+_*r*p-n*v*p-l*r*m+n*d*m)*w,t[14]=(_*h*a-o*v*a-_*r*u+n*v*u+o*r*m-n*h*m)*w,t[15]=(o*d*a-l*h*a+l*r*u-n*d*u-o*r*p+n*h*p)*w,this},transform:function(){var e=new s;return function(t,i,n){var r=n.toMatrix4(e).elements,a=this.elements;return a[0]=r[0]*i.x,a[1]=r[1]*i.x,a[2]=r[2]*i.x,a[3]=0,a[4]=r[4]*i.y,a[5]=r[5]*i.y,a[6]=r[6]*i.y,a[7]=0,a[8]=r[8]*i.z,a[9]=r[9]*i.z,a[10]=r[10]*i.z,a[11]=0,a[12]=t.x,a[13]=t.y,a[14]=t.z,a[15]=1,this}}(),makeRotationFromQuaternion:function(e){var t=this.elements,i=e.x,n=e.y,r=e.z,a=e.w,s=i+i,o=n+n,h=r+r,u=i*s,c=i*o,l=i*h,d=n*o,p=n*h,f=r*h,_=a*s,v=a*o,m=a*h;return t[0]=1-(d+f),t[4]=c-m,t[8]=l+v,t[1]=c+m,t[5]=1-(u+f),t[9]=p-_,t[2]=l-v,t[6]=p+_,t[10]=1-(u+d),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAtRH:function(){var e=new o,t=new o,i=new o;return function(n,r,a){var s=this.elements;return i.subVectors(n,r),0===i.getLengthSquared()&&(i.z=1),i.normalize(),e.crossVectors(a,i),0===e.getLengthSquared()&&(1===Math.abs(a.z)?i.x+=1e-4:i.z+=1e-4,i.normalize(),e.crossVectors(a,i)),e.normalize(),t.crossVectors(i,e),s[0]=e.x,s[4]=t.x,s[8]=i.x,s[1]=e.y,s[5]=t.y,s[9]=i.y,s[2]=e.z,s[6]=t.z,s[10]=i.z,this}}(),decompose:function(){var e=new o,t=new s;return function(i,n,r){var a=this.elements,s=e.set(a[0],a[1],a[2]).getLength(),o=e.set(a[4],a[5],a[6]).getLength(),h=e.set(a[8],a[9],a[10]).getLength();this.determinant()<0&&(s=-s),i.x=a[12],i.y=a[13],i.z=a[14],t.elements.set(this.elements);var u=1/s,c=1/o,l=1/h;return t.elements[0]*=u,t.elements[1]*=u,t.elements[2]*=u,t.elements[4]*=c,t.elements[5]*=c,t.elements[6]*=c,t.elements[8]*=l,t.elements[9]*=l,t.elements[10]*=l,n.setFromRotationMatrix(t),r.x=s,r.y=o,r.z=h,this}}(),determinant:function(){var e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],a=e[1],s=e[5],o=e[9],h=e[13],u=e[2],c=e[6],l=e[10],d=e[14];return e[3]*(+r*o*c-n*h*c-r*s*l+i*h*l+n*s*d-i*o*d)+e[7]*(+t*o*d-t*h*l+r*a*l-n*a*d+n*h*u-r*o*u)+e[11]*(+t*h*c-t*s*d-r*a*c+i*a*d+r*s*u-i*h*u)+e[15]*(-n*s*u-t*o*c+t*s*l+n*a*c-i*a*l+i*o*u)},fromArray:function(e,t){void 0===t&&(t=0);for(var i=0;i<16;i++)this.elements[i]=e[i+t];return this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}),Object.assign(o.prototype,{lerpVectors:function(e,t,i){return this.subVectors(t,e).multiplyScalar(i).add(e)},set:function(e,t,i){return this.x=e||0,this.y=t||0,this.z=i||0,this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},getLength:function(){return Math.sqrt(this.getLengthSquared())},getLengthSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z},normalize:function(e){e=e||1;var t=this.getLength();if(0!=t){var i=e/t;return this.x*=i,this.y*=i,this.z*=i,this}},subtract:function(e,t){return t||(t=new o),t.set(this.x-e.x,this.y-e.y,this.z-e.z),t},multiply:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this},crossVectors:function(e,t){var i=e.x,n=e.y,r=e.z,a=t.x,s=t.y,o=t.z;return this.x=n*o-r*s,this.y=r*a-i*o,this.z=i*s-n*a,this},cross:function(e){var t=this.x,i=this.y,n=this.z;return this.x=i*e.z-n*e.y,this.y=n*e.x-t*e.z,this.z=t*e.y-i*e.x,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},applyQuaternion:function(e){var t=this.x,i=this.y,n=this.z,r=e._x,a=e._y,s=e._z,o=e._w,h=o*t+a*n-s*i,u=o*i+s*t-r*n,c=o*n+r*i-a*t,l=-r*t-a*i-s*n;return this.x=h*o+l*-r+u*-s-c*-a,this.y=u*o+l*-a+c*-r-h*-s,this.z=c*o+l*-s+h*-a-u*-r,this},applyMatrix4:function(e){var t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n+r[12],this.y=r[1]*t+r[5]*i+r[9]*n+r[13],this.z=r[2]*t+r[6]*i+r[10]*n+r[14],this},applyMatrix3:function(e){var t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this},transformDirection:function(e){var t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()},setFromMatrixPosition:function(e){return this.setFromMatrixColumn(e,3)},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},add:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},sub:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},setFromSpherical:function(e){var t=Math.sin(e.phi)*e.radius;return this.x=t*Math.sin(e.theta),this.y=Math.cos(e.phi)*e.radius,this.z=t*Math.cos(e.theta),this},unproject:function(){var e;return function(t){return void 0===e&&(e=new s),e.multiplyMatrices(t.worldMatrix,e.getInverse(t.projectionMatrix)),this.applyProjection(e)}}(),applyProjection:function(e){var t=this.x,i=this.y,n=this.z,r=e.elements,a=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*a,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*a,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*a,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},clone:function(){return new o(this.x,this.y,this.z)}}),Object.assign(h.prototype,{set:function(e,t){this.origin.copy(e),this.direction.copy(t)},at:function(e,t){return(t||new o).copy(this.direction).multiplyScalar(e).add(this.origin)},intersectsSphere:function(){var e=new o;return function(t,i){e.subVectors(t.center,this.origin);var n=e.dot(this.direction),r=e.dot(e)-n*n,a=t.radius*t.radius;if(r>a)return null;var s=Math.sqrt(a-r),o=n-s,h=n+s;return o<0&&h<0?null:o<0?this.at(h,i):this.at(o,i)}}(),intersectsBox:function(e,t){var i,n,r,a,s,o,h=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,l=this.origin;return h>=0?(i=(e.min.x-l.x)*h,n=(e.max.x-l.x)*h):(i=(e.max.x-l.x)*h,n=(e.min.x-l.x)*h),u>=0?(r=(e.min.y-l.y)*u,a=(e.max.y-l.y)*u):(r=(e.max.y-l.y)*u,a=(e.min.y-l.y)*u),i>a||r>n?null:((r>i||i!==i)&&(i=r),(a<n||n!==n)&&(n=a),c>=0?(s=(e.min.z-l.z)*c,o=(e.max.z-l.z)*c):(s=(e.max.z-l.z)*c,o=(e.min.z-l.z)*c),i>o||s>n?null:((s>i||i!==i)&&(i=s),(o<n||n!==n)&&(n=o),n<0?null:this.at(i>=0?i:n,t)))},intersectTriangle:function(){var e=new o,t=new o,i=new o,n=new o;return function(r,a,s,o,h){t.subVectors(a,r),i.subVectors(s,r),n.crossVectors(t,i);var u,c=this.direction.dot(n);if(c>0){if(o)return null;u=1}else{if(!(c<0))return null;u=-1,c=-c}e.subVectors(this.origin,r);var l=u*this.direction.dot(i.crossVectors(e,i));if(l<0)return null;var d=u*this.direction.dot(t.cross(e));if(d<0)return null;if(l+d>c)return null;var p=-u*e.dot(n);return p<0?null:this.at(p/c,h)}}(),copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this}}),Object.assign(u.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){this.ray.origin.setFromMatrixPosition(t.worldMatrix),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize()},intersectObject:function(e,t){var i=[];return l(e,this,i,t),i.sort(c),i},intersectObjects:function(e,t){var i=[];if(!1===Array.isArray(e))return console.warn("Raycaster.intersectObjects: objects is not an Array."),i;for(var n=0,r=e.length;n<r;n++)l(e[n],this,i,t);return i.sort(c),i}}),d.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],d.DefaultOrder="XYZ",Object.defineProperties(d.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this.onChangeCallback()}}}),Object.assign(d.prototype,{copyFrom:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},set:function(e,t,i,n){return this._x=e||0,this._y=t||0,this._z=i||0,this._order=n||this._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,i){var n=function(e,t,i){return Math.max(t,Math.min(i,e))},r=e.elements,a=r[0],s=r[4],o=r[8],h=r[1],u=r[5],c=r[9],l=r[2],d=r[6],p=r[10];return"XYZ"===(t=t||this._order)?(this._y=Math.asin(n(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(-c,p),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(d,u),this._z=0)):"YXZ"===t?(this._x=Math.asin(-n(c,-1,1)),Math.abs(c)<.99999?(this._y=Math.atan2(o,p),this._z=Math.atan2(h,u)):(this._y=Math.atan2(-l,a),this._z=0)):"ZXY"===t?(this._x=Math.asin(n(d,-1,1)),Math.abs(d)<.99999?(this._y=Math.atan2(-l,p),this._z=Math.atan2(-s,u)):(this._y=0,this._z=Math.atan2(h,a))):"ZYX"===t?(this._y=Math.asin(-n(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(d,p),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-s,u))):"YZX"===t?(this._z=Math.asin(n(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(-c,u),this._y=Math.atan2(-l,a)):(this._x=0,this._y=Math.atan2(o,p))):"XZY"===t?(this._z=Math.asin(-n(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(d,u),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-c,p),this._y=0)):console.warn("given unsupported order: "+t),this._order=t,!1!==i&&this.onChangeCallback(),this},setFromQuaternion:function(){var e=new s;return function(t,i,n){return t.toMatrix4(e),this.setFromRotationMatrix(e,i,n)}}(),onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(p.prototype,{set:function(e,t){return this.x=e||0,this.y=t||0,this},lerpVectors:function(e,t,i){return this.subVectors(t,e).multiplyScalar(i).add(e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},getLength:function(){return Math.sqrt(this.getLengthSquared())},getLengthSquared:function(){return this.x*this.x+this.y*this.y},normalize:function(e){e=e||1;var t=this.getLength();if(0!=t){var i=e/t;return this.x*=i,this.y*=i,this}},subtract:function(e,t){return t||(t=new p),t.set(this.x-e.x,this.y-e.y),t},sub:function(e){return this.x-=e.x,this.y-=e.y,this},copy:function(e){return this.x=e.x,this.y=e.y,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y;return t*t+i*i},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},add:function(e){return this.x+=e.x,this.y+=e.y,this},angle:function(){var e=Math.atan2(this.y,this.x);return e<0&&(e+=2*Math.PI),e},clone:function(){return new p(this.x,this.y)}}),Object.assign(f.prototype,{lerpVectors:function(e,t,i){return this.subVectors(t,e).multiplyScalar(i).add(e)},set:function(e,t,i,n){return this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==n?n:1,this},normalize:function(){return this.multiplyScalar(1/(this.getLength()||1))},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},getLengthSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},getLength:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},applyMatrix4:function(e){var t=this.x,i=this.y,n=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*n+a[12]*r,this.y=a[1]*t+a[5]*i+a[9]*n+a[13]*r,this.z=a[2]*t+a[6]*i+a[10]*n+a[14]*r,this.w=a[3]*t+a[7]*i+a[11]*n+a[15]*r,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},add:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}}),Object.assign(_.prototype,{identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},inverse:function(){return this.getInverse(this)},getInverse:function(e){var t=e.elements,i=this.elements,n=t[0],r=t[1],a=t[2],s=t[3],o=t[4],h=t[5],u=t[6],c=t[7],l=t[8],d=l*o-h*c,p=h*u-l*s,f=c*s-o*u,_=n*d+r*p+a*f;if(0===_){return console.warn("zen3d.Matrix3: .getInverse() can't invert matrix, determinant is 0"),this.identity()}var v=1/_;return i[0]=d*v,i[1]=(a*c-l*r)*v,i[2]=(h*r-a*o)*v,i[3]=p*v,i[4]=(l*n-a*u)*v,i[5]=(a*s-h*n)*v,i[6]=f*v,i[7]=(r*u-c*n)*v,i[8]=(o*n-r*s)*v,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},set:function(e,t,i,n,r,a,s,o,h){var u=this.elements;return u[0]=e,u[3]=t,u[6]=i,u[1]=n,u[4]=r,u[7]=a,u[2]=s,u[5]=o,u[8]=h,this},copy:function(e){return this.elements.set(e.elements),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var i=e.elements,n=t.elements,r=this.elements,a=i[0],s=i[3],o=i[6],h=i[1],u=i[4],c=i[7],l=i[2],d=i[5],p=i[8],f=n[0],_=n[3],v=n[6],m=n[1],g=n[4],E=n[7],M=n[2],x=n[5],S=n[8];return r[0]=a*f+s*m+o*M,r[3]=a*_+s*g+o*x,r[6]=a*v+s*E+o*S,r[1]=h*f+u*m+c*M,r[4]=h*_+u*g+c*x,r[7]=h*v+u*E+c*S,r[2]=l*f+d*m+p*M,r[5]=l*_+d*g+p*x,r[8]=l*v+d*E+p*S,this},transform:function(e,t,i,n,r,a,s){var o=this.elements,h=1,u=0;if(r%360){var c=r;h=Math.cos(c),u=Math.sin(c)}return o[0]=h*i,o[3]=-u*n,o[6]=e,o[1]=u*i,o[4]=h*n,o[7]=t,o[2]=0,o[5]=0,o[8]=1,(a||s)&&(o[6]-=a*o[0]+s*o[3],o[7]-=a*o[1]+s*o[4]),this},setUvTransform:function(e,t,i,n,r,a,s){var o=Math.cos(r),h=Math.sin(r);this.set(i*o,i*h,-i*(o*a+h*s)+a+e,-n*h,n*o,-n*(-h*a+o*s)+s+t,0,0,1)},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}}),Object.defineProperties(v.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this.onChangeCallback()}}}),Object.assign(v.prototype,{normalize:function(e){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},lerpQuaternions:function(e,t,i){var n=e._w,r=e._x,a=e._y,s=e._z,o=t._w,h=t._x,u=t._y,c=t._z,l=n*o+r*h+a*u+s*c;l<0&&(l=-l,o=-o,h=-h,u=-u,c=-c),this._w=n+i*(o-n),this._x=r+i*(h-r),this._y=a+i*(u-a),this._z=s+i*(c-s);var d=1/Math.sqrt(this._w*this._w+this._x*this._x+this._y*this._y+this._z*this._z);return this._w*=d,this._x*=d,this._y*=d,this._z*=d,this.onChangeCallback(),this},slerpQuaternions:function(e,t,i){var n=e._w,r=e._x,a=e._y,s=e._z,o=t._w,h=t._x,u=t._y,c=t._z,l=n*o+r*h+a*u+s*c;if(l<0&&(l=-l,o=-o,h=-h,u=-u,c=-c),l<.95){var d=Math.acos(l),p=1/Math.sin(d),f=Math.sin(d*(1-i))*p,_=Math.sin(d*i)*p;this._w=n*f+o*_,this._x=r*f+h*_,this._y=a*f+u*_,this._z=s*f+c*_}else{this._w=n+i*(o-n),this._x=r+i*(h-r),this._y=a+i*(u-a),this._z=s+i*(c-s);var v=1/Math.sqrt(this._w*this._w+this._x*this._x+this._y*this._y+this._z*this._z);this._w*=v,this._x*=v,this._y*=v,this._z*=v}return this.onChangeCallback(),this},set:function(e,t,i,n){return this._x=e||0,this._y=t||0,this._z=i||0,this._w=void 0!==n?n:1,this.onChangeCallback(),this},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=void 0!==e.w?e.w:1,this.onChangeCallback(),this},setFromEuler:function(e,t){var i=Math.cos(e._x/2),n=Math.cos(e._y/2),r=Math.cos(e._z/2),a=Math.sin(e._x/2),s=Math.sin(e._y/2),o=Math.sin(e._z/2),h=e._order;return"XYZ"===h?(this._x=a*n*r+i*s*o,this._y=i*s*r-a*n*o,this._z=i*n*o+a*s*r,this._w=i*n*r-a*s*o):"YXZ"===h?(this._x=a*n*r+i*s*o,this._y=i*s*r-a*n*o,this._z=i*n*o-a*s*r,this._w=i*n*r+a*s*o):"ZXY"===h?(this._x=a*n*r-i*s*o,this._y=i*s*r+a*n*o,this._z=i*n*o+a*s*r,this._w=i*n*r-a*s*o):"ZYX"===h?(this._x=a*n*r-i*s*o,this._y=i*s*r+a*n*o,this._z=i*n*o-a*s*r,this._w=i*n*r+a*s*o):"YZX"===h?(this._x=a*n*r+i*s*o,this._y=i*s*r+a*n*o,this._z=i*n*o-a*s*r,this._w=i*n*r-a*s*o):"XZY"===h&&(this._x=a*n*r-i*s*o,this._y=i*s*r-a*n*o,this._z=i*n*o+a*s*r,this._w=i*n*r+a*s*o),!1!==t&&this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,i=e.elements,n=i[0],r=i[4],a=i[8],s=i[1],o=i[5],h=i[9],u=i[2],c=i[6],l=i[10],d=n+o+l;return d>0?(t=.5/Math.sqrt(d+1),this._w=.25/t,this._x=(c-h)*t,this._y=(a-u)*t,this._z=(s-r)*t):n>o&&n>l?(t=2*Math.sqrt(1+n-o-l),this._w=(c-h)/t,this._x=.25*t,this._y=(r+s)/t,this._z=(a+u)/t):o>l?(t=2*Math.sqrt(1+o-n-l),this._w=(a-u)/t,this._x=(r+s)/t,this._y=.25*t,this._z=(h+c)/t):(t=2*Math.sqrt(1+l-n-o),this._w=(s-r)/t,this._x=(a+u)/t,this._y=(h+c)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t=new o;return function(i,n){return void 0===t&&(t=new o),(e=i.dot(n)+1)<1e-6?(e=0,Math.abs(i.x)>Math.abs(i.z)?t.set(-i.y,i.x,0):t.set(0,-i.z,i.y)):t.crossVectors(i,n),this._x=t.x,this._y=t.y,this._z=t.z,this._w=e,this.normalize()}}(),multiply:function(e){return this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var i=e._x,n=e._y,r=e._z,a=e._w,s=t._x,o=t._y,h=t._z,u=t._w;return this._x=i*u+a*s+n*h-r*o,this._y=n*u+a*o+r*s-i*h,this._z=r*u+a*h+i*o-n*s,this._w=a*u-i*s-n*o-r*h,this.onChangeCallback(),this},toMatrix4:function(e){e||(e=new s);var t=e.elements,i=2*this._x*this._y,n=2*this._x*this._z,r=2*this._x*this._w,a=2*this._y*this._z,o=2*this._y*this._w,h=2*this._z*this._w,u=this._x*this._x,c=this._y*this._y,l=this._z*this._z,d=this._w*this._w;return t[0]=u-c-l+d,t[4]=i-h,t[8]=n+o,t[12]=0,t[1]=i+h,t[5]=-u+c-l+d,t[9]=a-r,t[13]=0,t[2]=n-o,t[6]=a+r,t[10]=-u-c+l+d,t[14]=0,t[3]=0,t[7]=0,t[11]=0,t[15]=1,e},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},setFromAxisAngle:function(e,t){var i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this.onChangeCallback(),this},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(v,{slerpFlat:function(e,t,i,n,r,a,s){var o=i[n+0],h=i[n+1],u=i[n+2],c=i[n+3],l=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(c!==f||o!==l||h!==d||u!==p){var _=1-s,v=o*l+h*d+u*p+c*f,m=v>=0?1:-1,g=1-v*v;if(g>Number.EPSILON){var E=Math.sqrt(g),M=Math.atan2(E,v*m);_=Math.sin(_*M)/E,s=Math.sin(s*M)/E}var x=s*m;if(o=o*_+l*x,h=h*_+d*x,u=u*_+p*x,c=c*_+f*x,_===1-s){var S=1/Math.sqrt(o*o+h*h+u*u+c*c);o*=S,h*=S,u*=S,c*=S}}e[t]=o,e[t+1]=h,e[t+2]=u,e[t+3]=c}}),Object.assign(m.prototype,{set:function(e,t,i,n){this.min.set(e,t),this.max.set(i,n)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}}),Object.assign(g.prototype,{set:function(e,t){this.min.copy(e),this.max.copy(t)},setFromPoints:function(e){this.makeEmpty();for(var t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByBox3:function(e){return this.min.min(e.min),this.max.max(e.max),this},setFromArray:function(e,t){for(var i=1/0,n=1/0,r=1/0,a=-1/0,s=-1/0,o=-1/0,h=void 0!==t?t:3,u=0,c=e.length;u<c;u+=h){var l=e[u],d=e[u+1],p=e[u+2];l<i&&(i=l),d<n&&(n=d),p<r&&(r=p),l>a&&(a=l),d>s&&(s=d),p>o&&(o=p)}return this.min.set(i,n,r),this.max.set(a,s,o),this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},getCenter:function(e){var t=e||new o;return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},applyMatrix4:function(){var e=[new o,new o,new o,new o,new o,new o,new o,new o];return function(t){return this.isEmpty()?this:(e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(e),this)}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}}),Object.assign(E.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromArray:function(){var e=new g,t=new o;return function(i,n){var r=void 0!==n?n:3,a=this.center;e.setFromArray(i,r).getCenter(a);for(var s=0,o=0,h=i.length;o<h;o+=r){var u=i[o],c=i[o+1],l=i[o+2];t.set(u,c,l),s=Math.max(s,a.distanceToSquared(t))}return this.radius=Math.sqrt(s),this}}(),applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},getBoundingBox:function(e){var t=e||new g;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},clone:function(){return(new E).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this}}),Object.assign(M.prototype,{set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this},normalize:function(){var e=1/this.normal.getLength();return this.normal.multiplyScalar(e),this.constant*=e,this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},coplanarPoint:function(e){return(e||new o).copy(this.normal).multiplyScalar(-this.constant)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},applyMatrix4:function(){var e=new o,t=new _;return function(i,n){var r=n||t.setFromMatrix4(i).inverse().transpose(),a=this.coplanarPoint(e).applyMatrix4(i),s=this.normal.applyMatrix3(r).normalize();return this.constant=-a.dot(s),this}}()}),Object.assign(x.prototype,{set:function(e,t,i,n,r,a){var s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(i),s[3].copy(n),s[4].copy(r),s[5].copy(a),this},setFromMatrix:function(e){var t=this.planes,i=e.elements,n=i[0],r=i[1],a=i[2],s=i[3],o=i[4],h=i[5],u=i[6],c=i[7],l=i[8],d=i[9],p=i[10],f=i[11],_=i[12],v=i[13],m=i[14],g=i[15];return t[0].setComponents(s-n,c-o,f-l,g-_).normalize(),t[1].setComponents(s+n,c+o,f+l,g+_).normalize(),t[2].setComponents(s+r,c+h,f+d,g+v).normalize(),t[3].setComponents(s-r,c-h,f-d,g-v).normalize(),t[4].setComponents(s-a,c-u,f-p,g-m).normalize(),t[5].setComponents(s+a,c+u,f+p,g+m).normalize(),this},intersectsSphere:function(e){for(var t=this.planes,i=e.center,n=-e.radius,r=0;r<6;r++)if(t[r].distanceToPoint(i)<n)return!1;return!0},intersectsBox:function(){var e=new o,t=new o;return function(i){for(var n=this.planes,r=0;r<6;r++){var a=n[r];e.x=a.normal.x>0?i.min.x:i.max.x,t.x=a.normal.x>0?i.max.x:i.min.x,e.y=a.normal.y>0?i.min.y:i.max.y,t.y=a.normal.y>0?i.max.y:i.min.y,e.z=a.normal.z>0?i.min.z:i.max.z,t.z=a.normal.z>0?i.max.z:i.min.z;var s=a.distanceToPoint(e),o=a.distanceToPoint(t);if(s<0&&o<0)return!1}return!0}}()}),Object.assign(S.prototype,{lerpColors:function(e,t,i){this.r=i*(t.r-e.r)+e.r,this.g=i*(t.g-e.g)+e.g,this.b=i*(t.b-e.b)+e.b},lerp:function(e,t){this.lerpColors(this,e,t)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,i){return this.r=e,this.g=t,this.b=i,this},setHSL:function(){function e(e,t){return(e%t+t)%t}function t(e,t,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?e+6*(t-e)*i:i<.5?t:i<2/3?e+6*(t-e)*(2/3-i):e}return function(i,n,r){if(i=e(i,1),n=Math.max(0,Math.min(1,n)),r=Math.max(0,Math.min(1,r)),0===n)this.r=this.g=this.b=r;else{var a=r<=.5?r*(1+n):r+n-r*n,s=2*r-a;this.r=t(s,a,i+1/3),this.g=t(s,a,i),this.b=t(s,a,i-1/3)}return this}}(),fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}}),Object.assign(y.prototype,{set:function(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}}),y.normal=function(){var e=new o;return function(t,i,n,r){var a=r||new o;a.subVectors(n,i),e.subVectors(t,i),a.cross(e);var s=a.getLengthSquared();return s>0?a.multiplyScalar(1/Math.sqrt(s)):a.set(0,0,0)}}(),y.barycoordFromPoint=function(){var e=new o,t=new o,i=new o;return function(n,r,a,s,h){e.subVectors(s,r),t.subVectors(a,r),i.subVectors(n,r);var u=e.dot(e),c=e.dot(t),l=e.dot(i),d=t.dot(t),p=t.dot(i),f=u*d-c*c,_=h||new o;if(0===f)return _.set(-2,-1,-1);var v=1/f,m=(d*l-c*p)*v,g=(u*p-c*l)*v;return _.set(1-m-g,g,m)}}(),y.containsPoint=function(){var e=new o;return function(t,i,n,r){var a=y.barycoordFromPoint(t,i,n,r,e);return a.x>=0&&a.y>=0&&a.x+a.y<=1}}(),Object.assign(w.prototype,{set:function(e,t){this.posPoints=e,this.ctrlPoints=t,e.length!==t.length&&console.warn("Curve: posPoints and ctrlPoints's length not equal!"),this.segCount=e.length-1},calc:function(){var e=new p,t=new p,i=new p,n=new p;return function(r){for(var a=0;a<this.segCount;a++)if(r>=this.posPoints[a].x&&r<=this.posPoints[a+1].x){e.copy(this.posPoints[a]),i.copy(this.posPoints[a+1]),t.copy(this.ctrlPoints[a]),n.copy(this.ctrlPoints[a+1]);break}return e||e.copy(this.posPoints[this.posPoints.length-1]),t||t.copy(this.ctrlPoints[this.ctrlPoints.length-1]),i.copy(i||e),n.copy(n||t),r=(r-e.x)/(i.x-e.x),this._cubic_bezier(e.y,t.y,n.y,i.y,r)}}(),averageXSampler:function(e){e<2&&console.warn("Curve: sampler num less than 2!");for(var t=[],i=this.posPoints[0].x,n=this.posPoints[this.posPoints.length-1].x,r=(n-i)/(e-1),a=0,s=0;s<e;s++)a=s===e-1?n:i+s*r,t.push(a,this.calc(a));return t},_cubic_bezier:function(e,t,i,n,r){return e=this._mix(e,t,r),t=this._mix(t,i,r),i=this._mix(i,n,r),e=this._mix(e,t,r),t=this._mix(t,i,r),e=this._mix(e,t,r)},_mix:function(e,t,i){return e*(1-i)+t*i}}),Object.assign(T.prototype,{set:function(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},clone:function(){return(new this.constructor).copy(this)},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(e){return this.radius=e.getLength(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e.x,e.z),this.phi=Math.acos(Math.min(1,Math.max(-1,e.y/this.radius)))),this}}),b.prototype=Object.assign(Object.create(a.prototype),{constructor:b,clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.textureType=e.textureType,this.border=e.border,this.format=e.format,this.type=e.type,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.anisotropy=e.anisotropy,this.generateMipmaps=e.generateMipmaps,this.encoding=e.encoding,this.flipY=e.flipY,this.version=e.version,this},dispose:function(){this.dispatchEvent({type:"dispose"}),this.version=0}});var Mi=new A;Object.assign(C.prototype,{load:function(e,t,i,n){function r(){o.removeEventListener("load",r,!1),o.removeEventListener("error",a,!1),t&&t(this),s.manager.itemEnd(e)}function a(t){o.removeEventListener("load",r,!1),o.removeEventListener("error",a,!1),n&&n(t),s.manager.itemError(e),s.manager.itemEnd(e)}void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var s=this,o=document.createElementNS("http://www.w3.org/1999/xhtml","img");return o.addEventListener("load",r,!1),o.addEventListener("error",a,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(e),o.src=e,o},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(N.prototype,{load:function(e,t,i,n){void 0===e&&(e=""),void 0!=this.path&&(e=this.path+e);var r,a=this,s=/^data:(.*?)(;base64)?,(.*)$/,o=(e=this.manager.resolveURL(e)).match(s);if(o){var h=o[1],u=!!o[2],c=o[3];c=window.decodeURIComponent(c),u&&(c=window.atob(c));try{var l,d=(this.responseType||"").toLowerCase();switch(d){case"arraybuffer":case"blob":l=new ArrayBuffer(c.length);for(var p=new Uint8Array(l),f=0;f<c.length;f++)p[f]=c.charCodeAt(f);"blob"===d&&(l=new Blob([l],{type:h}));break;case"document":var _=new DOMParser;l=_.parseFromString(c,h);break;case"json":l=JSON.parse(c);break;default:l=c}window.setTimeout(function(){t&&t(l),a.manager.itemEnd(e)},0)}catch(t){window.setTimeout(function(){n&&n(t),a.manager.itemError(e),a.manager.itemEnd(e)},0)}}else{(r=new XMLHttpRequest).open("GET",e,!0),r.addEventListener("load",function(i){var r=i.target.response;200===this.status?(t&&t(r),a.manager.itemEnd(e)):0===this.status?(console.warn("THREE.FileLoader: HTTP Status 0 received."),t&&t(r),a.manager.itemEnd(e)):(n&&n(i),a.manager.itemError(e),a.manager.itemEnd(e))},!1),void 0!==i&&r.addEventListener("progress",function(e){i(e)},!1),void 0!==n&&r.addEventListener("error",function(t){n(t),a.manager.itemError(e),a.manager.itemEnd(e)},!1),void 0!==this.responseType&&(r.responseType=this.responseType),void 0!==this.withCredentials&&(r.withCredentials=this.withCredentials),r.overrideMimeType&&r.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(var v in this.requestHeader)r.setRequestHeader(v,this.requestHeader[v]);r.send(null)}return a.manager.itemStart(e),r},setPath:function(e){return this.path=e,this},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}}),Object.assign(L.prototype,{load:function(e,t,i,n){var r=this,a=new N(this.manager);a.setResponseType("arraybuffer"),a.load(e,function(e){void 0!==t&&t(r.parse(e))},i,n)},parse:function(e){function t(e,t,i,n,r,a,s,o,h){var u,c,l,d=h,p=0,f=S.width;for(l=t;l!==n;l+=i)for(c=r;c!==s;c+=a,p++)u=o[p],e[4*(c+f*l)+3]=255,e[4*(c+f*l)+2]=d[3*u+0],e[4*(c+f*l)+1]=d[3*u+1],e[4*(c+f*l)+0]=d[3*u+2];return e}function i(e,t,i,n,r,a,s,o){var h,u,c,l=0,d=S.width;for(c=t;c!==n;c+=i)for(u=r;u!==s;u+=a,l+=2)h=o[l+0]+(o[l+1]<<8),e[4*(u+d*c)+0]=(31744&h)>>7,e[4*(u+d*c)+1]=(992&h)>>2,e[4*(u+d*c)+2]=(31&h)>>3,e[4*(u+d*c)+3]=32768&h?0:255;return e}function n(e,t,i,n,r,a,s,o){var h,u,c=0,l=S.width;for(u=t;u!==n;u+=i)for(h=r;h!==s;h+=a,c+=3)e[4*(h+l*u)+3]=255,e[4*(h+l*u)+2]=o[c+0],e[4*(h+l*u)+1]=o[c+1],e[4*(h+l*u)+0]=o[c+2];return e}function r(e,t,i,n,r,a,s,o){var h,u,c=0,l=S.width;for(u=t;u!==n;u+=i)for(h=r;h!==s;h+=a,c+=4)e[4*(h+l*u)+2]=o[c+0],e[4*(h+l*u)+1]=o[c+1],e[4*(h+l*u)+0]=o[c+2],e[4*(h+l*u)+3]=o[c+3];return e}function a(e,t,i,n,r,a,s,o){var h,u,c,l=0,d=S.width;for(c=t;c!==n;c+=i)for(u=r;u!==s;u+=a,l++)h=o[l],e[4*(u+d*c)+0]=h,e[4*(u+d*c)+1]=h,e[4*(u+d*c)+2]=h,e[4*(u+d*c)+3]=255;return e}function s(e,t,i,n,r,a,s,o){var h,u,c=0,l=S.width;for(u=t;u!==n;u+=i)for(h=r;h!==s;h+=a,c+=2)e[4*(h+l*u)+0]=o[c+0],e[4*(h+l*u)+1]=o[c+0],e[4*(h+l*u)+2]=o[c+0],e[4*(h+l*u)+3]=o[c+1];return e}var o=0,h=1,u=2,c=3,l=9,d=10,p=11,f=48,_=4,v=0,m=1,g=2,E=3;e.length<19&&console.error("TGALoader.parse: Not enough data to contain header.");var M=new Uint8Array(e),x=0,S={id_length:M[x++],colormap_type:M[x++],image_type:M[x++],colormap_index:M[x++]|M[x++]<<8,colormap_length:M[x++]|M[x++]<<8,colormap_size:M[x++],origin:[M[x++]|M[x++]<<8,M[x++]|M[x++]<<8],width:M[x++]|M[x++]<<8,height:M[x++]|M[x++]<<8,pixel_size:M[x++],flags:M[x++]};!function(e){switch(e.image_type){case h:case l:(e.colormap_length>256||24!==e.colormap_size||1!==e.colormap_type)&&console.error("TGALoader.parse.tgaCheckHeader: Invalid type colormap data for indexed type");break;case u:case c:case d:case p:e.colormap_type&&console.error("TGALoader.parse.tgaCheckHeader: Invalid type colormap data for colormap type");break;case o:console.error("TGALoader.parse.tgaCheckHeader: No data");default:console.error('TGALoader.parse.tgaCheckHeader: Invalid type " '+e.image_type+'"')}(e.width<=0||e.height<=0)&&console.error("TGALoader.parse.tgaCheckHeader: Invalid image size"),8!==e.pixel_size&&16!==e.pixel_size&&24!==e.pixel_size&&32!==e.pixel_size&&console.error('TGALoader.parse.tgaCheckHeader: Invalid pixel size "'+e.pixel_size+'"')}(S),S.id_length+x>e.length&&console.error("TGALoader.parse: No data"),x+=S.id_length;var y=!1,w=!1,T=!1;switch(S.image_type){case l:y=!0,w=!0;break;case h:w=!0;break;case d:y=!0;break;case u:break;case p:y=!0,T=!0;break;case c:T=!0}var b=document.createElement("canvas");b.width=S.width,b.height=S.height;var A=b.getContext("2d"),C=A.createImageData(S.width,S.height),N=function(e,t,i,n,r){var a,s,o,h;if(s=i.pixel_size>>3,o=i.width*i.height*s,t&&(h=r.subarray(n,n+=i.colormap_length*(i.colormap_size>>3))),e){a=new Uint8Array(o);for(var u,c,l,d=0,p=new Uint8Array(s);d<o;)if(u=r[n++],c=1+(127&u),128&u){for(l=0;l<s;++l)p[l]=r[n++];for(l=0;l<c;++l)a.set(p,d+l*s);d+=s*c}else{for(c*=s,l=0;l<c;++l)a[d+l]=r[n++];d+=c}}else a=r.subarray(n,n+=t?i.width*i.height:o);return{pixel_data:a,palettes:h}}(y,w,S,x,M);return function(e,o,h,u,c){var l,d,p,M,x,y;switch((S.flags&f)>>_){default:case g:l=0,p=1,x=o,d=0,M=1,y=h;break;case v:l=0,p=1,x=o,d=h-1,M=-1,y=-1;break;case E:l=o-1,p=-1,x=-1,d=0,M=1,y=h;break;case m:l=o-1,p=-1,x=-1,d=h-1,M=-1,y=-1}if(T)switch(S.pixel_size){case 8:a(e,d,M,y,l,p,x,u);break;case 16:s(e,d,M,y,l,p,x,u);break;default:console.error("TGALoader.parse.getTgaRGBA: not support this format")}else switch(S.pixel_size){case 8:t(e,d,M,y,l,p,x,u,c);break;case 16:i(e,d,M,y,l,p,x,u);break;case 24:n(e,d,M,y,l,p,x,u);break;case 32:r(e,d,M,y,l,p,x,u);break;default:console.error("TGALoader.parse.getTgaRGBA: not support this format")}}(C.data,S.width,S.height,N.pixel_data,N.palettes),A.putImageData(C,0,0),b}}),P.prototype=Object.assign(Object.create(b.prototype),{constructor:P,copy:function(e){return b.prototype.copy.call(this,e),this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this},updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}}),P.fromImage=function(e){var t=new P;return t.image=e,t.version++,t},P.fromSrc=function(e){var t=new P,i=e.search(/\.(jpg|jpeg)$/)>0||0===e.search(/^data\:image\/jpeg/);return(e.search(/\.(tga)$/)>0||0===e.search(/^data\:image\/tga/)?new L:new C).load(e,function(e){t.format=i?oi.RGB:oi.RGBA,t.image=e,t.version++,t.dispatchEvent({type:"onload"})}),t},R.prototype=Object.assign(Object.create(b.prototype),{constructor:R,copy:function(e){return b.prototype.copy.call(this,e),this.images=e.images.slice(0),this}}),R.fromImage=function(e){for(var t=new R,i=t.images,n=0;n<6;n++)i[n]=e[n];return t.version++,t},R.fromSrc=function(e){function t(n){n&&(r.push(n),h++),h>=6?i():(o?new L:new C).load(e[h],t)}function i(){n.format=s?oi.RGB:oi.RGBA,n.version++,n.dispatchEvent({type:"onload"})}var n=new R,r=n.images,a=e[0],s=a.search(/\.(jpg|jpeg)$/)>0||0===a.search(/^data\:image\/jpeg/),o=a.search(/\.(tga)$/)>0||0===a.search(/^data\:image\/tga/),h=0;return t(),n},O.prototype=Object.assign(Object.create(b.prototype),{constructor:O});var xi=0;Object.assign(F.prototype,{onBeforeRender:function(){},onAfterRender:function(){},add:function(e){this.children.push(e),e.parent=this},remove:function(e){var t=this.children.indexOf(e);-1!==t&&this.children.splice(t,1),e.parent=null},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var i=0,n=this.children.length;i<n;i++){var r=this.children[i].getObjectByProperty(e,t);if(void 0!==r)return r}},updateMatrix:function(){var e=this.matrix.transform(this.position,this.scale,this.quaternion);if(this.worldMatrix.copy(e),this.parent){var t=this.parent.worldMatrix;this.worldMatrix.premultiply(t)}for(var i=this.children,n=0,r=i.length;n<r;n++)i[n].updateMatrix()},getWorldDirection:function(){var e=new o,t=new v,i=new o;return function(n){var r=n||new o;return this.worldMatrix.decompose(e,t,i),r.set(0,0,1).applyQuaternion(t),r}}(),lookAt:function(){var e=new s;return function(t,i){e.lookAtRH(t,this.position,i),this.quaternion.setFromRotationMatrix(e)}}(),raycast:function(e,t){},traverse:function(e){e(this);for(var t=this.children,i=0,n=t.length;i<n;i++)t[i].traverse(e)},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.type=e.type,this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.worldMatrix.copy(e.worldMatrix),this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var i=0;i<e.children.length;i++){var n=e.children[i];this.add(n.clone())}return this}}),(D.prototype=Object.create(F.prototype)).constructor=D,Object.assign(U.prototype,{updateBones:function(){var e=new s;return function(){for(var t=0;t<this.bones.length;t++){var i=this.bones[t];e.multiplyMatrices(i.worldMatrix,i.offsetMatrix),e.toArray(this.boneMatrices,16*t)}void 0!==this.boneTexture&&this.boneTexture.version++}}(),getBoneByName:function(e){for(var t=0,i=this.bones.length;t<i;t++){var n=this.bones[t];if(n.name===e)return n}}}),Object.assign(G.prototype,{parseBinding:function(e,t){if((t=t.split(".")).length>1){for(var i=e[t[0]],n=1;n<t.length-1;n++)i=i[t[n]];this.property=t[t.length-1],this.target=i}else this.property=t[0],this.target=e},accumulate:function(e){var t=this.buffer,i=this.valueSize,n=i,r=this.cumulativeWeight;if(0===r){for(var a=0;a!==i;++a)t[n+a]=t[a];r=e}else{var s=e/(r+=e);this._mixBufferFunction(t,n,0,s,i)}this.cumulativeWeight=r},apply:function(){var e=this.buffer,t=this.valueSize;this.cumulativeWeight;this.cumulativeWeight=0,this.valueSize>1?this.target[this.property].fromArray(e,t):this.target[this.property]=e[t]}}),Object.assign(H.prototype,{add:function(e){if(void 0===this._clips[e.name]){for(var t=e.tracks,i=0;i<t.length;i++){var n,r=t[i],a=r.name;this._bindings[a]?n=this._bindings[a]:(n=new G(r.target,r.propertyPath,r.valueTypeName,r.valueSize),this._bindings[a]=n),n.referenceCount++}this._clips[e.name]=e}else console.warn("AnimationMixer.add: already has clip: "+e.name)},remove:function(e){if(this._clips[e.name]){for(var t=e.tracks,i=0;i<t.length;i++){var n=t[i].name,r=this._bindings[n];r&&r.referenceCount--,r.referenceCount<=0&&delete this._bindings[n]}delete this._clips[e.name]}else console.warn("AnimationMixer.remove: has no clip: "+e.name)},play:function(e,t){if(void 0===this._activeClips[e]){this._activeClips[e]=void 0===t?1:t;var i=this._clips[e];if(i){i.frame=0;for(var n=i.tracks,r=0;r<n.length;r++){var a=n[r].name,s=this._bindings[a];s&&s.useCount++}}else console.warn("AnimationMixer.stop: clip "+e+" is not found.")}else console.warn("AnimationMixer.play: clip "+e+" is playing.")},stop:function(e){if(void 0!==this._activeClips[e]){delete this._activeClips[e];var t=this._clips[e];if(t)for(var i=t.tracks,n=0;n<i.length;n++){var r=i[n].name,a=this._bindings[r];a&&a.useCount>0&&a.useCount--}else console.warn("AnimationMixer.stop: clip "+e+" is not found.")}else console.warn("AnimationMixer.stop: clip "+e+" is not playing.")},update:function(e){for(var t in this._activeClips){var i=this._clips[t],n=this._activeClips[t];i.update(e,this._bindings,n)}for(var r in this._bindings)this._bindings[r].useCount>0&&this._bindings[r].apply()},setClipWeight:function(e,t){void 0!==this._activeClips[e]?this._activeClips[e]=t:console.warn("AnimationMixer.stop: clip "+e+" is not playing.")},getAllClipNames:function(){var e=[];for(var t in this._clips)e.push(t);return e}}),Object.assign(k.prototype,{_getLastTimeIndex:function(e){var t,i=0,n=this.times.length;for(t=0;t<n;t++)e>=this.times[t]&&(i=t);return i},getValue:function(e,t){for(var i,n,r=this._getLastTimeIndex(e),a=this.times,s=this.values,o=this.valueSize,h=a[r],u=a[r+1],c=0;c<o;c++)if(i=s[r*o+c],n=s[(r+1)*o+c],this.interpolant)if(void 0!==i&&void 0!==n){var l=(e-h)/(u-h);t[c]=i*(1-l)+n*l}else t[c]=i;else t[c]=i}}),V.prototype=Object.assign(Object.create(k.prototype),{constructor:V,valueTypeName:"bool",getValue:function(e,t){var i=this._getLastTimeIndex(e),n=this.times[i];t[0]=this.values[n]}}),j.prototype=Object.assign(Object.create(k.prototype),{constructor:j,valueTypeName:"color"}),Object.assign(X.prototype,{update:function(e,t,i){this.frame+=e,this.frame>this.endFrame&&(this.loop?this.frame=this.startFrame:this.frame=this.endFrame);for(var n=0,r=this.tracks.length;n<r;n++){var a=this.tracks[n],s=t[a.name];a.getValue(this.frame,s.buffer),s.accumulate(i)}}}),W.prototype=Object.assign(Object.create(k.prototype),{constructor:W,valueTypeName:"number"}),Y.prototype=Object.assign(Object.create(k.prototype),{constructor:Y,valueTypeName:"quaternion",getValue:function(e,t){var i=this._getLastTimeIndex(e),n=this.times,r=this.values,a=n[i],s=n[i+1],o=0;if(this.interpolant)if(void 0!==s){var h=(e-a)/(s-a);v.slerpFlat(t,0,r,4*i,r,4*(i+1),h)}else for(o=0;o<4;o++)t[o]=r[4*i+o];else for(o=0;o<4;o++)t[o]=r[4*i+o]}}),q.prototype=Object.assign(Object.create(k.prototype),{constructor:q,valueTypeName:"string",getValue:function(e,t){var i=this._getLastTimeIndex(e),n=this.times[i];t[0]=this.values[n]}}),Z.prototype=Object.assign(Object.create(k.prototype),{constructor:Z,valueTypeName:"vector"}),Object.assign(K.prototype,{setArray:function(e){this.count=void 0!==e?e.length/this.size:0,this.array=e}});var Si=1;Q.prototype=Object.assign(Object.create(a.prototype),{constructor:Q,addAttribute:function(e,t){this.attributes[e]=t},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){delete this.attributes[e]},setIndex:function(e){Array.isArray(e)?this.index=new K(new Uint16Array(e),1):this.index=e},addGroup:function(e,t,i){this.groups.push({start:e,count:t,materialIndex:void 0!==i?i:0})},clearGroups:function(){this.groups=[]},computeBoundingBox:function(){var e=this.attributes.a_Position||this.attributes.position;if(e.isInterleavedBufferAttribute){var t=e.data;this.boundingBox.setFromArray(t.array,t.stride)}else this.boundingBox.setFromArray(e.array,e.size)},computeBoundingSphere:function(){var e=this.attributes.a_Position||this.attributes.position;if(e.isInterleavedBufferAttribute){var t=e.data;this.boundingSphere.setFromArray(t.array,t.stride)}else this.boundingSphere.setFromArray(e.array,e.size)},dispose:function(){this.dispatchEvent({type:"dispose"})}}),J.prototype=Object.assign(Object.create(Q.prototype),{constructor:J,buildGeometry:function(e,t,i,n,r,a){function s(e,t,i,n,r,a,s,_,v,m,g){var E,M,x=a/v,S=s/m,y=a/2,w=s/2,T=_/2,b=v+1,A=m+1,C=0,N=0,L=new o;for(M=0;M<A;M++){var P=M*S-w;for(E=0;E<b;E++){var R=E*x-y;L[e]=R*n,L[t]=P*r,L[i]=T,c.push(L.x,L.y,L.z),L[e]=0,L[t]=0,L[i]=_>0?1:-1,l.push(L.x,L.y,L.z),d.push(E/v),d.push(1-M/m),C+=1}}for(M=0;M<m;M++)for(E=0;E<v;E++){var O=p+E+b*M,F=p+E+b*(M+1),D=p+(E+1)+b*(M+1),U=p+(E+1)+b*M;u.push(O,F,U),u.push(F,D,U),N+=6}h.addGroup(f,N,g),f+=N,p+=C}var h=this;e=e||1,t=t||1,i=i||1,n=Math.floor(n)||1,r=Math.floor(r)||1;var u=[],c=[],l=[],d=[],p=0,f=0;s("z","y","x",-1,-1,i,t,e,a=Math.floor(a)||1,r,0),s("z","y","x",1,-1,i,t,-e,a,r,1),s("x","z","y",1,1,e,i,t,n,a,2),s("x","z","y",1,-1,e,i,-t,n,a,3),s("x","y","z",1,-1,e,t,i,n,r,4),s("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(u),this.addAttribute("a_Position",new K(new Float32Array(c),3)),this.addAttribute("a_Normal",new K(new Float32Array(l),3)),this.addAttribute("a_Uv",new K(new Float32Array(d),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),$.prototype=Object.assign(Object.create(Q.prototype),{constructor:$,buildGeometry:function(e,t,i,n,r,a,s,h){function u(i){var r,a,u,m=new p,M=new o,x=0,S=!0===i?e:t,y=!0===i?1:-1;for(a=v,r=1;r<=n;r++)d.push(0,g*y,0),f.push(0,y,0),_.push(.5,.5),v++;for(u=v,r=0;r<=n;r++){var w=r/n*h+s,T=Math.cos(w),b=Math.sin(w);M.x=S*b,M.y=g*y,M.z=S*T,d.push(M.x,M.y,M.z),f.push(0,y,0),m.x=.5*T+.5,m.y=.5*b*y+.5,_.push(m.x,m.y),v++}for(r=0;r<n;r++){var A=a+r,C=u+r;!0===i?l.push(C,C+1,A):l.push(C+1,C,A),x+=3}c.addGroup(E,x,!0===i?1:2),E+=x}var c=this;e=void 0!==e?e:1,t=void 0!==t?t:1,i=i||1,n=Math.floor(n)||8,r=Math.floor(r)||1,a=void 0!==a&&a,s=void 0!==s?s:0,h=void 0!==h?h:2*Math.PI;var l=[],d=[],f=[],_=[],v=0,m=[],g=i/2,E=0;!function(){var a,u,p=new o,M=new o,x=0,S=(t-e)/i;for(u=0;u<=r;u++){var y=[],w=u/r,T=w*(t-e)+e;for(a=0;a<=n;a++){var b=a/n,A=b*h+s,C=Math.sin(A),N=Math.cos(A);M.x=T*C,M.y=-w*i+g,M.z=T*N,d.push(M.x,M.y,M.z),p.set(C,S,N).normalize(),f.push(p.x,p.y,p.z),_.push(b,1-w),y.push(v++)}m.push(y)}for(a=0;a<n;a++)for(u=0;u<r;u++){var L=m[u][a],P=m[u+1][a],R=m[u+1][a+1],O=m[u][a+1];l.push(L,P,O),l.push(P,R,O),x+=6}c.addGroup(E,x,0),E+=x}(),!1===a&&(e>0&&u(!0),t>0&&u(!1)),this.setIndex(l),this.addAttribute("a_Position",new K(new Float32Array(d),3)),this.addAttribute("a_Normal",new K(new Float32Array(f),3)),this.addAttribute("a_Uv",new K(new Float32Array(_),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),ee.prototype=Object.assign(Object.create(K.prototype),{constructor:ee,isInstancedBufferAttribute:!0}),te.prototype=Object.assign(Object.create(Q.prototype),{constructor:te,isInstancedGeometry:!0}),Object.assign(ie.prototype,{setArray:function(e){this.count=void 0!==e?e.length/this.stride:0,this.array=e}}),ne.prototype=Object.assign(Object.create(ie.prototype),{constructor:ne,isInstancedInterleavedBuffer:!0}),re.prototype.isInterleavedBufferAttribute=!0,Object.defineProperties(re.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),ae.prototype=Object.assign(Object.create(Q.prototype),{constructor:ae,buildGeometry:function(e,t,i,n){var r,a,s=(e=e||1)/2,o=(t=t||1)/2,h=Math.floor(i)||1,u=Math.floor(n)||1,c=h+1,l=u+1,d=e/h,p=t/u,f=[],_=[],v=[],m=[];for(a=0;a<l;a++){var g=a*p-o;for(r=0;r<c;r++){var E=r*d-s;_.push(E,0,g),v.push(0,1,0),m.push(r/h),m.push(1-a/u)}}for(a=0;a<u;a++)for(r=0;r<h;r++){var M=r+c*a,x=r+c*(a+1),S=r+1+c*(a+1),y=r+1+c*a;f.push(M,x,y),f.push(x,S,y)}this.setIndex(f),this.addAttribute("a_Position",new K(new Float32Array(_),3)),this.addAttribute("a_Normal",new K(new Float32Array(v),3)),this.addAttribute("a_Uv",new K(new Float32Array(m),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),se.prototype=Object.assign(Object.create(Q.prototype),{constructor:se,buildGeometry:function(e,t,i,n,r,a,s){e=e||1,t=Math.max(3,Math.floor(t)||8),i=Math.max(2,Math.floor(i)||6),n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI;var h,u,c=(a=void 0!==a?a:0)+(s=void 0!==s?s:Math.PI),l=0,d=[],p=new o,f=new o,_=[],v=[],m=[],g=[];for(u=0;u<=i;u++){var E=[],M=u/i;for(h=0;h<=t;h++){var x=h/t;p.x=-e*Math.cos(n+x*r)*Math.sin(a+M*s),p.y=e*Math.cos(a+M*s),p.z=e*Math.sin(n+x*r)*Math.sin(a+M*s),v.push(p.x,p.y,p.z),f.set(p.x,p.y,p.z).normalize(),m.push(f.x,f.y,f.z),g.push(x,1-M),E.push(l++)}d.push(E)}for(u=0;u<i;u++)for(h=0;h<t;h++){var S=d[u][h+1],y=d[u][h],w=d[u+1][h],T=d[u+1][h+1];(0!==u||a>0)&&_.push(S,y,T),(u!==i-1||c<Math.PI)&&_.push(y,w,T)}this.setIndex(_),this.addAttribute("a_Position",new K(new Float32Array(v),3)),this.addAttribute("a_Normal",new K(new Float32Array(m),3)),this.addAttribute("a_Uv",new K(new Float32Array(g),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),(oe.prototype=Object.create(Q.prototype)).constructor=oe;var yi=0;he.prototype=Object.assign(Object.create(a.prototype),{constructor:he,copy:function(e){return this.type=e.type,this.opacity=e.opacity,this.transparent=e.transparent,this.premultipliedAlpha=e.premultipliedAlpha,this.vertexColors=e.vertexColors,this.diffuse.copy(e.diffuse),this.diffuseMap=e.diffuseMap,this.normalMap=e.normalMap,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.envMapCombine=e.envMapCombine,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.blending=e.blending,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.alphaTest=e.alphaTest,this.side=e.side,this.shading=e.shading,this.acceptLight=e.acceptLight,this.drawMode=e.drawMode,this},clone:function(){return(new this.constructor).copy(this)},dispose:function(){this.dispatchEvent({type:"dispose"})}}),(ue.prototype=Object.create(he.prototype)).constructor=ue,(ce.prototype=Object.create(he.prototype)).constructor=ce,le.prototype=Object.assign(Object.create(he.prototype),{constructor:le,copy:function(e){return he.prototype.copy.call(this,e),this.shininess=e.shininess,this.specular.copy(e.specular),this.specularMap=e.specularMap,this}}),de.prototype=Object.assign(Object.create(he.prototype),{constructor:de,copy:function(e){return he.prototype.copy.call(this,e),this.roughness=e.roughness,this.metalness=e.metalness,this}}),pe.prototype=Object.assign(Object.create(he.prototype),{constructor:pe,copy:function(e){return he.prototype.copy.call(this,e),this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}),fe.prototype=Object.assign(Object.create(he.prototype),{constructor:fe,copy:function(e){return he.prototype.copy.call(this,e),this.lineWidth=e.lineWidth,this}}),_e.prototype=Object.assign(Object.create(he.prototype),{constructor:_e,copy:function(e){return he.prototype.copy.call(this,e),this.lineWidth=e.lineWidth,this}}),ve.prototype=Object.assign(Object.create(he.prototype),{constructor:ve,copy:function(e){return he.prototype.copy.call(this,e),this.lineWidth=e.lineWidth,this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}),me.prototype=Object.assign(Object.create(he.prototype),{constructor:me,copy:function(e){return he.prototype.copy.call(this,e),this.vertexShader=e.vertexShader,this.fragmentShader=e.fragmentShader,this}}),ge.prototype=Object.create(he.prototype),ge.prototype.constructor=ge,Ee.prototype=Object.create(he.prototype),Ee.prototype.constructor=Ee,Object.assign(Te.prototype,{setBlend:function(e,t,i,n,r,a,s,o){var h=this.gl;e!==ei.NONE?this.enable(h.BLEND):this.disable(h.BLEND),e!==ei.CUSTOM?(e===this.currentBlending&&o===this.currentPremultipliedAlpha||(e===ei.NORMAL&&(o?(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.ONE,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA)):(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.SRC_ALPHA,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA))),e===ei.ADD&&(o?(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.ONE,h.ONE,h.ONE,h.ONE)):(h.blendEquation(h.FUNC_ADD),h.blendFunc(h.SRC_ALPHA,h.ONE)))),this.currentBlendEquation=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendEquationAlpha=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null):(r=r||t,a=a||i,s=s||n,t===this.currentBlendEquation&&r===this.currentBlendEquationAlpha||(h.blendEquationSeparate(t,r),this.currentBlendEquation=t,this.currentBlendEquationAlpha=r),i===this.currentBlendSrc&&n===this.currentBlendDst&&a===this.currentBlendSrcAlpha&&s===this.currentBlendDstAlpha||(h.blendFuncSeparate(i,n,a,s),this.currentBlendSrc=i,this.currentBlendDst=n,this.currentBlendSrcAlpha=a,this.currentBlendDstAlpha=s)),this.currentBlending=e,this.currentPremultipliedAlpha=o},setFlipSided:function(e){var t=this.gl;this.currentFlipSided!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e)},setCullFace:function(e){var t=this.gl;e!==ni.NONE?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===ni.BACK?t.cullFace(t.BACK):e===ni.FRONT?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e},viewport:function(e,t,i,n){var r=this.currentViewport;r.x===e&&r.y===t&&r.z===i&&r.w===n||(this.gl.viewport(e,t,i,n),r.set(e,t,i,n))},activeTexture:function(e){var t=this.gl;void 0===e&&(e=t.TEXTURE0+this.capabilities.maxTextures-1),this.currentTextureSlot!==e&&(t.activeTexture(e),this.currentTextureSlot=e)},bindTexture:function(e,t){var i=this.gl;null===this.currentTextureSlot&&this.activeTexture();var n=this.currentBoundTextures[this.currentTextureSlot];void 0===n&&(n={type:void 0,texture:void 0},this.currentBoundTextures[this.currentTextureSlot]=n),n.type===e&&n.texture===t||(i.bindTexture(e,t||this.emptyTextures[e]),n.type=e,n.texture=t)},bindBuffer:function(e,t){var i=this.gl;this.currentBoundBuffers[e]!==t&&(i.bindBuffer(e,t),this.currentBoundBuffers[e]=t)},enable:function(e){!0!==this.states[e]&&(this.gl.enable(e),this.states[e]=!0)},disable:function(e){!1!==this.states[e]&&(this.gl.disable(e),this.states[e]=!1)},setLineWidth:function(e){if(e!==this.currentLineWidth){var t=this.capabilities.lineWidthRange;t[0]<=e&&e<=t[1]?this.gl.lineWidth(e):console.warn("GL_ALIASED_LINE_WIDTH_RANGE is ["+t[0]+","+t[1]+"], but set to "+e+"."),this.currentLineWidth=e}},setPolygonOffset:function(e,t,i){var n=this.gl;e?(this.enable(n.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===t&&this.currentPolygonOffsetUnits===i||(n.polygonOffset(t,i),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=i)):this.disable(n.POLYGON_OFFSET_FILL)},setProgram:function(e){this.currentProgram!==e&&(this.gl.useProgram(e.program),this.currentProgram=e)}}),Object.assign(be.prototype,{get:function(e){var t=this.properties.get(e);return void 0===t&&(t={},this.properties.set(e,t)),t},delete:function(e){this.properties.delete(e)},clear:function(){this.properties=new WeakMap}}),Object.assign(Oe.prototype,{setTexture2D:function(e,t){var i=this.gl,n=this.state,r=this.capabilities;void 0!==t&&(t=i.TEXTURE0+t);var a=this.properties.get(e);if(e.image&&(!e.image.rtt||void 0===t)&&a.__version!==e.version){void 0===a.__webglTexture&&(e.addEventListener("dispose",this.onTextureDispose,this),a.__webglTexture=i.createTexture()),n.activeTexture(t),n.bindTexture(i.TEXTURE_2D,a.__webglTexture);var s=e.image,o=s instanceof HTMLImageElement||s instanceof HTMLCanvasElement;o&&(s=Pe(s,r.maxTextureSize),Ae(e)&&!1===Ne(s)&&r.version<2&&(s=Le(s)));var h=!Ne(s)&&r.version<2;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,e.flipY),this.setTextureParameters(e,h);var u,c=e.mipmaps,l=e.format,d=e.internalformat||e.format,p=e.type;if(r.version<2?(l!==d&&console.warn("texture format "+l+" not same as internalformat "+d+" in webgl 1.0."),p===hi.HALF_FLOAT&&(r.getExtension("OES_texture_half_float")||console.warn("extension OES_texture_half_float is not support in webgl 1.0.")),p===hi.FLOAT&&(r.getExtension("OES_texture_float")||console.warn("extension OES_texture_float is not support in webgl 1.0.")),l!==oi.DEPTH_COMPONENT&&l!==oi.DEPTH_STENCIL||r.getExtension("WEBGL_depth_texture")||console.warn("extension WEBGL_depth_texture is not support in webgl 1.0.")):p===hi.HALF_FLOAT&&(p=5131),o)if(c.length>0&&!h){for(var f=0,_=c.length;f<_;f++)u=c[f],i.texImage2D(i.TEXTURE_2D,f,d,l,p,u);e.generateMipmaps=!1}else i.texImage2D(i.TEXTURE_2D,0,d,l,p,s);else if(c.length>0&&!h){for(var f=0,_=c.length;f<_;f++)u=c[f],i.texImage2D(i.TEXTURE_2D,f,d,u.width,u.height,e.border,l,p,u.data);e.generateMipmaps=!1}else i.texImage2D(i.TEXTURE_2D,0,d,s.width,s.height,e.border,l,p,s.data);return e.generateMipmaps&&!h&&i.generateMipmap(i.TEXTURE_2D),a.__version=e.version,a}return n.activeTexture(t),n.bindTexture(i.TEXTURE_2D,a.__webglTexture),a},setTextureCube:function(e,t){var i=this.gl,n=this.state,r=this.capabilities;void 0!==t&&(t=i.TEXTURE0+t);var a=this.properties.get(e);if(6===e.images.length&&(!e.images[0].rtt||void 0===t)&&a.__version!==e.version){void 0===a.__webglTexture&&(e.addEventListener("dispose",this.onTextureDispose,this),a.__webglTexture=i.createTexture()),n.activeTexture(t),n.bindTexture(i.TEXTURE_CUBE_MAP,a.__webglTexture);var s=[],o=e.format,h=e.internalformat||e.format,u=e.type;r.version<2?(o!==h&&console.warn("texture format "+o+" not same as internalformat "+h+" in webgl 1.0."),u===hi.HALF_FLOAT&&(r.getExtension("OES_texture_half_float")||console.warn("extension OES_texture_half_float is not support in webgl 1.0.")),u===hi.FLOAT&&(r.getExtension("OES_texture_float")||console.warn("extension OES_texture_float is not support in webgl 1.0.")),o!==oi.DEPTH_COMPONENT&&o!==oi.DEPTH_STENCIL||r.getExtension("WEBGL_depth_texture")||console.warn("extension WEBGL_depth_texture is not support in webgl 1.0.")):u===hi.HALF_FLOAT&&(u=5131);for(var c=!1,l=0;l<6;l++)(p=(d=e.images[l])instanceof HTMLImageElement||d instanceof HTMLCanvasElement)&&(d=Pe(d,r.maxTextureSize),Ae(e)&&!1===Ne(d)&&r.version<2&&(d=Le(d))),!Ne(d)&&r.version<2&&(c=!0),s[l]=d,d.__isElement=p;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,e.flipY),this.setTextureParameters(e,c);for(l=0;l<6;l++){var d=s[l],p=d.__isElement;p?i.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,h,o,u,d):i.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,h,d.width,d.height,e.border,o,u,d.data)}return e.generateMipmaps&&!c&&i.generateMipmap(i.TEXTURE_CUBE_MAP),a.__version=e.version,a}return n.activeTexture(t),n.bindTexture(i.TEXTURE_CUBE_MAP,a.__webglTexture),a},setTexture3D:function(e,t){var i=this.gl,n=this.state;if(!(this.capabilities.version<2)){void 0!==t&&(t=i.TEXTURE0+t);var r=this.properties.get(e);if(e.image&&r.__version!==e.version){void 0===r.__webglTexture&&(e.addEventListener("dispose",this.onTextureDispose,this),r.__webglTexture=i.createTexture()),n.activeTexture(t),n.bindTexture(i.TEXTURE_3D,r.__webglTexture);var a=e.image;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,e.flipY),this.setTextureParameters(e,!1);var s=e.format,o=e.internalformat||e.format,h=e.type;return i.texImage3D(i.TEXTURE_3D,0,o,a.width,a.height,a.depth,e.border,s,h,a.data),e.generateMipmaps&&i.generateMipmap(i.TEXTURE_3D),r.__version=e.version,r}return n.activeTexture(t),n.bindTexture(i.TEXTURE_3D,r.__webglTexture),r}console.warn("Try to use Texture3D but browser not support WebGL2.0")},setTextureParameters:function(e,t){var i=this.gl,n=this.capabilities,r=e.textureType,a=Re(e,t);i.texParameteri(r,i.TEXTURE_WRAP_S,a[0]),i.texParameteri(r,i.TEXTURE_WRAP_T,a[1]),i.texParameteri(r,i.TEXTURE_MAG_FILTER,a[2]),i.texParameteri(r,i.TEXTURE_MIN_FILTER,a[3]);var s=n.anisotropyExt;s&&i.texParameterf(r,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a[4],n.maxAnisotropy)),n.version>=2&&(void 0!==a[5]?(i.texParameteri(r,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(r,i.TEXTURE_COMPARE_FUNC,a[5])):i.texParameteri(r,i.TEXTURE_COMPARE_MODE,i.NONE))},onTextureDispose:function(e){var t=this.gl,i=e.target,n=this.properties.get(i);i.removeEventListener("dispose",this.onTextureDispose,this),n.__webglTexture&&t.deleteTexture(n.__webglTexture),this.properties.delete(i)}}),Object.assign(ze.prototype,{setGeometry:function(e){var t=this.gl,i=this.properties,n=this.properties.get(e);n.created||(e.addEventListener("dispose",this.onGeometryDispose,this),n.created=!0,n._vaos={}),null!==e.index&&Ue(t,i,e.index,t.ELEMENT_ARRAY_BUFFER);for(var r in e.attributes)Ue(t,i,e.attributes[r],t.ARRAY_BUFFER);return n},onGeometryDispose:function(e){var t=this.gl,i=e.target,n=this.properties.get(i);i.removeEventListener("dispose",this.onGeometryDispose,this),null!==i.index&&Ie(t,properties,i.index);for(var r in i.attributes)Ie(t,properties,i.attributes[r]);for(var a in n._vaos){var s=n[a];s&&(this.capabilities.version>=2?t.deleteVertexArray(s):t.deleteVertexArrayOES(s))}n._vaos={},n.created=!1,this.properties.delete(i)}}),Xe.prototype.set=function(e){for(var t=this.seq,i=0,n=t.length;i!==n;++i){var r=t[i];r.set(e[r.id])}};var wi=/([\w\d_]+)(\])?(\[|\.)?/g;qe.prototype.set=function(e,t){var i=this.map[e];void 0!==i&&i.set(t)},qe.prototype.has=function(e){return!!this.map[e]},Object.assign(Ze.prototype,{initCount:function(e){switch(this.type){case pi.FLOAT:case pi.BYTE:case pi.UNSIGNED_BYTE:case pi.UNSIGNED_SHORT:this.count=1;break;case pi.FLOAT_VEC2:this.count=2;break;case pi.FLOAT_VEC3:this.count=3;break;case pi.FLOAT_VEC4:this.count=4}},initFormat:function(e){switch(this.type){case pi.FLOAT:case pi.FLOAT_VEC2:case pi.FLOAT_VEC3:case pi.FLOAT_VEC4:this.format=e.FLOAT;break;case pi.UNSIGNED_BYTE:this.format=e.UNSIGNED_BYTE;break;case pi.UNSIGNED_SHORT:this.format=e.UNSIGNED_SHORT;break;case pi.BYTE:this.format=e.BYTE}}});var Ti=0;et.prototype.dispose=function(){this.gl.deleteProgram(this.program),this.program=void 0};var bi={alphaTest_frag:"#ifdef ALPHATEST\n\tif ( outColor.a < ALPHATEST ) discard;\n#endif",ambientlight_pars_frag:"uniform vec4 u_AmbientLightColor;",aoMap_pars_frag:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_frag:"vec4 outColor = vec4(u_Color, u_Opacity);",begin_vert:"vec3 transformed = vec3(a_Position);\n#if defined(USE_NORMAL) || defined(USE_ENV_MAP)\n    vec3 objectNormal = vec3(a_Normal);\n#endif",bsdfs:"\nvec4 BRDF_Diffuse_Lambert(vec4 diffuseColor) {\n    return RECIPROCAL_PI * diffuseColor;\n}\nvec4 F_Schlick( const in vec4 specularColor, const in float dotLH ) {\n\tfloat fresnel = pow( 1.0 - dotLH, 5.0 );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nvec4 BRDF_Specular_BlinnPhong(vec4 specularColor, vec3 N, vec3 L, vec3 V, float shininess) {\n    vec3 H = normalize(L + V);\n    float dotNH = saturate(dot(N, H));\n    float dotLH = saturate(dot(L, H));\n    vec4 F = F_Schlick(specularColor, dotLH);\n    float G = G_BlinnPhong_Implicit( );\n    float D = D_BlinnPhong(shininess, dotNH);\n    return F * G * D;\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nvec4 BRDF_Specular_GGX(vec4 specularColor, vec3 N, vec3 L, vec3 V, float roughness) {\n\tfloat alpha = pow2( roughness );\n\tvec3 H = normalize(L + V);\n\tfloat dotNL = saturate( dot(N, L) );\n\tfloat dotNV = saturate( dot(N, V) );\n\tfloat dotNH = saturate( dot(N, H) );\n\tfloat dotLH = saturate( dot(L, H) );\n\tvec4 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * G * D;\n}\nvec4 BRDF_Specular_GGX_Environment( const in vec3 N, const in vec3 V, const in vec4 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( N, V ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}",bumpMap_pars_frag:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd(vec2 uv) {\n\t\tvec2 dSTdx = dFdx( uv );\n\t\tvec2 dSTdy = dFdy( uv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, uv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, uv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, uv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",clippingPlanes_frag:"#if NUM_CLIPPING_PLANES > 0\n    vec4 plane;\n    #pragma unroll_loop\n    for ( int i = 0; i < NUM_CLIPPING_PLANES; i ++ ) {\n        plane = clippingPlanes[ i ];\n        if ( dot( -v_modelPos, plane.xyz ) > plane.w ) discard;\n    }\n#endif",clippingPlanes_pars_frag:"#if NUM_CLIPPING_PLANES > 0\n    uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",color_frag:"#ifdef USE_VCOLOR\n    outColor *= v_Color;\n#endif",color_pars_frag:"#ifdef USE_VCOLOR\n    varying vec4 v_Color;\n#endif",color_pars_vert:"#ifdef USE_VCOLOR\n    attribute vec4 a_Color;\n    varying vec4 v_Color;\n#endif",color_vert:"#ifdef USE_VCOLOR\n    v_Color = a_Color;\n#endif",common_frag:"uniform mat4 u_View;\nuniform float u_Opacity;\nuniform vec3 u_Color;\nuniform vec3 u_CameraPosition;",common_vert:"attribute vec3 a_Position;\nattribute vec3 a_Normal;\n#include <transpose>\n#include <inverse>\nuniform mat4 u_Projection;\nuniform mat4 u_View;\nuniform mat4 u_Model;\nuniform vec3 u_CameraPosition;",diffuseMap_frag:"#ifdef USE_DIFFUSE_MAP\n    vec4 texelColor = texture2D( diffuseMap, v_Uv );\n    texelColor = mapTexelToLinear( texelColor );\n    outColor *= texelColor;\n#endif",diffuseMap_pars_frag:"#ifdef USE_DIFFUSE_MAP\n    uniform sampler2D diffuseMap;\n#endif",directlight_pars_frag:"struct DirectLight\n{\n    vec3 direction;\n    vec4 color;\n    int shadow;\n    float shadowBias;\n    float shadowRadius;\n    vec2 shadowMapSize;\n};\nuniform DirectLight u_Directional[NUM_DIR_LIGHTS];",emissiveMap_frag:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D(emissiveMap, v_Uv);\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissiveMap_pars_frag:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_frag:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_frag:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",end_frag:"gl_FragColor = outColor;",envMap_frag:"#ifdef USE_ENV_MAP\n    vec3 envDir;\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        envDir = reflect(normalize(v_worldPos - u_CameraPosition), N);\n    #else\n        envDir = v_EnvPos;\n    #endif\n    vec4 envColor = textureCube(envMap, envDir);\n    envColor = envMapTexelToLinear( envColor );\n    #ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutColor = mix(outColor, envColor * outColor, u_EnvMap_Intensity);\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutColor = mix(outColor, envColor, u_EnvMap_Intensity);\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutColor += envColor * u_EnvMap_Intensity;\n\t#endif\n#endif",envMap_pars_frag:"#ifdef USE_ENV_MAP\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        varying vec3 v_worldPos;\n    #else\n        varying vec3 v_EnvPos;\n    #endif\n    uniform samplerCube envMap;\n    uniform float u_EnvMap_Intensity;\n#endif",envMap_pars_vert:"#ifdef USE_ENV_MAP\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        varying vec3 v_worldPos;\n    #else\n        varying vec3 v_EnvPos;\n    #endif\n#endif",envMap_vert:"#ifdef USE_ENV_MAP\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        v_worldPos = (u_Model * vec4(transformed, 1.0)).xyz;\n    #else\n        v_EnvPos = reflect(normalize((u_Model * vec4(transformed, 1.0)).xyz - u_CameraPosition), (transposeMat4(inverseMat4(u_Model)) * vec4(objectNormal, 1.0)).xyz);\n    #endif\n#endif",fog_frag:"#ifdef USE_FOG\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\n    #ifdef USE_EXP2_FOG\n        float fogFactor = whiteCompliment( exp2( - u_FogDensity * u_FogDensity * depth * depth * LOG2 ) );\n    #else\n        float fogFactor = smoothstep( u_FogNear, u_FogFar, depth );\n    #endif\n    gl_FragColor.rgb = mix( gl_FragColor.rgb, u_FogColor, fogFactor );\n#endif",fog_pars_frag:"#ifdef USE_FOG\n    uniform vec3 u_FogColor;\n    #ifdef USE_EXP2_FOG\n        uniform float u_FogDensity;\n    #else\n        uniform float u_FogNear;\n        uniform float u_FogFar;\n    #endif\n#endif",inverse:"mat4 inverseMat4(mat4 m) {\n    float\n    a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\n    a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\n    a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\n    a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\n    b00 = a00 * a11 - a01 * a10,\n    b01 = a00 * a12 - a02 * a10,\n    b02 = a00 * a13 - a03 * a10,\n    b03 = a01 * a12 - a02 * a11,\n    b04 = a01 * a13 - a03 * a11,\n    b05 = a02 * a13 - a03 * a12,\n    b06 = a20 * a31 - a21 * a30,\n    b07 = a20 * a32 - a22 * a30,\n    b08 = a20 * a33 - a23 * a30,\n    b09 = a21 * a32 - a22 * a31,\n    b10 = a21 * a33 - a23 * a31,\n    b11 = a22 * a33 - a23 * a32,\n    det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    return mat4(\n        a11 * b11 - a12 * b10 + a13 * b09,\n        a02 * b10 - a01 * b11 - a03 * b09,\n        a31 * b05 - a32 * b04 + a33 * b03,\n        a22 * b04 - a21 * b05 - a23 * b03,\n        a12 * b08 - a10 * b11 - a13 * b07,\n        a00 * b11 - a02 * b08 + a03 * b07,\n        a32 * b02 - a30 * b05 - a33 * b01,\n        a20 * b05 - a22 * b02 + a23 * b01,\n        a10 * b10 - a11 * b08 + a13 * b06,\n        a01 * b08 - a00 * b10 - a03 * b06,\n        a30 * b04 - a31 * b02 + a33 * b00,\n        a21 * b02 - a20 * b04 - a23 * b00,\n        a11 * b07 - a10 * b09 - a12 * b06,\n        a00 * b09 - a01 * b07 + a02 * b06,\n        a31 * b01 - a30 * b03 - a32 * b00,\n        a20 * b03 - a21 * b01 + a22 * b00) / det;\n}",light_frag:"#ifdef USE_LIGHT\n    vec4 light;\n    vec3 L;\n    vec4 totalReflect = vec4(0., 0., 0., 0.);    vec4 indirectIrradiance = vec4(0., 0., 0., 0.);    vec4 indirectRadiance = vec4(0., 0., 0., 0.);\n    #ifdef USE_PBR\n        vec4 diffuseColor = outColor.xyzw * (1.0 - metalnessFactor);\n        vec4 specularColor = mix(vec4(0.04), outColor.xyzw, metalnessFactor);\n        float roughness = clamp(roughnessFactor, 0.04, 1.0);\n    #else\n        vec4 diffuseColor = outColor.xyzw;\n        #ifdef USE_PHONG\n            vec4 specularColor = u_SpecularColor;\n            float shininess = u_Specular;\n        #endif\n    #endif\n    #ifdef USE_AMBIENT_LIGHT\n        #ifdef USE_PBR\n            indirectIrradiance += PI * diffuseColor * u_AmbientLightColor;\n        #else\n            indirectIrradiance += diffuseColor * u_AmbientLightColor;\n        #endif\n    #endif\n    #ifdef USE_PBR\n        #ifdef USE_ENV_MAP\n    \t\tvec3 envDir;\n    \t    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n    \t        envDir = reflect(normalize(v_worldPos - u_CameraPosition), N);\n    \t    #else\n    \t        envDir = v_EnvPos;\n    \t    #endif\n            indirectIrradiance += getLightProbeIndirectIrradiance(8, envDir);\n            indirectRadiance += getLightProbeIndirectRadiance(GGXRoughnessToBlinnExponent(roughness), 8, envDir);\n    \t#endif\n    #endif\n    #if (defined(USE_PHONG) || defined(USE_PBR))\n        vec3 V = normalize( u_CameraPosition - v_modelPos );\n    #endif\n    float dotNL;\n    vec4 irradiance;\n    vec4 reflectLight;\n    float dist;\n    #if NUM_DIR_LIGHTS > 0\n        #pragma unroll_loop\n        for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n            L = -u_Directional[ i ].direction;\n            light = u_Directional[ i ].color;\n            L = normalize(L);\n            dotNL = saturate( dot(N, L) );\n            irradiance = light * dotNL;\n            #ifdef USE_SHADOW\n                #ifdef USE_PCSS_SOFT_SHADOW\n                    irradiance *= bool( u_Directional[ i ].shadow ) ? getShadowWithPCSS( directionalDepthMap[ i ], directionalShadowMap[ i ], vDirectionalShadowCoord[ i ], u_Directional[ i ].shadowBias, u_Directional[ i ].shadowRadius, u_Directional[ i ].shadowMapSize ) : 1.0;\n                #else\n                    irradiance *= bool( u_Directional[ i ].shadow ) ? getShadow( directionalShadowMap[ i ], vDirectionalShadowCoord[ i ], u_Directional[ i ].shadowBias, u_Directional[ i ].shadowRadius, u_Directional[ i ].shadowMapSize ) : 1.0;\n                #endif\n            #endif\n            #ifdef USE_PBR\n                irradiance *= PI;\n            #endif\n            reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\n            #ifdef USE_PHONG\n                reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\n            #endif\n            #ifdef USE_PBR\n                reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\n            #endif\n            totalReflect += reflectLight;\n        }\n    #endif\n    #if NUM_POINT_LIGHTS > 0\n        vec3 worldV;\n        #pragma unroll_loop\n        for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n            L = u_Point[ i ].position - v_modelPos;\n            dist = pow(clamp(1. - length(L) / u_Point[ i ].distance, 0.0, 1.0), u_Point[ i ].decay);\n            light = u_Point[ i ].color * dist;\n            L = normalize(L);\n            dotNL = saturate( dot(N, L) );\n            irradiance = light * dotNL;\n            #ifdef USE_PBR\n                irradiance *= PI;\n            #endif\n            #ifdef USE_SHADOW\n                worldV = v_modelPos - u_Point[ i ].position;\n                irradiance *= bool( u_Point[ i ].shadow ) ? getPointShadow( pointShadowMap[ i ], worldV, u_Point[ i ].shadowBias, u_Point[ i ].shadowRadius, u_Point[ i ].shadowMapSize, u_Point[ i ].shadowCameraNear, u_Point[ i ].shadowCameraFar ) : 1.0;\n            #endif\n            reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\n            #ifdef USE_PHONG\n                reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\n            #endif\n            #ifdef USE_PBR\n                reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\n            #endif\n            totalReflect += reflectLight;\n        }\n    #endif\n    #if NUM_SPOT_LIGHTS > 0\n        float lightDistance;\n        float angleCos;\n        float spotEffect;\n        #pragma unroll_loop\n        for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n            L = u_Spot[ i ].position - v_modelPos;\n            lightDistance = length(L);\n            L = normalize(L);\n            angleCos = dot( L, -normalize(u_Spot[ i ].direction) );\n            if( all( bvec2(angleCos > u_Spot[ i ].coneCos, lightDistance < u_Spot[ i ].distance) ) ) {\n                spotEffect = smoothstep( u_Spot[ i ].coneCos, u_Spot[ i ].penumbraCos, angleCos );\n                dist = pow(clamp(1. - lightDistance / u_Spot[ i ].distance, 0.0, 1.0), u_Spot[ i ].decay);\n                light = u_Spot[ i ].color * dist * spotEffect;\n                dotNL = saturate( dot(N, L) );\n                irradiance = light * dotNL;\n                #ifdef USE_PBR\n                    irradiance *= PI;\n                #endif\n                #ifdef USE_SHADOW\n                    #ifdef USE_PCSS_SOFT_SHADOW\n                        irradiance *= bool( u_Spot[ i ].shadow ) ? getShadowWithPCSS( spotDepthMap[ i ], spotShadowMap[ i ], vSpotShadowCoord[ i ], u_Spot[ i ].shadowBias, u_Spot[ i ].shadowRadius, u_Spot[ i ].shadowMapSize ) : 1.0;\n                    #else\n                        irradiance *= bool( u_Spot[ i ].shadow ) ? getShadow( spotShadowMap[ i ], vSpotShadowCoord[ i ], u_Spot[ i ].shadowBias, u_Spot[ i ].shadowRadius, u_Spot[ i ].shadowMapSize ) : 1.0;\n                    #endif\n                #endif\n                reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\n                #ifdef USE_PHONG\n                    reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\n                #endif\n                #ifdef USE_PBR\n                    reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\n                #endif\n                totalReflect += reflectLight;\n            }\n        }\n    #endif\n    vec4 indirectDiffuse = indirectIrradiance * BRDF_Diffuse_Lambert(diffuseColor);\n    vec4 indirectSpecular = vec4(0., 0., 0., 0.);\n    #if defined( USE_ENV_MAP ) && defined( USE_PBR )\n        indirectSpecular += indirectRadiance * BRDF_Specular_GGX_Environment(N, V, specularColor, roughness) * specularStrength;\n    #endif\n    #ifdef USE_AOMAP\n    \tfloat ambientOcclusion = ( texture2D( aoMap, v_Uv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n    \tindirectDiffuse *= ambientOcclusion;\n    \t#if defined( USE_ENV_MAP ) && defined( USE_PBR )\n    \t\tfloat dotNV = saturate( dot( N, V ) );\n    \t\tindirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, GGXRoughnessToBlinnExponent(roughness) );\n    \t#endif\n    #endif\n    outColor.xyz = totalReflect.xyz + indirectDiffuse.xyz + indirectSpecular.xyz;\n#endif",light_pars_frag:"#ifdef USE_AMBIENT_LIGHT\n    #include <ambientlight_pars_frag>\n#endif\n#if NUM_DIR_LIGHTS > 0\n    #include <directlight_pars_frag>\n#endif\n#if NUM_POINT_LIGHTS > 0\n    #include <pointlight_pars_frag>\n#endif\n#if NUM_SPOT_LIGHTS > 0\n    #include <spotlight_pars_frag>\n#endif\n#if defined(USE_PBR) && defined(USE_ENV_MAP)\n    vec4 getLightProbeIndirectIrradiance(const in int maxMIPLevel, const in vec3 envDir) {\n    \t#ifdef TEXTURE_LOD_EXT\n    \t\tvec4 envMapColor = textureCubeLodEXT( envMap, envDir, float( maxMIPLevel ) );\n    \t#else\n    \t\tvec4 envMapColor = textureCube( envMap, envDir, float( maxMIPLevel ) );\n    \t#endif\n        envMapColor = envMapTexelToLinear( envMapColor );\n        return PI * envMapColor * u_EnvMap_Intensity;\n    }\n    float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n    \tfloat maxMIPLevelScalar = float( maxMIPLevel );\n    \tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n    \treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n    }\n    vec4 getLightProbeIndirectRadiance(const in float blinnShininessExponent, const in int maxMIPLevel, const in vec3 envDir) {\n        float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n        #ifdef TEXTURE_LOD_EXT\n    \t\tvec4 envMapColor = textureCubeLodEXT( envMap, envDir, specularMIPLevel );\n    \t#else\n    \t\tvec4 envMapColor = textureCube( envMap, envDir, specularMIPLevel );\n    \t#endif\n        envMapColor = envMapTexelToLinear( envMapColor );\n        return envMapColor * u_EnvMap_Intensity;\n    }\n    float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n    \treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n    }\n#endif",normalMap_pars_frag:"#include <tbn>\n#include <tsn>\nuniform sampler2D normalMap;",normal_frag:"#ifdef USE_NORMAL\n    #ifdef DOUBLE_SIDED\n    \tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n    #else\n    \tfloat flipNormal = 1.0;\n    #endif\n    #ifdef FLAT_SHADED\n    \tvec3 fdx = vec3( dFdx( v_modelPos.x ), dFdx( v_modelPos.y ), dFdx( v_modelPos.z ) );\n    \tvec3 fdy = vec3( dFdy( v_modelPos.x ), dFdy( v_modelPos.y ), dFdy( v_modelPos.z ) );\n    \tvec3 N = normalize( cross( fdx, fdy ) );\n    #else\n        vec3 N = normalize(v_Normal) * flipNormal;\n    #endif\n    #ifdef USE_NORMAL_MAP\n        vec3 normalMapColor = texture2D(normalMap, v_Uv).rgb;\n        mat3 tspace = tsn(N, -v_modelPos, vec2(v_Uv.x, 1.0 - v_Uv.y));\n        N = normalize(tspace * (normalMapColor * 2.0 - 1.0));\n    #elif defined(USE_BUMPMAP)\n        N = perturbNormalArb(-v_modelPos, N, dHdxy_fwd(v_Uv));\n    #endif\n#endif",normal_pars_frag:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\n    varying vec3 v_Normal;\n#endif",normal_pars_vert:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\n    varying vec3 v_Normal;\n#endif",normal_vert:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\n    v_Normal = (transposeMat4(inverseMat4(u_Model)) * vec4(objectNormal, 1.0)).xyz;\n    #ifdef FLIP_SIDED\n    \tv_Normal = - v_Normal;\n    #endif\n#endif",packing:"const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n    vec4 r = vec4( fract( v * PackFactors ), v );\n    r.yzw -= r.xyz * ShiftRight8;    return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n    return dot( v, UnpackFactors );\n}",pointlight_pars_frag:"struct PointLight\n{\n    vec3 position;\n    vec4 color;\n    float distance;\n    float decay;\n    int shadow;\n    float shadowBias;\n    float shadowRadius;\n    vec2 shadowMapSize;\n    float shadowCameraNear;\n    float shadowCameraFar;\n};\nuniform PointLight u_Point[NUM_POINT_LIGHTS];",premultipliedAlpha_frag:"#ifdef USE_PREMULTIPLIED_ALPHA\n    gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;\n#endif",pvm_vert:"gl_Position = u_Projection * u_View * u_Model * vec4(transformed, 1.0);",shadow:"\n#ifdef WEBGL2\n    float computeShadow(sampler2DShadow shadowMap, vec3 shadowCoord) {\n        return texture2D( shadowMap, shadowCoord );\n    }\n#else\n    float computeShadow(sampler2D shadowMap, vec3 shadowCoord) {\n        return step( shadowCoord.z, unpackRGBAToDepth( texture2D( shadowMap, shadowCoord.xy ) ) );\n    }\n#endif\nfloat computeShadowWithPoissonSampling( sampler2DShadow shadowMap, vec3 shadowCoord, float texelSize ) {\n    vec3 poissonDisk[4];\n    poissonDisk[0] = vec3(-0.94201624, -0.39906216, 0);\n    poissonDisk[1] = vec3(0.94558609, -0.76890725, 0);\n    poissonDisk[2] = vec3(-0.094184101, -0.92938870, 0);\n    poissonDisk[3] = vec3(0.34495938, 0.29387760, 0);\n    return computeShadow( shadowMap, shadowCoord + poissonDisk[0] * texelSize ) * 0.25 +\n        computeShadow( shadowMap, shadowCoord + poissonDisk[1] * texelSize ) * 0.25 +\n        computeShadow( shadowMap, shadowCoord + poissonDisk[2] * texelSize ) * 0.25 +\n        computeShadow( shadowMap, shadowCoord + poissonDisk[3] * texelSize ) * 0.25;\n}\nfloat computeShadowWithPCF1(sampler2DShadow shadowSampler, vec3 shadowCoord) {\n    return computeShadow(shadowSampler, shadowCoord);\n}\nfloat computeShadowWithPCF3(sampler2DShadow shadowSampler, vec3 shadowCoord, vec2 shadowMapSizeAndInverse) {\n    vec2 uv = shadowCoord.xy * shadowMapSizeAndInverse.x;    uv += 0.5;    vec2 st = fract(uv);    vec2 base_uv = floor(uv) - 0.5;    base_uv *= shadowMapSizeAndInverse.y;\n    vec2 uvw0 = 3. - 2. * st;\n    vec2 uvw1 = 1. + 2. * st;\n    vec2 u = vec2((2. - st.x) / uvw0.x - 1., st.x / uvw1.x + 1.) * shadowMapSizeAndInverse.y;\n    vec2 v = vec2((2. - st.y) / uvw0.y - 1., st.y / uvw1.y + 1.) * shadowMapSizeAndInverse.y;\n    float shadow = 0.;\n    shadow += uvw0.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[0]), shadowCoord.z));\n    shadow += uvw1.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[0]), shadowCoord.z));\n    shadow += uvw0.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[1]), shadowCoord.z));\n    shadow += uvw1.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[1]), shadowCoord.z));\n    shadow = shadow / 16.;\n    return shadow;\n}\nfloat computeShadowWithPCF5(sampler2DShadow shadowSampler, vec3 shadowCoord, vec2 shadowMapSizeAndInverse) {\n    vec2 uv = shadowCoord.xy * shadowMapSizeAndInverse.x;    uv += 0.5;    vec2 st = fract(uv);    vec2 base_uv = floor(uv) - 0.5;    base_uv *= shadowMapSizeAndInverse.y;\n    vec2 uvw0 = 4. - 3. * st;\n    vec2 uvw1 = vec2(7.);\n    vec2 uvw2 = 1. + 3. * st;\n    vec3 u = vec3((3. - 2. * st.x) / uvw0.x - 2., (3. + st.x) / uvw1.x, st.x / uvw2.x + 2.) * shadowMapSizeAndInverse.y;\n    vec3 v = vec3((3. - 2. * st.y) / uvw0.y - 2., (3. + st.y) / uvw1.y, st.y / uvw2.y + 2.) * shadowMapSizeAndInverse.y;\n    float shadow = 0.;\n    shadow += uvw0.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[0]), shadowCoord.z));\n    shadow += uvw1.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[0]), shadowCoord.z));\n    shadow += uvw2.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[2], v[0]), shadowCoord.z));\n    shadow += uvw0.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[1]), shadowCoord.z));\n    shadow += uvw1.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[1]), shadowCoord.z));\n    shadow += uvw2.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[2], v[1]), shadowCoord.z));\n    shadow += uvw0.x * uvw2.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[2]), shadowCoord.z));\n    shadow += uvw1.x * uvw2.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[2]), shadowCoord.z));\n    shadow += uvw2.x * uvw2.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[2], v[2]), shadowCoord.z));\n    shadow = shadow / 144.;\n    return shadow;\n}\nfloat getShadow( sampler2DShadow shadowMap, vec4 shadowCoord, float shadowBias, float shadowRadius, vec2 shadowMapSize ) {\n    shadowCoord.xyz /= shadowCoord.w;\n    shadowCoord.z += shadowBias;\n    bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n    bool inFrustum = all( inFrustumVec );\n    bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n    bool frustumTest = all( frustumTestVec );\n    if ( frustumTest ) {\n        #ifdef USE_HARD_SHADOW\n            return computeShadow(shadowMap, shadowCoord.xyz);\n        #else\n            #ifdef USE_PCF3_SOFT_SHADOW\n                vec2 shadowMapSizeAndInverse = vec2(shadowMapSize.x, 1. / shadowMapSize.x);\n                return computeShadowWithPCF3(shadowMap, shadowCoord.xyz, shadowMapSizeAndInverse);\n            #else\n                #ifdef USE_PCF5_SOFT_SHADOW\n                    vec2 shadowMapSizeAndInverse = vec2(shadowMapSize.x, 1. / shadowMapSize.x);\n                    return computeShadowWithPCF5(shadowMap, shadowCoord.xyz, shadowMapSizeAndInverse);\n                #else\n                    float texelSize = shadowRadius / shadowMapSize.x;\n                    return computeShadowWithPoissonSampling(shadowMap, shadowCoord.xyz, texelSize);\n                #endif\n            #endif\n        #endif\n    }\n    return 1.0;\n}\nfloat textureCubeCompare( samplerCube depths, vec3 uv, float compare ) {\n    return step( compare, unpackRGBAToDepth( textureCube( depths, uv ) ) );\n}\nfloat getPointShadow( samplerCube shadowMap, vec3 V, float shadowBias, float shadowRadius, vec2 shadowMapSize, float shadowCameraNear, float shadowCameraFar ) {\n    float depth = ( length( V ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );    depth += shadowBias;\n    #ifdef USE_HARD_SHADOW\n        return textureCubeCompare( shadowMap, normalize(V), depth);\n    #else\n        float texelSize = shadowRadius / shadowMapSize.x;\n        vec3 poissonDisk[4];\n        poissonDisk[0] = vec3(-1.0, 1.0, -1.0);\n        poissonDisk[1] = vec3(1.0, -1.0, -1.0);\n        poissonDisk[2] = vec3(-1.0, -1.0, -1.0);\n        poissonDisk[3] = vec3(1.0, -1.0, 1.0);\n        return textureCubeCompare( shadowMap, normalize(V) + poissonDisk[0] * texelSize, depth ) * 0.25 +\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[1] * texelSize, depth ) * 0.25 +\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[2] * texelSize, depth ) * 0.25 +\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[3] * texelSize, depth ) * 0.25;\n    #endif\n}\n#ifdef USE_PCSS_SOFT_SHADOW\n    const vec3 PoissonSamplers32[64] = vec3[64](\n        vec3(0.06407013, 0.05409927, 0.),\n        vec3(0.7366577, 0.5789394, 0.),\n        vec3(-0.6270542, -0.5320278, 0.),\n        vec3(-0.4096107, 0.8411095, 0.),\n        vec3(0.6849564, -0.4990818, 0.),\n        vec3(-0.874181, -0.04579735, 0.),\n        vec3(0.9989998, 0.0009880066, 0.),\n        vec3(-0.004920578, -0.9151649, 0.),\n        vec3(0.1805763, 0.9747483, 0.),\n        vec3(-0.2138451, 0.2635818, 0.),\n        vec3(0.109845, 0.3884785, 0.),\n        vec3(0.06876755, -0.3581074, 0.),\n        vec3(0.374073, -0.7661266, 0.),\n        vec3(0.3079132, -0.1216763, 0.),\n        vec3(-0.3794335, -0.8271583, 0.),\n        vec3(-0.203878, -0.07715034, 0.),\n        vec3(0.5912697, 0.1469799, 0.),\n        vec3(-0.88069, 0.3031784, 0.),\n        vec3(0.5040108, 0.8283722, 0.),\n        vec3(-0.5844124, 0.5494877, 0.),\n        vec3(0.6017799, -0.1726654, 0.),\n        vec3(-0.5554981, 0.1559997, 0.),\n        vec3(-0.3016369, -0.3900928, 0.),\n        vec3(-0.5550632, -0.1723762, 0.),\n        vec3(0.925029, 0.2995041, 0.),\n        vec3(-0.2473137, 0.5538505, 0.),\n        vec3(0.9183037, -0.2862392, 0.),\n        vec3(0.2469421, 0.6718712, 0.),\n        vec3(0.3916397, -0.4328209, 0.),\n        vec3(-0.03576927, -0.6220032, 0.),\n        vec3(-0.04661255, 0.7995201, 0.),\n        vec3(0.4402924, 0.3640312, 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.),\n        vec3(0., 0., 0.)\n    );\n    const vec3 PoissonSamplers64[64] = vec3[64](\n        vec3(-0.613392, 0.617481, 0.),\n        vec3(0.170019, -0.040254, 0.),\n        vec3(-0.299417, 0.791925, 0.),\n        vec3(0.645680, 0.493210, 0.),\n        vec3(-0.651784, 0.717887, 0.),\n        vec3(0.421003, 0.027070, 0.),\n        vec3(-0.817194, -0.271096, 0.),\n        vec3(-0.705374, -0.668203, 0.),\n        vec3(0.977050, -0.108615, 0.),\n        vec3(0.063326, 0.142369, 0.),\n        vec3(0.203528, 0.214331, 0.),\n        vec3(-0.667531, 0.326090, 0.),\n        vec3(-0.098422, -0.295755, 0.),\n        vec3(-0.885922, 0.215369, 0.),\n        vec3(0.566637, 0.605213, 0.),\n        vec3(0.039766, -0.396100, 0.),\n        vec3(0.751946, 0.453352, 0.),\n        vec3(0.078707, -0.715323, 0.),\n        vec3(-0.075838, -0.529344, 0.),\n        vec3(0.724479, -0.580798, 0.),\n        vec3(0.222999, -0.215125, 0.),\n        vec3(-0.467574, -0.405438, 0.),\n        vec3(-0.248268, -0.814753, 0.),\n        vec3(0.354411, -0.887570, 0.),\n        vec3(0.175817, 0.382366, 0.),\n        vec3(0.487472, -0.063082, 0.),\n        vec3(-0.084078, 0.898312, 0.),\n        vec3(0.488876, -0.783441, 0.),\n        vec3(0.470016, 0.217933, 0.),\n        vec3(-0.696890, -0.549791, 0.),\n        vec3(-0.149693, 0.605762, 0.),\n        vec3(0.034211, 0.979980, 0.),\n        vec3(0.503098, -0.308878, 0.),\n        vec3(-0.016205, -0.872921, 0.),\n        vec3(0.385784, -0.393902, 0.),\n        vec3(-0.146886, -0.859249, 0.),\n        vec3(0.643361, 0.164098, 0.),\n        vec3(0.634388, -0.049471, 0.),\n        vec3(-0.688894, 0.007843, 0.),\n        vec3(0.464034, -0.188818, 0.),\n        vec3(-0.440840, 0.137486, 0.),\n        vec3(0.364483, 0.511704, 0.),\n        vec3(0.034028, 0.325968, 0.),\n        vec3(0.099094, -0.308023, 0.),\n        vec3(0.693960, -0.366253, 0.),\n        vec3(0.678884, -0.204688, 0.),\n        vec3(0.001801, 0.780328, 0.),\n        vec3(0.145177, -0.898984, 0.),\n        vec3(0.062655, -0.611866, 0.),\n        vec3(0.315226, -0.604297, 0.),\n        vec3(-0.780145, 0.486251, 0.),\n        vec3(-0.371868, 0.882138, 0.),\n        vec3(0.200476, 0.494430, 0.),\n        vec3(-0.494552, -0.711051, 0.),\n        vec3(0.612476, 0.705252, 0.),\n        vec3(-0.578845, -0.768792, 0.),\n        vec3(-0.772454, -0.090976, 0.),\n        vec3(0.504440, 0.372295, 0.),\n        vec3(0.155736, 0.065157, 0.),\n        vec3(0.391522, 0.849605, 0.),\n        vec3(-0.620106, -0.328104, 0.),\n        vec3(0.789239, -0.419965, 0.),\n        vec3(-0.545396, 0.538133, 0.),\n        vec3(-0.178564, -0.596057, 0.)\n    );\n    float getRand(vec2 seed) {\n        return fract(sin(dot(seed.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n    float computeShadowWithPCSS(sampler2D depthSampler, sampler2DShadow shadowSampler, vec3 shadowCoord, float shadowMapSizeInverse, float lightSizeUV, int searchTapCount, int pcfTapCount, vec3[64] poissonSamplers) {\n        float depthMetric = shadowCoord.z;\n        float blockerDepth = 0.0;\n        float sumBlockerDepth = 0.0;\n        float numBlocker = 0.0;\n        for (int i = 0; i < searchTapCount; i ++) {\n            blockerDepth = unpackRGBAToDepth( texture( depthSampler, shadowCoord.xy + (lightSizeUV * shadowMapSizeInverse * PoissonSamplers32[i].xy) ) );\n            if (blockerDepth < depthMetric) {\n                sumBlockerDepth += blockerDepth;\n                numBlocker++;\n            }\n        }\n        if (numBlocker < 1.0) {\n            return 1.0;\n        }\n        float avgBlockerDepth = sumBlockerDepth / numBlocker;\n        float AAOffset = shadowMapSizeInverse * 10.;\n        float penumbraRatio = ((depthMetric - avgBlockerDepth) + AAOffset);\n        float filterRadius = penumbraRatio * lightSizeUV * shadowMapSizeInverse;\n        float random = getRand(shadowCoord.xy);        float rotationAngle = random * 3.1415926;\n        vec2 rotationVector = vec2(cos(rotationAngle), sin(rotationAngle));\n        float shadow = 0.;\n        for (int i = 0; i < pcfTapCount; i++) {\n            vec3 offset = poissonSamplers[i];\n            offset = vec3(offset.x * rotationVector.x - offset.y * rotationVector.y, offset.y * rotationVector.x + offset.x * rotationVector.y, 0.);\n            shadow += texture(shadowSampler, shadowCoord + offset * filterRadius);\n        }\n        shadow /= float(pcfTapCount);\n        shadow = mix(shadow, 1., depthMetric - avgBlockerDepth);\n        return shadow;\n    }\n    float getShadowWithPCSS( sampler2D depthSampler, sampler2DShadow shadowMap, vec4 shadowCoord, float shadowBias, float shadowRadius, vec2 shadowMapSize ) {\n        shadowCoord.xyz /= shadowCoord.w;\n        shadowCoord.z += shadowBias;\n        bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n        bool inFrustum = all( inFrustumVec );\n        bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n        bool frustumTest = all( frustumTestVec );\n        if ( frustumTest ) {\n            #ifdef USE_PCSS16_SOFT_SHADOW\n                return computeShadowWithPCSS(depthSampler, shadowMap, shadowCoord.xyz, 1. / shadowMapSize.x, 0.1 * shadowMapSize.x, 16, 16, PoissonSamplers32);\n            #else\n                #ifdef USE_PCSS32_SOFT_SHADOW\n                    return computeShadowWithPCSS(depthSampler, shadowMap, shadowCoord.xyz, 1. / shadowMapSize.x, 0.1 * shadowMapSize.x, 16, 32, PoissonSamplers32);\n                #else\n                    return computeShadowWithPCSS(depthSampler, shadowMap, shadowCoord.xyz, 1. / shadowMapSize.x, 0.1 * shadowMapSize.x, 32, 64, PoissonSamplers64);\n                #endif\n            #endif\n        }\n        return 1.0;\n    }\n#endif",shadowMap_frag:"#ifdef USE_SHADOW\n#endif",shadowMap_pars_frag:"#ifdef USE_SHADOW\n    #if NUM_DIR_LIGHTS > 0\n        uniform sampler2DShadow directionalShadowMap[ NUM_DIR_LIGHTS ];\n        varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n        #ifdef USE_PCSS_SOFT_SHADOW\n            uniform sampler2D directionalDepthMap[ NUM_DIR_LIGHTS ];\n        #endif\n    #endif\n    #if NUM_POINT_LIGHTS > 0\n        uniform samplerCube pointShadowMap[ NUM_POINT_LIGHTS ];\n    #endif\n    #if NUM_SPOT_LIGHTS > 0\n        uniform sampler2DShadow spotShadowMap[ NUM_SPOT_LIGHTS ];\n        varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n        #ifdef USE_PCSS_SOFT_SHADOW\n            uniform sampler2D spotDepthMap[ NUM_SPOT_LIGHTS ];\n        #endif\n    #endif\n    #include <packing>\n    #include <shadow>\n#endif",shadowMap_pars_vert:"#ifdef USE_SHADOW\n    #if NUM_DIR_LIGHTS > 0\n        uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n        varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n    #endif\n    #if NUM_POINT_LIGHTS > 0\n    #endif\n    #if NUM_SPOT_LIGHTS > 0\n        uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n        varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n    #endif\n#endif",shadowMap_vert:"#ifdef USE_SHADOW\n    vec4 worldPosition = u_Model * vec4(transformed, 1.0);\n    #if NUM_DIR_LIGHTS > 0\n        #pragma unroll_loop\n        for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n            vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n        }\n    #endif\n    #if NUM_POINT_LIGHTS > 0\n    #endif\n    #if NUM_SPOT_LIGHTS > 0\n        #pragma unroll_loop\n        for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n            vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n        }\n    #endif\n#endif",skinning_pars_vert:"#ifdef USE_SKINNING\n    attribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n    uniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n    #ifdef BONE_TEXTURE\n        uniform sampler2D boneTexture;\n        uniform int boneTextureSize;\n        mat4 getBoneMatrix( const in float i ) {\n            float j = i * 4.0;\n            float x = mod( j, float( boneTextureSize ) );\n            float y = floor( j / float( boneTextureSize ) );\n            float dx = 1.0 / float( boneTextureSize );\n            float dy = 1.0 / float( boneTextureSize );\n            y = dy * ( y + 0.5 );\n            vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n            vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n            vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n            vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n            mat4 bone = mat4( v1, v2, v3, v4 );\n            return bone;\n        }\n    #else\n        uniform mat4 boneMatrices[MAX_BONES];\n        mat4 getBoneMatrix(const in float i) {\n            mat4 bone = boneMatrices[int(i)];\n            return bone;\n        }\n    #endif\n#endif",skinning_vert:"#ifdef USE_SKINNING\n    mat4 boneMatX = getBoneMatrix( skinIndex.x );\n    mat4 boneMatY = getBoneMatrix( skinIndex.y );\n    mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n    mat4 boneMatW = getBoneMatrix( skinIndex.w );\n    vec4 skinVertex = bindMatrix * vec4(transformed, 1.0);\n    vec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned = bindMatrixInverse * skinned;\n    transformed = skinned.xyz / skinned.w;\n    #if defined(USE_NORMAL) || defined(USE_ENV_MAP)\n        mat4 skinMatrix = mat4( 0.0 );\n        skinMatrix += skinWeight.x * boneMatX;\n        skinMatrix += skinWeight.y * boneMatY;\n        skinMatrix += skinWeight.z * boneMatZ;\n        skinMatrix += skinWeight.w * boneMatW;\n        skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n        objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n    #endif\n#endif",specularMap_frag:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, v_Uv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularMap_pars_frag:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",spotlight_pars_frag:"struct SpotLight\n{\n    vec3 position;\n    vec4 color;\n    float distance;\n    float decay;\n    float coneCos;\n    float penumbraCos;\n    vec3 direction;\n    int shadow;\n    float shadowBias;\n    float shadowRadius;\n    vec2 shadowMapSize;\n};\nuniform SpotLight u_Spot[NUM_SPOT_LIGHTS];",tbn:"mat3 tbn(vec3 N, vec3 p, vec2 uv) {\n    vec3 dp1 = dFdx(p.xyz);\n    vec3 dp2 = dFdy(p.xyz);\n    vec2 duv1 = dFdx(uv.st);\n    vec2 duv2 = dFdy(uv.st);\n    vec3 dp2perp = cross(dp2, N);\n    vec3 dp1perp = cross(N, dp1);\n    vec3 T = dp2perp * duv1.x + dp1perp * duv2.x;\n    vec3 B = dp2perp * duv1.y + dp1perp * duv2.y;\n    float invmax = 1.0 / sqrt(max(dot(T,T), dot(B,B)));\n    return mat3(T * invmax, B * invmax, N);\n}",transpose:"mat4 transposeMat4(mat4 inMatrix) {\n    vec4 i0 = inMatrix[0];\n    vec4 i1 = inMatrix[1];\n    vec4 i2 = inMatrix[2];\n    vec4 i3 = inMatrix[3];\n    mat4 outMatrix = mat4(\n        vec4(i0.x, i1.x, i2.x, i3.x),\n        vec4(i0.y, i1.y, i2.y, i3.y),\n        vec4(i0.z, i1.z, i2.z, i3.z),\n        vec4(i0.w, i1.w, i2.w, i3.w)\n    );\n    return outMatrix;\n}",tsn:"mat3 tsn(vec3 N, vec3 V, vec2 uv) {\n    vec3 q0 = dFdx( V.xyz );\n    vec3 q1 = dFdy( V.xyz );\n    vec2 st0 = dFdx( uv.st );\n    vec2 st1 = dFdy( uv.st );\n    vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n    vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n    mat3 tsn = mat3( S, T, N );\n    return tsn;\n}",uv_pars_frag:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\n    varying vec2 v_Uv;\n#endif\n#ifdef USE_AOMAP\n    varying vec2 v_Uv2;\n#endif",uv_pars_vert:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\n    attribute vec2 a_Uv;\n    varying vec2 v_Uv;\n    uniform mat3 uvTransform;\n#endif\n#ifdef USE_AOMAP\n    attribute vec2 a_Uv2;\n    varying vec2 v_Uv2;\n#endif\n",uv_vert:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\n    v_Uv = (uvTransform * vec3(a_Uv, 1)).xy;\n#endif\n#ifdef USE_AOMAP\n    v_Uv2 = a_Uv2;\n#endif",viewModelPos_pars_frag:"#if (NUM_POINT_LIGHTS > 0) || (NUM_SPOT_LIGHTS > 0) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR) || (NUM_CLIPPING_PLANES > 0) \n    varying vec3 v_modelPos;\n#endif",viewModelPos_pars_vert:"#if (NUM_POINT_LIGHTS > 0) || (NUM_SPOT_LIGHTS > 0) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR)|| (NUM_CLIPPING_PLANES > 0)\n    varying vec3 v_modelPos;\n#endif",viewModelPos_vert:"#if (NUM_POINT_LIGHTS > 0) || (NUM_SPOT_LIGHTS > 0) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR) || (NUM_CLIPPING_PLANES > 0)\n    v_modelPos = (u_Model * vec4(transformed, 1.0)).xyz;\n#endif"},Ai={basic_frag:"#include <common_frag>\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <fog_pars_frag>\nvoid main() {\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphaTest_frag>\n    #include <envMap_frag>\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",basic_vert:"#include <common_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <envMap_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <envMap_vert>\n}",canvas2d_frag:"#include <common_frag>\nvarying vec2 v_Uv;\nuniform sampler2D spriteTexture;\nvoid main() {\n    #include <begin_frag>\n    outColor *= texture2D(spriteTexture, v_Uv);\n    #include <end_frag>\n    #include <premultipliedAlpha_frag>\n}",canvas2d_vert:"#include <common_vert>\nattribute vec2 a_Uv;\nvarying vec2 v_Uv;\nvoid main() {\n    #include <begin_vert>\n    #include <pvm_vert>\n    v_Uv = a_Uv;\n}",depth_frag:"#include <common_frag>\n#include <diffuseMap_pars_frag>\n#include <uv_pars_frag>\n#include <packing>\nvoid main() {\n    #if defined(USE_DIFFUSE_MAP) && defined(ALPHATEST)\n        vec4 texelColor = texture2D( diffuseMap, v_Uv );\n        float alpha = texelColor.a * u_Opacity;\n        if(alpha < ALPHATEST) discard;\n    #endif\n    \n    #ifdef DEPTH_PACKING_RGBA\n        gl_FragColor = packDepthToRGBA(gl_FragCoord.z);\n    #else\n        gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), u_Opacity );\n    #endif\n}",depth_vert:"#include <common_vert>\n#include <skinning_pars_vert>\n#include <uv_pars_vert>\nvoid main() {\n    #include <uv_vert>\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n}",distance_frag:"#include <common_frag>\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 v_ModelPos;\n#include <packing>\nvoid main() {\n    float dist = length( v_ModelPos - u_CameraPosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n    gl_FragColor = packDepthToRGBA(dist);\n}",distance_vert:"#include <common_vert>\nvarying vec3 v_ModelPos;\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    v_ModelPos = (u_Model * vec4(transformed, 1.0)).xyz;\n}",lambert_frag:"#include <common_frag>\nuniform vec3 emissive;\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <normalMap_pars_frag>\n#include <bumpMap_pars_frag>\n#include <light_pars_frag>\n#include <normal_pars_frag>\n#include <viewModelPos_pars_frag>\n#include <bsdfs>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <shadowMap_pars_frag>\n#include <fog_pars_frag>\n#include <emissiveMap_pars_frag>\n#include <clippingPlanes_pars_frag>\nvoid main() {\n    #include <clippingPlanes_frag>\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphaTest_frag>\n    #include <normal_frag>\n    #include <light_frag>\n    #include <envMap_frag>\n    #include <shadowMap_frag>\n    vec3 totalEmissiveRadiance = emissive;\n    #include <emissiveMap_frag>\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",lambert_vert:"#include <common_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <viewModelPos_pars_vert>\n#include <envMap_pars_vert>\n#include <shadowMap_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <normal_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <viewModelPos_vert>\n    #include <envMap_vert>\n    #include <shadowMap_vert>\n}",linedashed_frag:"#include <common_frag>\n#include <fog_pars_frag>\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\nvoid main() {\n    if ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n    #include <begin_frag>\n    #include <end_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",linedashed_vert:"#include <common_vert>\nuniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\nvoid main() {\n    vLineDistance = scale * lineDistance;\n    vec3 transformed = vec3(a_Position);\n    #include <pvm_vert>\n}",normaldepth_frag:"#include <common_frag>\n#include <diffuseMap_pars_frag>\n#include <uv_pars_frag>\n#define USE_NORMAL\n#include <packing>\n#include <normal_pars_frag>\nvoid main() {\n    #if defined(USE_DIFFUSE_MAP) && defined(ALPHATEST)\n        vec4 texelColor = texture2D( diffuseMap, v_Uv );\n        float alpha = texelColor.a * u_Opacity;\n        if(alpha < ALPHATEST) discard;\n    #endif\n    vec4 packedNormalDepth;\n    packedNormalDepth.xyz = normalize(v_Normal) * 0.5 + 0.5;\n    packedNormalDepth.w = gl_FragCoord.z;\n    gl_FragColor = packedNormalDepth;\n}",normaldepth_vert:"#include <common_vert>\n#define USE_NORMAL\n#include <skinning_pars_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\nvoid main() {\n    #include <uv_vert>\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <normal_vert>\n    #include <pvm_vert>\n}",pbr_frag:"#include <common_frag>\nuniform float u_Metalness;\n#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif\nuniform float u_Roughness;\n#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif\nuniform vec3 emissive;\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <normalMap_pars_frag>\n#include <bumpMap_pars_frag>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <light_pars_frag>\n#include <normal_pars_frag>\n#include <viewModelPos_pars_frag>\n#include <bsdfs>\n#include <shadowMap_pars_frag>\n#include <fog_pars_frag>\n#include <emissiveMap_pars_frag>\n#include <clippingPlanes_pars_frag>\nvoid main() {\n    #include <clippingPlanes_frag>\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphaTest_frag>\n    #include <normal_frag>\n    #include <specularMap_frag>\n    float roughnessFactor = u_Roughness;\n    #ifdef USE_ROUGHNESSMAP\n    \tvec4 texelRoughness = texture2D( roughnessMap, v_Uv );\n    \troughnessFactor *= texelRoughness.g;\n    #endif\n    float metalnessFactor = u_Metalness;\n    #ifdef USE_METALNESSMAP\n    \tvec4 texelMetalness = texture2D( metalnessMap, v_Uv );\n    \tmetalnessFactor *= texelMetalness.b;\n    #endif\n    #include <light_frag>\n    #include <shadowMap_frag>\n    vec3 totalEmissiveRadiance = emissive;\n    #include <emissiveMap_frag>\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",pbr_vert:"#include <common_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <viewModelPos_pars_vert>\n#include <envMap_pars_vert>\n#include <shadowMap_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <normal_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <viewModelPos_vert>\n    #include <envMap_vert>\n    #include <shadowMap_vert>\n}",phong_frag:"#include <common_frag>\nuniform float u_Specular;\nuniform vec4 u_SpecularColor;\n#include <specularMap_pars_frag>\nuniform vec3 emissive;\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <normalMap_pars_frag>\n#include <bumpMap_pars_frag>\n#include <light_pars_frag>\n#include <normal_pars_frag>\n#include <viewModelPos_pars_frag>\n#include <bsdfs>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <shadowMap_pars_frag>\n#include <fog_pars_frag>\n#include <emissiveMap_pars_frag>\n#include <clippingPlanes_pars_frag>\nvoid main() {\n    #include <clippingPlanes_frag>\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphaTest_frag>\n    #include <normal_frag>\n    #include <specularMap_frag>\n    #include <light_frag>\n    #include <envMap_frag>\n    #include <shadowMap_frag>\n    vec3 totalEmissiveRadiance = emissive;\n    #include <emissiveMap_frag>\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",phong_vert:"#include <common_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <viewModelPos_pars_vert>\n#include <envMap_pars_vert>\n#include <shadowMap_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <normal_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <viewModelPos_vert>\n    #include <envMap_vert>\n    #include <shadowMap_vert>\n}",point_frag:"#include <common_frag>\n#include <diffuseMap_pars_frag>\n#include <fog_pars_frag>\nvoid main() {\n    #include <begin_frag>\n    #ifdef USE_DIFFUSE_MAP\n        outColor *= texture2D(diffuseMap, vec2(gl_PointCoord.x, 1.0 - gl_PointCoord.y));\n    #endif\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",point_vert:"#include <common_vert>\nuniform float u_PointSize;\nuniform float u_PointScale;\nvoid main() {\n    #include <begin_vert>\n    #include <pvm_vert>\n    vec4 mvPosition = u_View * u_Model * vec4(transformed, 1.0);\n    #ifdef USE_SIZEATTENUATION\n        gl_PointSize = u_PointSize * ( u_PointScale / - mvPosition.z );\n    #else\n        gl_PointSize = u_PointSize;\n    #endif\n}"},Ci=function(e){var t=/#include +<([\w\d.]+)>/g;return e.replace(t,function(e,t){var i=bi[t];if(void 0===i)throw new Error("Can not resolve #include <"+t+">");return Ci(i)})};Object.assign(ft.prototype,{setRenderTarget2D:function(e){var t=this.gl,i=this.state,n=this.texture,r=this.capabilities,a=this.properties.get(e);if(void 0!==a.__webglFramebuffer)t.bindFramebuffer(t.FRAMEBUFFER,a.__webglFramebuffer);else{e.addEventListener("dispose",this.onRenderTargetDispose,this),a.__webglFramebuffer=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,a.__webglFramebuffer);var s=[];for(var o in e._textures){var h=n.setTexture2D(e._textures[o]);(o=Number(o))!==gi.DEPTH_ATTACHMENT&&o!==gi.DEPTH_STENCIL_ATTACHMENT||r.version<2&&!r.getExtension("WEBGL_depth_texture")&&console.warn("extension WEBGL_depth_texture is not support in webgl 1.0."),t.framebufferTexture2D(t.FRAMEBUFFER,o,t.TEXTURE_2D,h.__webglTexture,0),i.bindTexture(t.TEXTURE_2D,null),(o<=36073&&o>=36064||o<=577045&&o>=577040)&&s.push(o)}if(s.length>1&&(r.version>=2?t.drawBuffers(s):r.getExtension("WEBGL_draw_buffers")&&r.getExtension("WEBGL_draw_buffers").drawBuffersWEBGL(s)),r.version>=2&&e.multipleSampling>0){u=t.createRenderbuffer();t.bindRenderbuffer(t.RENDERBUFFER,u),t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.min(e.multipleSampling,8),t.RGBA8,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,u),a.__multipleSamplingbuffer=u}if(e.depthBuffer&&!e._textures[gi.DEPTH_STENCIL_ATTACHMENT]&&!e._textures[gi.DEPTH_ATTACHMENT]){a.__webglDepthbuffer=t.createRenderbuffer();var u=a.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,u),e.stencilBuffer?(r.version>=2&&e.multipleSampling>0?t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.min(e.multipleSampling,8),t.DEPTH24_STENCIL8,e.width,e.height):t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,u)):(r.version>=2&&e.multipleSampling>0?t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.min(e.multipleSampling,8),t.DEPTH_COMPONENT16,e.width,e.height):t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,u)),t.bindRenderbuffer(t.RENDERBUFFER,null)}var c=t.checkFramebufferStatus(t.FRAMEBUFFER);c!==t.FRAMEBUFFER_COMPLETE&&(c===t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_ATTACHMENT"):c===t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"):c===t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_DIMENSIONS"):c===t.FRAMEBUFFER_UNSUPPORTED?console.warn("framebuffer not complete: FRAMEBUFFER_UNSUPPORTED"):c===t.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"):console.warn("framebuffer not complete."))}},setRenderTargetCube:function(e){var t=this.gl,i=this.state,n=this.texture,r=this.capabilities,a=this.properties.get(e);if(void 0!==a.__webglFramebuffer){t.bindFramebuffer(t.FRAMEBUFFER,a.__webglFramebuffer);for(var s in e._textures){h=this.properties.get(e._textures[s]);t.framebufferTexture2D(t.FRAMEBUFFER,s,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,h.__webglTexture,0)}a.__currentActiveCubeFace=e.activeCubeFace}else{e.addEventListener("dispose",this.onRenderTargetDispose,this),a.__webglFramebuffer=t.createFramebuffer(),a.__currentActiveCubeFace=e.activeCubeFace,t.bindFramebuffer(t.FRAMEBUFFER,a.__webglFramebuffer);var o=[];for(var s in e._textures){var h=n.setTextureCube(e._textures[s]);(s=Number(s))!==gi.DEPTH_ATTACHMENT&&s!==gi.DEPTH_STENCIL_ATTACHMENT||r.version<2&&!r.getExtension("WEBGL_depth_texture")&&console.warn("extension WEBGL_depth_texture is not support in webgl 1.0."),t.framebufferTexture2D(t.FRAMEBUFFER,s,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,h.__webglTexture,0),i.bindTexture(t.TEXTURE_CUBE_MAP,null),(s<=36073&&s>=36064||s<=577045&&s>=577040)&&o.push(s)}if(o.length>1&&(r.version>=2?t.drawBuffers(o):r.getExtension("WEBGL_draw_buffers")&&r.getExtension("WEBGL_draw_buffers").drawBuffersWEBGL(o)),r.version>=2&&e.multipleSampling>0){u=t.createRenderbuffer();t.bindRenderbuffer(t.RENDERBUFFER,u),t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.min(e.multipleSampling,8),t.RGBA8,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,u),a.__multipleSamplingbuffer=u}if(e.depthBuffer&&!e._textures[gi.DEPTH_STENCIL_ATTACHMENT]&&!e._textures[gi.DEPTH_ATTACHMENT]){a.__webglDepthbuffer=t.createRenderbuffer();var u=a.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,u),e.stencilBuffer?(r.version>=2&&e.multipleSampling>0?t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.min(e.multipleSampling,8),t.DEPTH24_STENCIL8,e.width,e.height):t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,u)):(r.version>=2&&e.multipleSampling>0?t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.min(e.multipleSampling,8),t.DEPTH_COMPONENT16,e.width,e.height):t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,u)),t.bindRenderbuffer(t.RENDERBUFFER,null)}var c=t.checkFramebufferStatus(t.FRAMEBUFFER);c!==t.FRAMEBUFFER_COMPLETE&&(c===t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_ATTACHMENT"):c===t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"):c===t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_DIMENSIONS"):c===t.FRAMEBUFFER_UNSUPPORTED?console.warn("framebuffer not complete: FRAMEBUFFER_UNSUPPORTED"):c===t.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"):console.warn("framebuffer not complete."))}},blitRenderTarget:function(e,t){var i=this.gl,n=this.properties,r=this.capabilities;if(r.version<2)console.warn("blitFramebuffer not support by WebGL"+r.version);else{var a=n.get(e).__webglFramebuffer,s=n.get(t).__webglFramebuffer;i.bindFramebuffer(i.READ_FRAMEBUFFER,a),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,s),i.clearBufferfv(i.COLOR,0,[0,0,0,0]),i.blitFramebuffer(0,0,e.width,e.height,0,0,t.width,t.height,i.COLOR_BUFFER_BIT,i.NEAREST)}},updateRenderTargetMipmap:function(e){var t=this.gl,i=this.state,n=e.texture;if(n.generateMipmaps&&pt(e)&&n.minFilter!==t.NEAREST&&n.minFilter!==t.LINEAR){var r=n.textureType,a=this.properties.get(n).__webglTexture;i.bindTexture(r,a),t.generateMipmap(r),i.bindTexture(r,null)}},onRenderTargetDispose:function(e){var t=this.gl,i=e.target,n=this.properties.get(i);i.removeEventListener("dispose",this.onRenderTargetDispose,this),n.__webglFramebuffer&&t.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),this.properties.delete(i)},setRenderTarget:function(e){var t=this.gl,i=this.state;if(e.view)i.currentRenderTarget===e||(t.bindFramebuffer(t.FRAMEBUFFER,null),i.currentRenderTarget=e);else{var n=void 0!==e.activeCubeFace;if(i.currentRenderTarget!==e)n?this.setRenderTargetCube(e):this.setRenderTarget2D(e),i.currentRenderTarget=e;else if(n){var r=this.properties.get(e);if(r.__currentActiveCubeFace!==e.activeCubeFace){for(var a in e._textures){var s=this.properties.get(e._textures[a]);t.framebufferTexture2D(t.FRAMEBUFFER,a,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,s.__webglTexture,0)}r.__currentActiveCubeFace=e.activeCubeFace}}}}});var Ni=new o,Li=new f,Pi=function(){var e,t=new M;return function(i,n){(!e||e.length<4*i.length)&&(e=new Float32Array(4*i.length));for(var r=0;r<i.length;r++)t.copy(i[r]),e[4*r+0]=t.normal.x,e[4*r+1]=t.normal.y,e[4*r+2]=t.normal.z,e[4*r+3]=t.constant;return e}}(),Ri=[],Oi=[],Fi=[],Di=[],Ui=[];Object.assign(gt.prototype,{clear:function(e,t,i){var n=this.gl,r=0;(void 0===e||e)&&(r|=n.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=n.DEPTH_BUFFER_BIT),(void 0===i||i)&&(r|=n.STENCIL_BUFFER_BIT),n.clear(r)},render:function(e,t,i){var n;n=(i=void 0===i||i)?e.updateRenderList(t):e.getRenderList(t),this.renderPass(n.opaque,t,{scene:e,getMaterial:function(t){return e.overrideMaterial||t.material}}),this.renderPass(n.transparent,t,{scene:e,getMaterial:function(t){return e.overrideMaterial||t.material}})},renderPass:function(e,t,i){i=i||{};for(var n=this.gl,r=this.state,a=this.capabilities.getExtension("OES_vertex_array_object"),s=i.getMaterial||_t,o=i.beforeRender||mt,h=i.afterRender||mt,u=i.ifRender||vt,c=i.scene||{},l=r.currentRenderTarget,d=0,p=e.length;d<p;d++){var f=e[d];if(u(f)){var _=f.object,v=s.call(this,f),m=f.geometry,g=f.group;_.onBeforeRender(f,v),o.call(this,f,v);var E=this.properties.get(v);if(!1===v.needsUpdate)if(void 0===E.program)v.needsUpdate=!0;else if(E.fog!==c.fog)v.needsUpdate=!0;else if(c.clippingPlanes&&c.clippingPlanes.length!==E.numClippingPlanes)v.needsUpdate=!0;else if(t.gammaInput!==E.gammaInput||t.gammaOutput!==E.gammaOutput||t.gammaFactor!==E.gammaFactor)v.needsUpdate=!0;else{var M=v.acceptLight&&!!c.lights&&c.lights.totalNum>0;M!==E.acceptLight?v.needsUpdate=!0:M&&(c.lights.hash.compare(E.lightsHash)&&_.receiveShadow===E.receiveShadow&&_.shadowType===E.shadowType||(v.needsUpdate=!0))}if(v.needsUpdate){void 0===E.program&&v.addEventListener("dispose",this.onMaterialDispose,this);E.program;E.program=this.programs.getProgram(t,v,_,c),E.fog=c.fog,c.lights?(E.acceptLight=v.acceptLight,E.lightsHash=c.lights.hash.copyTo(E.lightsHash),E.receiveShadow=_.receiveShadow,E.shadowType=_.shadowType):E.acceptLight=!1,E.numClippingPlanes=c.clippingPlanes?c.clippingPlanes.length:0,E.gammaInput=t.gammaInput,E.gammaOutput=t.gammaOutput,E.gammaFactor=t.gammaFactor,v.needsUpdate=!1}var x=E.program;r.setProgram(x);var S=this.geometry.setGeometry(m);if(this.capabilities.version>=2)S._vaos[x.id]?n.bindVertexArray(S._vaos[x.id]):(S._vaos[x.id]=n.createVertexArray(),n.bindVertexArray(S._vaos[x.id]),this.setupVertexAttributes(x,m));else if(a)S._vaos[x.id]?a.bindVertexArrayOES(S._vaos[x.id]):(S._vaos[x.id]=a.createVertexArrayOES(),a.bindVertexArrayOES(S._vaos[x.id]),this.setupVertexAttributes(x,m));else{var y=x.id+"_"+m.id;y!==this._currentGeometryProgram&&(this.setupVertexAttributes(x,m),this._currentGeometryProgram=y),this._currentGeometryProgram=y}for(var w,T=x.uniforms,b=0,A=T.seq.length;b<A;b++){var C=T.seq[b],N=C.id;if(v.uniforms&&void 0!==v.uniforms[N])C.type===di.SAMPLER_2D||C.type===di.SAMPLER_2D_SHADOW?(w=this.allocTexUnit(),this.texture.setTexture2D(v.uniforms[N],w),C.setValue(w)):C.type===di.SAMPLER_CUBE||C.type===di.SAMPLER_CUBE_SHADOW?(w=this.allocTexUnit(),this.texture.setTextureCube(v.uniforms[N],w),C.setValue(w)):C.type===di.SAMPLER_3D?(w=this.allocTexUnit(),this.texture.setTexture3D(v.uniforms[N],w),C.setValue(w)):C.set(v.uniforms[N]);else switch(N){case"u_Projection":if(_.type===Kt.CANVAS2D&&_.isScreenCanvas)L=_.orthoCamera.projectionMatrix.elements;else var L=t.projectionMatrix.elements;C.setValue(L);break;case"u_View":if(_.type===Kt.CANVAS2D&&_.isScreenCanvas)P=_.orthoCamera.viewMatrix.elements;else var P=t.viewMatrix.elements;C.setValue(P);break;case"u_Model":var R=_.worldMatrix.elements;C.setValue(R);break;case"u_Color":O=v.diffuse;C.setValue(O.r,O.g,O.b);break;case"u_Opacity":C.setValue(v.opacity);break;case"diffuseMap":w=this.allocTexUnit(),this.texture.setTexture2D(v.diffuseMap,w),C.setValue(w);break;case"normalMap":w=this.allocTexUnit(),this.texture.setTexture2D(v.normalMap,w),C.setValue(w);break;case"bumpMap":w=this.allocTexUnit(),this.texture.setTexture2D(v.bumpMap,w),C.setValue(w);break;case"bumpScale":C.setValue(v.bumpScale);break;case"envMap":w=this.allocTexUnit(),this.texture.setTextureCube(v.envMap,w),C.setValue(w);break;case"cubeMap":w=this.allocTexUnit(),this.texture.setTextureCube(v.cubeMap,w),C.setValue(w);break;case"u_EnvMap_Intensity":C.setValue(v.envMapIntensity);break;case"u_Specular":C.setValue(v.shininess);break;case"u_SpecularColor":O=v.specular;C.setValue(O.r,O.g,O.b,1);break;case"specularMap":w=this.allocTexUnit(),this.texture.setTexture2D(v.specularMap,w),C.setValue(w);break;case"aoMap":w=this.allocTexUnit(),this.texture.setTexture2D(v.aoMap,w),C.setValue(w);break;case"aoMapIntensity":C.setValue(v.aoMapIntensity);break;case"u_Roughness":C.setValue(v.roughness);break;case"roughnessMap":w=this.allocTexUnit(),this.texture.setTexture2D(v.roughnessMap,w),C.setValue(w);break;case"u_Metalness":C.setValue(v.metalness);break;case"metalnessMap":w=this.allocTexUnit(),this.texture.setTexture2D(v.metalnessMap,w),C.setValue(w);break;case"emissive":var O=v.emissive,F=v.emissiveIntensity;C.setValue(O.r*F,O.g*F,O.b*F);break;case"emissiveMap":w=this.allocTexUnit(),this.texture.setTexture2D(v.emissiveMap,w),C.setValue(w);break;case"u_CameraPosition":Ni.setFromMatrixPosition(t.worldMatrix),C.setValue(Ni.x,Ni.y,Ni.z);break;case"u_FogColor":O=c.fog.color;C.setValue(O.r,O.g,O.b);break;case"u_FogDensity":C.setValue(c.fog.density);break;case"u_FogNear":C.setValue(c.fog.near);break;case"u_FogFar":C.setValue(c.fog.far);break;case"u_PointSize":C.setValue(v.size);break;case"u_PointScale":var D=.5*l.height;C.setValue(D);break;case"dashSize":C.setValue(v.dashSize);break;case"totalSize":C.setValue(v.dashSize+v.gapSize);break;case"scale":C.setValue(v.scale);break;case"clippingPlanes":var U=Pi(c.clippingPlanes||[],t);C.set(U);break;case"uvTransform":var I;(I=v.diffuseMap||v.specularMap||v.normalMap||v.bumpMap||v.roughnessMap||v.metalnessMap||v.emissiveMap)&&(I.matrixAutoUpdate&&I.updateMatrix(),C.setValue(I.matrix.elements))}}_.type===Kt.SKINNED_MESH&&this.uploadSkeleton(T,_,x.program),v.acceptLight&&c.lights&&this.uploadLights(T,c.lights,_.receiveShadow,t);var z=_.worldMatrix.determinant()<0;this.setStates(v,z);var B=Li.set(l.width,l.height,l.width,l.height).multiply(t.rect);if(B.z-=B.x,B.w-=B.y,B.x=Math.floor(B.x),B.y=Math.floor(B.y),B.z=Math.floor(B.z),B.w=Math.floor(B.w),_.type===Kt.CANVAS2D){_.isScreenCanvas&&(_.setRenderViewport(B.x,B.y,B.z,B.w),r.viewport(_.viewport.x,_.viewport.y,_.viewport.z,_.viewport.w));for(var G=0,H=0;H<_.drawArray.length;H++){var k=_.drawArray[H];w=this.allocTexUnit(),this.texture.setTexture2D(k.texture,w),T.set("spriteTexture",w),n.drawElements(n.TRIANGLES,6*k.count,n.UNSIGNED_SHORT,2*G),G+=6*k.count,this._usedTextureUnits=0}}else r.viewport(B.x,B.y,B.z,B.w),this.draw(m,v,g);this.capabilities.version>=2?n.bindVertexArray(null):a&&a.bindVertexArrayOES(null),this._usedTextureUnits=0,r.depthBuffer.setTest(!0),r.depthBuffer.setMask(!0),r.colorBuffer.setMask(!0),h(this,f),_.onAfterRender(f)}}},setStates:function(e,t){var i=this.state;e.transparent?i.setBlend(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):i.setBlend(ei.NONE),i.depthBuffer.setTest(e.depthTest),i.depthBuffer.setMask(e.depthWrite),i.colorBuffer.setMask(e.colorWrite),i.setCullFace(e.side===ri.DOUBLE?ni.NONE:ni.BACK);var n=e.side===ri.BACK;t&&(n=!n),i.setFlipSided(n),void 0!==e.lineWidth&&i.setLineWidth(e.lineWidth),i.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},draw:function(e,t,i){var n=this.gl,r=this.properties,a=this.capabilities,s=null!==e.index,o=0,h=s?e.index.count:e.getAttribute("a_Position").count,u=i?i.start:0,c=i?i.count:1/0;if(o=Math.max(o,u),h=Math.min(h,c),s){var l=r.get(e.index),d=l.bytesPerElement,p=l.type;p===n.UNSIGNED_INT&&a.version<2&&!a.getExtension("OES_element_index_uint")&&console.warn("draw elements type not support UNSIGNED_INT!"),e.isInstancedGeometry?e.maxInstancedCount>0&&(a.version>=2?n.drawElementsInstanced(t.drawMode,h,p,o*d,e.maxInstancedCount):a.getExtension("ANGLE_instanced_arrays")?a.getExtension("ANGLE_instanced_arrays").drawElementsInstancedANGLE(t.drawMode,h,p,o*d,e.maxInstancedCount):console.warn("no support instanced draw.")):n.drawElements(t.drawMode,h,p,o*d)}else e.isInstancedGeometry?e.maxInstancedCount>0&&(a.version>=2?n.drawArraysInstanced(t.drawMode,o,h,e.maxInstancedCount):a.getExtension("ANGLE_instanced_arrays")?a.getExtension("ANGLE_instanced_arrays").drawArraysInstancedANGLE(t.drawMode,o,h,e.maxInstancedCount):console.warn("no support instanced draw.")):n.drawArrays(t.drawMode,o,h)},uploadSkeleton:function(e,t,i){if(t.skeleton&&t.skeleton.bones.length>0){var r=t.skeleton,a=this.capabilities;if(r.updateBones(),a.maxVertexTextures>0&&(a.getExtension("OES_texture_float")||a.version>=2)){if(void 0===r.boneTexture){var s=Math.sqrt(4*r.bones.length);s=n(Math.ceil(s)),s=Math.max(4,s);var o=new Float32Array(s*s*4);o.set(r.boneMatrices);var h=new P;h.image={data:o,width:s,height:s},a.version>=2&&(h.internalformat=oi.RGBA32F,h.format=oi.RGBA),h.type=hi.FLOAT,h.magFilter=ui.NEAREST,h.minFilter=ui.NEAREST,h.generateMipmaps=!1,h.flipY=!1,r.boneMatrices=o,r.boneTexture=h}var u=this.allocTexUnit();this.texture.setTexture2D(r.boneTexture,u),e.set("boneTexture",u),e.set("boneTextureSize",r.boneTexture.image.width)}else e.set("boneMatrices",r.boneMatrices);e.set("bindMatrix",t.bindMatrix.elements),e.set("bindMatrixInverse",t.bindMatrixInverse.elements)}},uploadLights:function(e,t,i,n){if(t.ambientsNum>0&&e.set("u_AmbientLightColor",t.ambient),t.directsNum>0){e.set("u_Directional",t.directional);for(a=0;a<t.directsNum;a++)if(o=(s=t.directional[a]).shadow&&i){var r=this.allocTexUnit();this.texture.setTexture2D(t.directionalShadowMap[a],r),Ri[a]=r,e.has("directionalDepthMap")&&(r=this.allocTexUnit(),this.texture.setTexture2D(t.directionalDepthMap[a],r),Oi[a]=r)}Ri.length>0&&(e.set("directionalShadowMap",Ri),Ri.length=0,e.set("directionalShadowMatrix",t.directionalShadowMatrix)),Oi.length>0&&(e.set("directionalDepthMap",Oi),Oi.length=0)}if(t.pointsNum>0){e.set("u_Point",t.point);for(a=0;a<t.pointsNum;a++)(o=(s=t.point[a]).shadow&&i)&&(r=this.allocTexUnit(),this.texture.setTextureCube(t.pointShadowMap[a],r),Fi[a]=r);Fi.length>0&&(e.set("pointShadowMap",Fi),Fi.length=0)}if(t.spotsNum>0){e.set("u_Spot",t.spot);for(var a=0;a<t.spotsNum;a++){var s=t.spot[a],o=s.shadow&&i;o&&(r=this.allocTexUnit(),this.texture.setTexture2D(t.spotShadowMap[a],r),Di[a]=r,e.has("spotDepthMap")&&(r=this.allocTexUnit(),this.texture.setTexture2D(t.spotDepthMap[a],r),Ui[a]=r))}Di.length>0&&(e.set("spotShadowMap",Di),Di.length=0,e.set("spotShadowMatrix",t.spotShadowMatrix)),Ui.length>0&&(e.set("spotDepthMap",Ui),Ui.length=0)}},allocTexUnit:function(){var e=this._usedTextureUnits;return e>=this.capabilities.maxTextures&&console.warn("trying to use "+e+" texture units while this GPU supports only "+this.capabilities.maxTextures),this._usedTextureUnits+=1,e},setupVertexAttributes:function(e,t){var i=this.gl,n=e.attributes,r=this.properties,a=this.capabilities;for(var s in n){var o=n[s],h=t.getAttribute(s);if(h){var u=h.normalized,c=h.size;o.count!==c&&console.warn("WebGLCore: attribute "+s+" size not match! "+o.count+" : "+c);var l,d=(l=h.isInterleavedBufferAttribute?r.get(h.data):r.get(h)).buffer,p=l.type;o.format;var f=l.bytesPerElement;if(h.isInterleavedBufferAttribute){var _=h.data,v=_.stride,m=h.offset;i.enableVertexAttribArray(o.location),_&&_.isInstancedInterleavedBuffer&&(a.version>=2?i.vertexAttribDivisor(o.location,_.meshPerAttribute):a.getExtension("ANGLE_instanced_arrays")?a.getExtension("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(o.location,_.meshPerAttribute):console.warn("vertexAttribDivisor not supported"),void 0===t.maxInstancedCount&&(t.maxInstancedCount=_.meshPerAttribute*_.count)),i.bindBuffer(i.ARRAY_BUFFER,d),i.vertexAttribPointer(o.location,o.count,p,u,f*v,f*m)}else i.enableVertexAttribArray(o.location),h&&h.isInstancedBufferAttribute&&(a.version>=2?i.vertexAttribDivisor(o.location,h.meshPerAttribute):a.getExtension("ANGLE_instanced_arrays")?a.getExtension("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(o.location,h.meshPerAttribute):console.warn("vertexAttribDivisor not supported"),void 0===t.maxInstancedCount&&(t.maxInstancedCount=h.meshPerAttribute*h.count)),i.bindBuffer(i.ARRAY_BUFFER,d),i.vertexAttribPointer(o.location,o.count,p,u,0,0)}else console.warn("WebGLCore: geometry attribute "+s+" not found!")}if(t.index){var g=r.get(t.index);i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,g.buffer)}},onMaterialDispose:function(e){var t=e.target,i=this.properties.get(t);t.removeEventListener("dispose",onMaterialDispose,this);var n=i.get(t).program;void 0!==n&&this.programs.releaseProgram(n),i.delete(t)}}),Et.prototype=Object.assign(Object.create(F.prototype),{constructor:Et,lookAt:function(){var e=new s;return function(t,i){e.lookAtRH(this.position,t,i),this.quaternion.setFromRotationMatrix(e)}}(),setOrtho:function(e,t,i,n,r,a){this.projectionMatrix.set(2/(t-e),0,0,-(t+e)/(t-e),0,2/(n-i),0,-(n+i)/(n-i),0,0,-2/(a-r),-(a+r)/(a-r),0,0,0,1)},setPerspective:function(e,t,i,n){this.projectionMatrix.set(1/(t*Math.tan(e/2)),0,0,0,0,1/Math.tan(e/2),0,0,0,0,-(n+i)/(n-i),-2*n*i/(n-i),0,0,-1,0)},getWorldDirection:function(){var e=new o,t=new v,i=new o;return function(n){var r=n||new o;return this.worldMatrix.decompose(e,t,i),r.set(0,0,-1).applyQuaternion(t),r}}(),updateMatrix:function(){var e=new s;return function(){F.prototype.updateMatrix.call(this),this.viewMatrix.getInverse(this.worldMatrix),e.multiplyMatrices(this.projectionMatrix,this.viewMatrix),this.frustum.setFromMatrix(e)}}(),copy:function(e,t){return F.prototype.copy.call(this,e,t),this.viewMatrix.copy(e.viewMatrix),this.projectionMatrix.copy(e.projectionMatrix),this}}),Mt.prototype=Object.assign(Object.create(a.prototype),{constructor:Mt,resize:function(e,t){return(this.width!==e||this.height!==t)&&(this.dispose(),this.width=e,this.height=t,!0)},dispose:function(){this.dispatchEvent({type:"dispose"})}}),xt.prototype=Object.create(Mt.prototype),xt.prototype.constructor=xt,xt.prototype=Object.assign(Object.create(Mt.prototype),{constructor:xt,attach:function(e,t){for(var i=!1,n=0;n<6;n++)e.images[n]&&e.images[n].rtt?e.images[n].width===this.width&&e.images[n].height===this.height||(e.images[n].width=this.width,e.images[n].height=this.height,i=!0):(e.images[n]={rtt:!0,data:null,width:this.width,height:this.height},i=!0);i&&e.version++,this._textures[t||gi.COLOR_ATTACHMENT0]=e},detach:function(e){delete this._textures[e||gi.COLOR_ATTACHMENT0]},resize:function(e,t){if(Mt.prototype.resize.call(this,e,t))for(var i in this._textures){var n=this._textures[i];if(n){for(var r=0;r<6;r++)n.images[r]={rtt:!0,data:null,width:this.width,height:this.height};n.version++}}}}),Object.defineProperties(xt.prototype,{texture:{set:function(e){e?this.attach(e,gi.COLOR_ATTACHMENT0):this.detach(gi.COLOR_ATTACHMENT0)},get:function(){return this._textures[gi.COLOR_ATTACHMENT0]}}}),St.prototype.render=function(e,t){this.camera.position.copy(this.position);for(var i=0;i<6;i++)this.lookTarget.set(this.targets[i].x+this.camera.position.x,this.targets[i].y+this.camera.position.y,this.targets[i].z+this.camera.position.z),this.camera.lookAt(this.lookTarget,this.ups[i]),this.camera.updateMatrix(),this.renderTarget.activeCubeFace=i,e.renderTarget.setRenderTarget(this.renderTarget),e.clear(!0,!0,!0),e.render(t,this.camera),e.renderTarget.updateRenderTargetMipmap(this.renderTarget)},wt.prototype.render=function(e,t){var i=e.gl,n=e.state,r=n.states[i.STENCIL_TEST];r&&n.stencilBuffer.setTest(!1),this.oldClearColor.copy(n.colorBuffer.getClear()),n.colorBuffer.setClear(1,1,1,1);for(var a=t.lights.shadows,s=0;s<a.length;s++){var o=a[s],h=o.shadow,u=h.camera,c=h.renderTarget,l=o.lightType==Qt.POINT,d=l?6:1;e.capabilities.version>=2&&(l||yt(h));for(var p=0;p<d;p++){l?(h.update(o,p),c.activeCubeFace=p):h.update(o);var f=t.updateRenderList(u);e.renderTarget.setRenderTarget(c),e.clear(!0,!0);var _=l?this.distanceMaterial:this.depthMaterial;_.uniforms=_.uniforms||{},_.uniforms.nearDistance=h.cameraNear,_.uniforms.farDistance=h.cameraFar,e.renderPass(f.opaque,u,{getMaterial:function(e){return _.side=e.material.side,_},ifRender:function(e){return e.object.castShadow}})}}r&&n.stencilBuffer.setTest(!0),n.colorBuffer.setClear(this.oldClearColor.x,this.oldClearColor.y,this.oldClearColor.z,this.oldClearColor.w)};var Ii=new o,zi=new WeakMap;Object.assign(bt.prototype,{update:function(e){this._factor[0]=e.ambientsNum,this._factor[1]=e.directsNum,this._factor[2]=e.pointsNum,this._factor[3]=e.spotsNum},compare:function(e){return!!e&&!(this._factor[0]!==e[0]||this._factor[1]!==e[1]||this._factor[2]!==e[2]||this._factor[3]!==e[3])},copyTo:function(e){return e||(e=new Uint16Array(4)),e.set(this._factor),e}}),Object.assign(At.prototype,{startCount:function(){for(var e=0;e<3;e++)this.ambient[e]=0;this.shadows.length=0,this.ambientsNum=0,this.directsNum=0,this.pointsNum=0,this.spotsNum=0,this.shadowsNum=0,this.totalNum=0},add:function(e){e.lightType==Qt.AMBIENT?this._doAddAmbientLight(e):e.lightType==Qt.DIRECT?this._doAddDirectLight(e):e.lightType==Qt.POINT?this._doAddPointLight(e):e.lightType==Qt.SPOT&&this._doAddSpotLight(e),e.castShadow&&e.lightType!==Qt.AMBIENT&&(this.shadows.push(e),this.shadowsNum++),this.totalNum++},endCount:function(){this.hash.update(this)},_doAddAmbientLight:function(e){var t=e.intensity,i=e.color;this.ambient[0]+=i.r*t,this.ambient[1]+=i.g*t,this.ambient[2]+=i.b*t,this.ambientsNum++},_doAddDirectLight:function(e){var t=e.intensity,i=e.color,n=Tt(e);n.color[0]=i.r*t,n.color[1]=i.g*t,n.color[2]=i.b*t;var r=Ii;if(e.getWorldDirection(r),n.direction[0]=r.x,n.direction[1]=r.y,n.direction[2]=r.z,e.castShadow?(n.shadow=1,n.shadowBias=e.shadow.bias,n.shadowRadius=e.shadow.radius,n.shadowMapSize[0]=e.shadow.mapSize.x,n.shadowMapSize[1]=e.shadow.mapSize.y):n.shadow=0,e.castShadow){var a=16*(this.directsNum+1);if(this.directionalShadowMatrix.length<a){var s=this.directionalShadowMatrix;this.directionalShadowMatrix=new Float32Array(a),this.directionalShadowMatrix.set(s)}this.directionalShadowMatrix.set(e.shadow.matrix.elements,16*this.directsNum),this.directionalShadowMap[this.directsNum]=e.shadow.depthMap||e.shadow.map,this.directionalDepthMap[this.directsNum]=e.shadow.map}this.directional[this.directsNum]=n,this.directsNum++},_doAddPointLight:function(e){var t=e.intensity,i=e.color,n=e.distance,r=e.decay,a=Tt(e);a.color[0]=i.r*t,a.color[1]=i.g*t,a.color[2]=i.b*t,a.distance=n,a.decay=r;var s=Ii.setFromMatrixPosition(e.worldMatrix);if(a.position[0]=s.x,a.position[1]=s.y,a.position[2]=s.z,e.castShadow?(a.shadow=1,a.shadowBias=e.shadow.bias,a.shadowRadius=e.shadow.radius,a.shadowMapSize[0]=e.shadow.mapSize.x,a.shadowMapSize[1]=e.shadow.mapSize.y,a.shadowCameraNear=e.shadow.cameraNear,a.shadowCameraFar=e.shadow.cameraFar):a.shadow=0,e.castShadow){var o=16*(this.pointsNum+1);if(this.pointShadowMatrix.length<o){var h=this.pointShadowMatrix;this.pointShadowMatrix=new Float32Array(o),this.pointShadowMatrix.set(h)}this.pointShadowMatrix.set(e.shadow.matrix.elements,16*this.pointsNum),this.pointShadowMap[this.pointsNum]=e.shadow.map}this.point[this.pointsNum]=a,this.pointsNum++},_doAddSpotLight:function(e){var t=e.intensity,i=e.color,n=e.distance,r=e.decay,a=Tt(e);a.color[0]=i.r*t,a.color[1]=i.g*t,a.color[2]=i.b*t,a.distance=n,a.decay=r;var s=Ii.setFromMatrixPosition(e.worldMatrix);a.position[0]=s.x,a.position[1]=s.y,a.position[2]=s.z;var o=Ii;e.getWorldDirection(Ii),a.direction[0]=o.x,a.direction[1]=o.y,a.direction[2]=o.z;var h=Math.cos(e.angle),u=Math.cos(e.angle*(1-e.penumbra));if(a.coneCos=h,a.penumbraCos=u,e.castShadow?(a.shadow=1,a.shadowBias=e.shadow.bias,a.shadowRadius=e.shadow.radius,a.shadowMapSize[0]=e.shadow.mapSize.x,a.shadowMapSize[1]=e.shadow.mapSize.y):a.shadow=0,e.castShadow){var c=16*(this.spotsNum+1);if(this.spotShadowMatrix.length<c){var l=this.spotShadowMatrix;this.spotShadowMatrix=new Float32Array(c),this.spotShadowMatrix.set(l)}this.spotShadowMatrix.set(e.shadow.matrix.elements,16*this.spotsNum),this.spotShadowMap[this.spotsNum]=e.shadow.depthMap||e.shadow.map,this.spotDepthMap[this.spotsNum]=e.shadow.map}this.spot[this.spotsNum]=a,this.spotsNum++}});var Bi=new o,Gi=new E,Hi=function(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id},ki=function(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.material.id!==t.material.id?e.material.id-t.material.id:e.id-t.id};Nt.prototype=Object.assign(Object.create(F.prototype),{constructor:Nt,updateRenderList:function(e){this._renderListMap.has(e)||this._renderListMap.set(e,new Ct);var t=this._renderListMap.get(e);return t.startCount(),this._doUpdateRenderList(this,e,t),t.endCount(),t.sort(),t},getRenderList:function(e){return this._renderListMap.get(e)},updateLights:function(){var e=this.lights;return e.startCount(),this._doUpdateLights(this),e.endCount(),e},_doUpdateRenderList:function(e,t,i){if(e.visible&&(e.geometry&&e.material&&i.add(e,t),Kt.CANVAS2D!==e.type))for(var n=e.children,r=0,a=n.length;r<a;r++)this._doUpdateRenderList(n[r],t,i)},_doUpdateLights:function(e){if(e.visible&&(Kt.LIGHT===e.type&&this.lights.add(e),Kt.CANVAS2D!==e.type))for(var t=e.children,i=0,n=t.length;i<n;i++)this._doUpdateLights(t[i])}}),Lt.prototype=Object.assign(Object.create(F.prototype),{constructor:Lt,raycast:function(){function e(e,t,i,n,r,a,s){return y.barycoordFromPoint(e,t,i,n,u),r.multiplyScalar(u.x),a.multiplyScalar(u.y),s.multiplyScalar(u.z),r.add(a).add(s),r.clone()}function t(e,t,i,n,r,a,s){if(null===i.intersectTriangle(a,r,n,!0,s))return null;M.copy(s),M.applyMatrix4(e.worldMatrix);var o=t.ray.origin.distanceTo(M);return o<t.near||o>t.far?null:{distance:o,point:M.clone(),object:e}}var i=new E,n=new g,r=new s,a=new h,u=new o,c=new o,l=new o,d=new o,f=new p,_=new p,v=new p,m=new o,M=new o;return function(s,o){var h=this.geometry,u=this.worldMatrix;if(i.copy(h.boundingSphere),i.applyMatrix4(u),s.ray.intersectsSphere(i)&&(n.copy(h.boundingBox),n.applyMatrix4(u),s.ray.intersectsBox(n))){r.getInverse(u),a.copy(s.ray).applyMatrix4(r);for(var p,g,E,M=h.index.array,x=h.getAttribute("a_Position"),S=h.getAttribute("a_Uv"),y=0;y<M.length;y+=3){p=M[y],g=M[y+1],E=M[y+2],c.fromArray(x.array,3*p),l.fromArray(x.array,3*g),d.fromArray(x.array,3*E);var w=t(this,s,a,c,l,d,m);w&&(f.fromArray(S.array,2*p),_.fromArray(S.array,2*g),v.fromArray(S.array,2*E),w.uv=e(m,c,l,d,f,_,v),w.face=[p,g,E],w.faceIndex=p,o.push(w))}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Pt.prototype.render=function(e){e.renderPass(this.renderList.opaque,this.camera,this.renderConfig)},Rt.prototype=Object.assign(Object.create(Mt.prototype),{constructor:Rt,resize:function(e,t){this.view.width=e,this.view.height=t,this.width=e,this.height=t},dispose:function(){}}),Object.assign(Ot.prototype,{getEntity:function(e){return this._entities[e]},getFps:function(){var e=this.getEntity("fps");return e&&e.averageDelta?Math.floor(1e3/e.averageDelta):0},updateFps:function(){this.enableCounter&&(this.endCounter("fps"),this.startCounter("fps",60))},getNow:function(){return window.performance?window.performance.now():(new Date).getTime()},startCounter:function(e,t){if(this.enableCounter){var i=this._entities[e];i||(i={start:0,end:0,delta:0,_cache:[],averageRange:1,averageDelta:0},this._entities[e]=i),i.start=this.getNow(),i.averageRange=t||1}},endCounter:function(e){if(this.enableCounter){var t=this._entities[e];if(t&&(t.end=this.getNow(),t.delta=t.end-t.start,t.averageRange>1)){t._cache.push(t.delta);var i=t._cache.length;if(i>=t.averageRange){i>t.averageRange&&(t._cache.shift(),i--);for(var n=0,r=0;r<i;r++)n+=t._cache[r];t.averageDelta=n/i}}}}}),Ft.prototype.render=function(e,t,i,n){var r=this.performance;r.updateFps(),r.startCounter("render",60),this.matrixAutoUpdate&&e.updateMatrix(),this.lightsAutoupdate&&e.updateLights(),r.startCounter("renderShadow",60),(this.shadowAutoUpdate||this.shadowNeedsUpdate)&&(this.shadowMapPass.render(this.glCore,e),this.shadowNeedsUpdate=!1),r.endCounter("renderShadow"),void 0===i&&(i=this.backRenderTarget),this.glCore.renderTarget.setRenderTarget(i),(this.autoClear||n)&&this.glCore.clear(!0,!0,!0),r.startCounter("renderList",60),this.glCore.render(e,t),r.endCounter("renderList"),i.texture&&this.glCore.renderTarget.updateRenderTargetMipmap(i),this.performance.endCounter("render")},Dt.prototype=Object.assign(Object.create(Mt.prototype),{constructor:Dt,attach:function(e,t){e.image&&e.image.rtt?e.image.width===this.width&&e.image.height===this.height||(e.version++,e.image.width=this.width,e.image.height=this.height):(e.version++,e.image={rtt:!0,data:null,width:this.width,height:this.height}),this._textures[t||gi.COLOR_ATTACHMENT0]=e},detach:function(e){delete this._textures[e||gi.COLOR_ATTACHMENT0]},resize:function(e,t){var i=Mt.prototype.resize.call(this,e,t);if(i)for(var n in this._textures){var r=this._textures[n];r&&(r.image={rtt:!0,data:null,width:this.width,height:this.height},r.version++)}return i}}),Object.defineProperties(Dt.prototype,{texture:{set:function(e){e?this.attach(e,gi.COLOR_ATTACHMENT0):this.detach(gi.COLOR_ATTACHMENT0)},get:function(){return this._textures[gi.COLOR_ATTACHMENT0]}}}),(Ut.prototype=Object.create(F.prototype)).constructor=Ut,It.prototype=Object.assign(Object.create(F.prototype),{constructor:It,copy:function(e){return F.prototype.copy.call(this,e),this.type=e.type,this.lightType=e.lightType,this.color.copy(e.color),this.intensity=e.intensity,this}}),(zt.prototype=Object.create(It.prototype)).constructor=zt,Object.assign(Bt.prototype,{update:function(e,t){},copy:function(e){return this.camera.copy(e.camera),this.matrix.copy(e.matrix),this.bias=e.bias,this.radius=e.radius,this.cameraNear=e.cameraNear,this.cameraFar=e.cameraFar,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)}}),Gt.prototype=Object.assign(Object.create(Bt.prototype),{constructor:Gt,update:function(e){this._updateCamera(e),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e){var t=this.camera,i=this._lookTarget;e.getWorldDirection(this._lookTarget),t.position.setFromMatrixPosition(e.worldMatrix),i.set(i.x+t.position.x,i.y+t.position.y,i.z+t.position.z),t.lookAt(i,this._up),t.updateMatrix();var n=this.windowSize/2;t.setOrtho(-n,n,-n,n,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)},copy:function(e){return Bt.prototype.copy.call(this,e),this.windowSize=e.windowSize,this}}),Ht.prototype=Object.assign(Object.create(It.prototype),{constructor:Ht,copy:function(e){return It.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),kt.prototype=Object.assign(Object.create(Bt.prototype),{constructor:kt,update:function(e,t){this._updateCamera(e,t),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e,t){var i=this.camera,n=this._lookTarget,r=this._targets,a=this._ups;i.position.setFromMatrixPosition(e.worldMatrix),n.set(r[t].x+i.position.x,r[t].y+i.position.y,r[t].z+i.position.z),i.lookAt(n,a[t]),i.updateMatrix(),i.setPerspective(.5*Math.PI,1,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)}}),Vt.prototype=Object.assign(Object.create(It.prototype),{constructor:Vt,copy:function(e){return It.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),jt.prototype=Object.assign(Object.create(Bt.prototype),{constructor:jt,update:function(e){this._updateCamera(e),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e){var t=this.camera,i=this._lookTarget;e.getWorldDirection(this._lookTarget),t.position.setFromMatrixPosition(e.worldMatrix),i.set(i.x+t.position.x,i.y+t.position.y,i.z+t.position.z),t.lookAt(i,this._up),t.updateMatrix(),t.setPerspective(2*e.angle,1,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)}}),Xt.prototype=Object.assign(Object.create(It.prototype),{constructor:Xt,copy:function(e){return It.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),Wt.prototype=Object.assign(Object.create(Lt.prototype),{constructor:Wt,bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrix(),t=this.worldMatrix),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},updateMatrix:function(){Lt.prototype.updateMatrix.call(this),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.worldMatrix):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("zen3d.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),e.TorusKnotGeometry=oe,e.Bone=D,e.RenderTargetBack=Rt,e.SpotLight=Xt,e.ShaderChunk=bi,e.LineDashedMaterial=ve,e.FileLoader=N,e.LightShadow=Bt,e.LoadingManager=A,e.ColorKeyframeTrack=j,e.PhongMaterial=le,e.LineMaterial=fe,e.Geometry=Q,e.RenderTargetBase=Mt,e.Scene=Nt,e.Curve=w,e.DistanceMaterial=Ee,e.WebGLUniforms=qe,e.DirectionalLight=Ht,e.WebGLAttribute=Ze,e.WebGLState=Te,e.Vector2=p,e.DepthMaterial=ge,e.Plane=M,e.Material=he,e.BooleanKeyframeTrack=V,e.Matrix3=_,e.PlaneGeometry=ae,e.ImageLoader=C,e.SkinnedMesh=Wt,e.WebGLCapabilities=Me,e.Vector3=o,e.PropertyBindingMixer=G,e.WebGLPrograms=dt,e.ShaderPostPass=Pt,e.AnimationMixer=H,e.Frustum=x,e.PointsMaterial=pe,e.DefaultLoadingManager=Mi,e.Texture3D=O,e.Skeleton=U,e.Object3D=F,e.LightCache=At,e.WebGLGeometry=ze,e.KeyframeClip=X,e.InstancedBufferAttribute=ee,e.FogExp2=function(e,t){this.fogType=$t.EXP2,this.color=new S(void 0!==e?e:0),this.density=void 0!==t?t:25e-5},e.Raycaster=u,e.RenderList=Ct,e.InterleavedBuffer=ie,e.Mesh=Lt,e.CubeGeometry=J,e.RenderTarget2D=Dt,e.WebGLProperties=be,e.WebGLCore=gt,e.StringKeyframeTrack=q,e.Light=It,e.PointLightShadow=kt,e.KeyframeTrack=k,e.DirectionalLightShadow=Gt,e.BufferAttribute=K,e.LineLoopMaterial=_e,e.ShaderMaterial=me,e.TGALoader=L,e.Spherical=T,e.Camera=Et,e.InterleavedBufferAttribute=re,e.Ray=h,e.Triangle=y,e.Euler=d,e.AmbientLight=zt,e.RenderTargetCube=xt,e.PBRMaterial=de,e.ShaderLib=Ai,e.Fog=function(e,t,i){this.fogType=$t.NORMAL,this.color=new S(void 0!==e?e:0),this.near=void 0!==t?t:1,this.far=void 0!==i?i:1e3},e.NumberKeyframeTrack=W,e.TextureBase=b,e.InstancedInterleavedBuffer=ne,e.Texture2D=P,e.Box3=g,e.QuaternionKeyframeTrack=Y,e.Box2=m,e.BasicMaterial=ue,e.Renderer=Ft,e.WebGLProgram=et,e.SpotLightShadow=jt,e.CylinderGeometry=$,e.LambertMaterial=ce,e.Vector4=f,e.Quaternion=v,e.Color3=S,e.EventDispatcher=a,e.ShadowMapPass=wt,e.Group=Ut,e.TextureCube=R,e.Matrix4=s,e.Sphere=E,e.VectorKeyframeTrack=Z,e.EnvironmentMapPass=St,e.InstancedGeometry=te,e.PointLight=Vt,e.SphereGeometry=se,e.WebGLTexture=Oe,e.generateUUID=Yt,e.isMobile=qt,e.isWeb=Zt,e.createCheckerBoardPixels=function(e,t,i){var n=new Uint8Array(e*t*4),r=[[255,255,255,255],[0,0,0,255]];i=i||5;for(var a=0,s=0;s<t;s++)for(var o=0;o<e;o++){if(0==o?a=1:o%i==0&&(a=(a+1)%2),s%i==0&&0==o){var h=r[0];r[0]=r[1],r[1]=h}n[s*(4*e)+4*o+0]=r[a][0],n[s*(4*e)+4*o+1]=r[a][1],n[s*(4*e)+4*o+2]=r[a][2],n[s*(4*e)+4*o+3]=r[a][3]}return n},e.isPowerOfTwo=t,e.nearestPowerOfTwo=i,e.nextPowerOfTwo=n,e.cloneUniforms=r,e.halton=function(e,t){for(var i=0,n=1/t,r=e;r>0;)i+=n*(r%t),r=Math.floor(r/t),n/=t;return i},e.MATERIAL_TYPE=Jt,e.DRAW_MODE=mi,e.WEBGL_TEXTURE_FILTER=ui,e.WEBGL_COMPARE_FUNC=li,e.BLEND_EQUATION=ti,e.WEBGL_ATTRIBUTE_TYPE=pi,e.WEBGL_TEXTURE_TYPE=si,e.DRAW_SIDE=ri,e.SHADOW_TYPE=fi,e.FOG_TYPE=$t,e.CULL_FACE_TYPE=ni,e.WEBGL_PIXEL_TYPE=hi,e.WEBGL_TEXTURE_WRAP=ci,e.ENVMAP_COMBINE_TYPE=vi,e.BLEND_TYPE=ei,e.DRAW_BUFFER=Ei,e.WEBGL_PIXEL_FORMAT=oi,e.OBJECT_TYPE=Kt,e.LIGHT_TYPE=Qt,e.WEBGL_UNIFORM_TYPE=di,e.TEXEL_ENCODING_TYPE=_i,e.ATTACHMENT=gi,e.SHADING_TYPE=ai,e.BLEND_FACTOR=ii,Object.defineProperty(e,"__esModule",{value:!0})});