// github.com/shawn0326/zen-3d
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.zen3d={})}(this,function(e){"use strict";var t,r,n,i,c=(r="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),n=new Array(36),i=0,function(){for(var e=0;e<36;e++)8===e||13===e||18===e||23===e?n[e]="-":14===e?n[e]="4":(i<=2&&(i=33554432+16777216*Math.random()|0),t=15&i,i>>=4,n[e]=r[19===e?3&t|8:t]);return n.join("")}),a=function(){if(!window.navigator)return!0;var e=navigator.userAgent.toLowerCase();return-1!=e.indexOf("mobile")||-1!=e.indexOf("android")}(),s=!!document;function o(e){return 0==(e&e-1)&&0!==e}function h(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}function l(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e}function u(e){var t={};for(var r in e){var n=e[r];Array.isArray(n)?t[r]=n.slice():t[r]=n}return t}var d,p,f,_,v,m,g,M,E,x,S,w,y,T,b,A,C,N,R,P,L,O,F,D,U,I,z,B,G,H,k,V,j,X,W,Y,q={MESH:"mesh",SKINNED_MESH:"skinned_mesh",LIGHT:"light",CAMERA:"camera",SCENE:"scene",GROUP:"group",CANVAS2D:"canvas2d"},Z={AMBIENT:"ambient",DIRECT:"direct",POINT:"point",SPOT:"spot"},K={BASIC:"basic",LAMBERT:"lambert",PHONG:"phong",PBR:"pbr",POINT:"point",LINE:"line",LINE_LOOP:"lineloop",LINE_DASHED:"linedashed",CANVAS2D:"canvas2d",SHADER:"shader",DEPTH:"depth",DISTANCE:"distance"},Q={NORMAL:"normal",EXP2:"exp2"},J={NONE:"none",NORMAL:"normal",ADD:"add",CUSTOM:"custom"},$={ADD:32774,SUBTRACT:32778,REVERSE_SUBTRACT:32779},ee={ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775},te={NONE:"none",FRONT:"front",BACK:"back",FRONT_AND_BACK:"front_and_back"},re={FRONT:"front",BACK:"back",DOUBLE:"double"},ne={SMOOTH_SHADING:"smooth_shading",FLAT_SHADING:"flat_shading"},ie={TEXTURE_2D:3553,TEXTURE_CUBE_MAP:34067},ae={DEPTH_COMPONENT:6402,DEPTH_STENCIL:34041,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,RGBA16F:34842,RGBA32F:34836,DEPTH_COMPONENT24:33190,DEPTH_COMPONENT32F:36012,DEPTH24_STENCIL8:35056,DEPTH32F_STENCIL8:36013},se={BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,HALF_FLOAT:36193,UNSIGNED_INT_24_8:34042,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FLOAT_32_UNSIGNED_INT_24_8_REV:36269},oe={NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987},he={REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648},ce={NONE:0,LEQUAL:515,GEQUAL:518,LESS:513,GREATER:516,EQUAL:514,NOTEQUAL:517,ALWAYS:519,NEVER:512},ue={FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_2D_SHADOW:35682,SAMPLER_CUBE:35680,SAMPLER_CUBE_SHADOW:36293,BYTE:65535,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126},le={FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,FLOAT:5126,BYTE:65535,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123},de={HARD:"hard",POISSON_SOFT:"poisson_soft",PCF3_SOFT:"pcf3_soft",PCF5_SOFT:"pcf5_soft",PCSS16_SOFT:"pcss16_soft",PCSS32_SOFT:"pcss32_soft",PCSS64_SOFT:"pcss64_soft"},pe={LINEAR:"linear",SRGB:"sRGB",RGBE:"RGBE",RGBM7:"RGBM7",RGBM16:"RGBM16",RGBD:"RGBD",GAMMA:"Gamma"},fe={MULTIPLY:"ENVMAP_BLENDING_MULTIPLY",MIX:"ENVMAP_BLENDING_MIX",ADD:"ENVMAP_BLENDING_ADD"},_e={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},ve={COLOR_ATTACHMENT0:36064,COLOR_ATTACHMENT1:36065,COLOR_ATTACHMENT2:36066,COLOR_ATTACHMENT3:36067,COLOR_ATTACHMENT4:36068,COLOR_ATTACHMENT5:36069,COLOR_ATTACHMENT6:36070,COLOR_ATTACHMENT7:36071,COLOR_ATTACHMENT8:36072,COLOR_ATTACHMENT9:36073,COLOR_ATTACHMENT10:577040,COLOR_ATTACHMENT11:577041,COLOR_ATTACHMENT12:577042,COLOR_ATTACHMENT13:577043,COLOR_ATTACHMENT14:577044,COLOR_ATTACHMENT15:577045,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306};function me(){this.eventMap={}}function ge(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function Me(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0}function Ee(e,t){this.origin=void 0!==e?e:new Me,this.direction=void 0!==t?t:new Me}function xe(e,t,r,n){this.ray=new Ee(e,t),this.near=r||0,this.far=n||1/0}function Se(e,t){return e.distance-t.distance}function we(e,t,r,n){if(e.raycast(t,r),!0===n)for(var i=e.children,a=0,s=i.length;a<s;a++)we(i[a],t,r,!0)}function ye(e,t,r,n){this._x=e||0,this._y=t||0,this._z=r||0,this._order=n||ye.DefaultOrder}function Te(e,t){this.x=e||0,this.y=t||0}function be(e,t,r,n){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==n?n:1}function Ae(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1])}function Ce(e,t,r,n){this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==n?n:1}function Ne(e,t){this.min=void 0!==e?e:new Te(1/0,1/0),this.max=void 0!==t?t:new Te(-1/0,-1/0)}function Re(e,t){this.min=void 0!==e?e:new Me(1/0,1/0,1/0),this.max=void 0!==t?t:new Me(-1/0,-1/0,-1/0)}function Pe(e,t){this.center=void 0!==e?e:new Me,this.radius=void 0!==t?t:0}function Le(e,t){this.normal=void 0!==e?e:new Me(1,0,0),this.constant=void 0!==t?t:0}function Oe(e,t,r,n,i,a){this.planes=[void 0!==e?e:new Le,void 0!==t?t:new Le,void 0!==r?r:new Le,void 0!==n?n:new Le,void 0!==i?i:new Le,void 0!==a?a:new Le]}function Fe(e,t,r){return this.r=0,this.g=0,void(this.b=0)===t&&void 0===r?this.setHex(e):this.setRGB(e,t,r)}function De(e,t,r){this.a=void 0!==e?e:new Me,this.b=void 0!==t?t:new Me,this.c=void 0!==r?r:new Me}function Ue(e,t){this.posPoints=void 0,this.ctrlPoints=void 0,this.segCount=0,this.set(e,t)}function Ie(e,t,r){this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==r?r:0}function ze(){me.call(this),this.uuid=c(),this.textureType="",this.border=0,this.format=ae.RGBA,this.internalformat=null,this.type=se.UNSIGNED_BYTE,this.magFilter=oe.LINEAR,this.minFilter=oe.LINEAR_MIPMAP_LINEAR,this.wrapS=he.CLAMP_TO_EDGE,this.wrapT=he.CLAMP_TO_EDGE,this.anisotropy=1,this.compare=zen3d.WEBGL_TEXTURE_COMPARE.NONE,this.generateMipmaps=!0,this.encoding=pe.LINEAR,this.flipY=!0,this.version=0}function Be(){this.crossOrigin=void 0,this.path=void 0}function Ge(){this.path=void 0,this.responseType=void 0,this.withCredentials=void 0,this.mimeType=void 0,this.requestHeader=void 0}function He(){}function ke(){ze.call(this),this.textureType=ie.TEXTURE_2D,this.image=null,this.mipmaps=[],this.offset=new Te,this.repeat=new Te(1,1),this.center=new Te,this.rotation=0,this.matrix=new Ae,this.matrixAutoUpdate=!0}function Ve(){ze.call(this),this.textureType=ie.TEXTURE_CUBE_MAP,this.images=[],this.flipY=!1}function je(){this.uuid=c(),this.name="",this.type="",this.position=new Me,this.scale=new Me(1,1,1),this.euler=new ye,this.quaternion=new Ce;var e=this.euler,t=this.quaternion;e.onChange(function(){t.setFromEuler(e,!1)}),t.onChange(function(){e.setFromQuaternion(t,void 0,!1)}),this.matrix=new ge,this.worldMatrix=new ge,this.children=new Array,this.parent=null,this.castShadow=!1,this.receiveShadow=!1,this.shadowType=de.PCF3_SOFT,this.frustumCulled=!0,this.visible=!0,this.renderOrder=0,this.userData={}}function Xe(){je.call(this),this.type="bone",this.offsetMatrix=new ge}function We(e){e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.boneTexture=void 0}function Ye(e,t,r,n,i){if(.5<=n)for(var a=0;a!==i;++a)e[t+a]=e[r+a]}function qe(e,t,r,n){Ce.slerpFlat(e,t,e,t,e,r,n)}function Ze(e,t,r,n,i){for(var a=1-n,s=0;s!==i;++s){var o=t+s;e[o]=e[o]*a+e[r+s]*n}}function Ke(e,t,r,n){this.target=null,this.property="",this.parseBinding(e,t),this.valueSize=n;var i,a=Float64Array;switch(r){case"quaternion":i=qe;break;case"string":case"bool":a=Array,i=Ye;break;default:i=Ze}this.buffer=new a(2*n),this._mixBufferFunction=i,this.cumulativeWeight=0,this.referenceCount=0,this.useCount=0}function Qe(){this._clips={},this._bindings={},this._activeClips={}}function Je(e,t,r,n,i){this.target=e,this.propertyPath=t,this.name=this.target.uuid+"."+t,this.times=r,this.values=n,this.valueSize=n.length/r.length,this.interpolant=void 0===i||i}function $e(e,t,r,n,i){Je.call(this,e,t,r,n,i)}function et(e,t,r,n,i){Je.call(this,e,t,r,n,i)}function tt(e){this.name=e||"",this.tracks=[],this.loop=!0,this.startFrame=0,this.endFrame=0,this.frame=0}function rt(e,t,r,n,i){Je.call(this,e,t,r,n,i)}function nt(e,t,r,n,i){Je.call(this,e,t,r,n,i)}function it(e,t,r,n,i){Je.call(this,e,t,r,n,i)}function at(e,t,r,n,i){Je.call(this,e,t,r,n,i)}function st(e,t,r){this.uuid=c(),this.array=e,this.size=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===r,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function ot(){me.call(this),this.uuid=c(),this.attributes={},this.index=null,this.boundingBox=new Re,this.boundingSphere=new Pe,this.groups=[]}function ht(e,t,r,n,i,a){ot.call(this),this.buildGeometry(e,t,r,n,i,a)}function ct(e,t,r,n,i,a,s,o){ot.call(this),this.buildGeometry(e,t,r,n,i,a,s,o)}function ut(e,t,r,n){st.call(this,e,t,r),this.meshPerAttribute=n||1}function lt(){ot.call(this),this.maxInstancedCount=void 0}function dt(e,t){this.uuid=c(),this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function pt(e,t,r){dt.call(this,e,t),this.meshPerAttribute=r||1}function ft(e,t,r,n){this.uuid=c(),this.data=e,this.size=t,this.offset=r,this.normalized=!0===n}function _t(e,t,r,n){ot.call(this),this.buildGeometry(e,t,r,n)}function vt(e,t,r,n,i,a,s){ot.call(this),this.buildGeometry(e,t,r,n,i,a,s)}function mt(){this.type="",this.opacity=1,this.transparent=!1,this.blending=J.NORMAL,this.blendSrc=ee.SRC_ALPHA,this.blendDst=ee.ONE_MINUS_SRC_ALPHA,this.blendEquation=$.ADD,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.premultipliedAlpha=!1,this.vertexColors=!1,this.diffuse=new Fe(16777215),this.diffuseMap=null,this.normalMap=null,this.aoMap=null,this.aoMapIntensity=1,this.bumpMap=null,this.bumpScale=1,this.envMap=null,this.envMapIntensity=1,this.envMapCombine=fe.MULTIPLY,this.emissive=new Fe(0),this.emissiveMap=null,this.emissiveIntensity=1,this.depthTest=!0,this.depthWrite=!0,this.colorWrite=!0,this.alphaTest=0,this.side=re.FRONT,this.shading=ne.SMOOTH_SHADING,this.acceptLight=!1,this.drawMode=_e.TRIANGLES}function gt(){mt.call(this),this.type=K.BASIC}function Mt(){mt.call(this),this.type=K.LAMBERT,this.acceptLight=!0}function Et(){mt.call(this),this.type=K.PHONG,this.shininess=30,this.specular=new Fe(6710886),this.specularMap=null,this.acceptLight=!0}function xt(){mt.call(this),this.type=K.PBR,this.roughness=.5,this.metalness=.5,this.roughnessMap=null,this.metalnessMap=null,this.acceptLight=!0}function St(){mt.call(this),this.type=K.POINT,this.size=1,this.sizeAttenuation=!0,this.drawMode=_e.POINTS}function wt(){mt.call(this),this.type=K.LINE,this.lineWidth=1,this.drawMode=_e.LINES}function yt(){mt.call(this),this.type=K.LINE_LOOP,this.lineWidth=1,this.drawMode=_e.LINE_LOOP}function Tt(){mt.call(this),this.type=K.LINE_DASHED,this.lineWidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.drawMode=_e.LINE_STRIP}function bt(e){mt.call(this),this.type=K.SHADER,this.vertexShader=e.vertexShader||"",this.fragmentShader=e.fragmentShader||"",this.defines={},Object.assign(this.defines,e.defines),this.uniforms=u(e.uniforms)}function At(){mt.call(this),this.type=K.DEPTH,this.packToRGBA=!1}function Ct(){mt.call(this),this.type=K.DISTANCE}function Nt(n){var i=["","WEBKIT_","MOZ_"],a={};function e(e){if(a[e]||null===a[e])return a[e];var t=null;for(var r in i)if(t=n.getExtension(i[r]+e))break;return a[e]=t}var t=e("EXT_texture_filter_anisotropic");return{version:parseFloat(/^WebGL\ ([0-9])/.exec(n.getParameter(n.VERSION))[1]),maxPrecision:function(e,t){if("highp"===t){if(0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision)return"highp";t="mediump"}return"mediump"===t&&0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision?"mediump":"lowp"}(n,"highp"),maxTextures:n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),maxVertexTextures:n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),maxTextureSize:n.getParameter(n.MAX_TEXTURE_SIZE),maxCubemapSize:n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),maxVertexUniformVectors:n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),anisotropyExt:t,maxAnisotropy:null!==t?n.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT):1,getExtension:e}}function Rt(e,t,r,n){var i=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var s=0;s<n;s++)e.texImage2D(r+s,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,i);return a}function Pt(e,t){this.gl=e,this.capabilities=t,this.states={},this.currentBlending=null,this.currentBlendEquation=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendEquationAlpha=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipliedAlpha=null,this.currentCullFace=null,this.currentViewport=new be,this.currentColorMask=null,this.currentClearColor=new be,this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBuffers={},this.emptyTextures={},this.emptyTextures[e.TEXTURE_2D]=Rt(e,e.TEXTURE_2D,e.TEXTURE_2D,1),this.emptyTextures[e.TEXTURE_CUBE_MAP]=Rt(e,e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),this.currentFlipSided=!1,this.currentDepthMask=!0,this.currentLineWidth=null,this.currentProgram=null,this.currentStencilMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilClear=null,this.currentRenderTarget=null}function Lt(){this.properties={}}function Ot(e){return e.wrapS!==he.CLAMP_TO_EDGE||e.wrapT!==he.CLAMP_TO_EDGE||e.minFilter!==oe.NEAREST&&e.minFilter!==oe.LINEAR}function Ft(e){return e===oe.NEAREST||e===oe.NEAREST_MIPMAP_LINEAR||e===oe.NEAREST_MIPMAP_NEAREST?oe.NEAREST:oe.LINEAR}function Dt(e){return o(e.width)&&o(e.height)}function Ut(e){if(s&&(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement)){var t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.width=h(e.width),t.height=h(e.height),t.getContext("2d").drawImage(e,0,0,t.width,t.height),console.warn("image is not power of two ("+e.width+"x"+e.height+"). Resized to "+t.width+"x"+t.height,e),t}return e}function It(e,t){if(e.width>t||e.height>t){if(!s)return console.warn("image is too big ("+e.width+"x"+e.height+"). max size is "+t+"x"+t,e),e;var r=t/Math.max(e.width,e.height),n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return n.width=Math.floor(e.width*r),n.height=Math.floor(e.height*r),n.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,n.width,n.height),console.warn("image is too big ("+e.width+"x"+e.height+"). Resized to "+n.width+"x"+n.height,e),n}return e}function zt(e,t,r,n){this.gl=e,this.state=t,this.properties=r,this.capabilities=n}function Bt(e,t,r,n){r.isInterleavedBufferAttribute&&(r=r.data);var i,a,s,o,h,c,u=t.get(r);void 0===u.buffer?function(e,t,r,n){var i=r.array,a=r.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW,s=e.createBuffer();e.bindBuffer(n,s),e.bufferData(n,i,a);var o=e.FLOAT;i instanceof Float32Array?o=e.FLOAT:i instanceof Float64Array?console.warn("Unsupported data buffer format: Float64Array."):i instanceof Uint16Array?o=e.UNSIGNED_SHORT:i instanceof Int16Array?o=e.SHORT:i instanceof Uint32Array?o=e.UNSIGNED_INT:i instanceof Int32Array?o=e.INT:i instanceof Int8Array?o=e.BYTE:i instanceof Uint8Array&&(o=e.UNSIGNED_BYTE),t.buffer=s,t.type=o,t.bytesPerElement=i.BYTES_PER_ELEMENT,t.version=r.version}(e,u,r,n):u.version<r.version&&(i=e,a=u.buffer,o=n,h=(s=r).array,c=s.updateRange,i.bindBuffer(o,a),!1===s.dynamic?i.bufferData(o,h,i.STATIC_DRAW):-1===c.count?i.bufferSubData(o,0,h):0===c.count?console.error("updateBuffer: dynamic BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(i.bufferSubData(o,c.offset*h.BYTES_PER_ELEMENT,h.subarray(c.offset,c.offset+c.count)),c.count=-1),u.version=r.version)}function Gt(e,t,r){r.isInterleavedBufferAttribute&&(r=r.data);var n=t.get(r);n.buffer&&e.deleteBuffer(n.buffer),buffers.delete(r)}function Ht(e,t,r,n){this.gl=e,this.state=t,this.properties=r,this.capabilities=n}function kt(e,t,r){this.gl=e,this.name=r.name,this.type=r.type,this.size=r.size,this.location=e.getUniformLocation(t,this.name),this.setValue=void 0,this.set=void 0,this._generateSetValue()}function Vt(e,t,r){this.gl=e,this.name=r.name,this.type=r.type,this.size=r.size,this.location=e.getAttribLocation(t,this.name),this.count=0,this.initCount(e),this.format=e.FLOAT,this.initFormat(e)}function jt(e,t,r){var n=e.createShader(t);return e.shaderSource(n,r),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS)||console.warn("shader not compiled!",e.getShaderInfoLog(n),function(e){for(var t=e.split("\n"),r=0;r<t.length;r++)t[r]=r+1+": "+t[r];return t.join("\n")}(r)),n}function Xt(e,t,r){this.uuid=c(),this.vshaderSource=t,this.fshaderSource=r;var n,i,a,s,o=jt(e,e.VERTEX_SHADER,this.vshaderSource),h=jt(e,e.FRAGMENT_SHADER,this.fshaderSource);this.id=(i=o,a=h,s=(n=e).createProgram(),n.attachShader(s,i),n.attachShader(s,a),n.linkProgram(s),n.getProgramParameter(s,n.LINK_STATUS)||console.warn("program not linked!",n.getProgramInfoLog(s)),s),this.uniforms=function(e,t){for(var r={},n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),i=0;i<n;i++){var a=e.getActiveUniform(t,i),s=a.name,o=new kt(e,t,a);r[s]=o}return r}(e,this.id),this.attributes=function(e,t){for(var r={},n=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),i=0;i<n;i++){var a=e.getActiveAttrib(t,i),s=a.name,o=new Vt(e,t,a);r[s]=o}return r}(e,this.id),e.deleteShader(o),e.deleteShader(h)}Object.assign(me.prototype,{addEventListener:function(e,t,r){var n=this.eventMap[e];n||(n=this.eventMap[e]=[]),n.push({listener:t,thisObject:r||this})},removeEventListener:function(e,t,r){var n=this.eventMap[e];if(n)for(var i=0,a=n.length;i<a;i++){var s=n[i];if(s.listener==t&&s.thisObject==(r||this)){n.splice(i,1);break}}},dispatchEvent:function(e){(e.target=this).notifyListener(e)},notifyListener:function(e){var t=this.eventMap[e.type];if(t)for(var r=0,n=t.length;r<n;r++){var i=t[r];i.listener.call(i.thisObject,e)}}}),Object.assign(ge.prototype,{identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},set:function(e,t,r,n,i,a,s,o,h,c,u,l,d,p,f,_){var v=this.elements;return v[0]=e,v[4]=t,v[8]=r,v[12]=n,v[1]=i,v[5]=a,v[9]=s,v[13]=o,v[2]=h,v[6]=c,v[10]=u,v[14]=l,v[3]=d,v[7]=p,v[11]=f,v[15]=_,this},copy:function(e){return this.elements.set(e.elements),this},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var r=e.elements,n=t.elements,i=this.elements,a=r[0],s=r[4],o=r[8],h=r[12],c=r[1],u=r[5],l=r[9],d=r[13],p=r[2],f=r[6],_=r[10],v=r[14],m=r[3],g=r[7],M=r[11],E=r[15],x=n[0],S=n[4],w=n[8],y=n[12],T=n[1],b=n[5],A=n[9],C=n[13],N=n[2],R=n[6],P=n[10],L=n[14],O=n[3],F=n[7],D=n[11],U=n[15];return i[0]=a*x+s*T+o*N+h*O,i[4]=a*S+s*b+o*R+h*F,i[8]=a*w+s*A+o*P+h*D,i[12]=a*y+s*C+o*L+h*U,i[1]=c*x+u*T+l*N+d*O,i[5]=c*S+u*b+l*R+d*F,i[9]=c*w+u*A+l*P+d*D,i[13]=c*y+u*C+l*L+d*U,i[2]=p*x+f*T+_*N+v*O,i[6]=p*S+f*b+_*R+v*F,i[10]=p*w+f*A+_*P+v*D,i[14]=p*y+f*C+_*L+v*U,i[3]=m*x+g*T+M*N+E*O,i[7]=m*S+g*b+M*R+E*F,i[11]=m*w+g*A+M*P+E*D,i[15]=m*y+g*C+M*L+E*U,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},inverse:function(){return this.getInverse(this)},getInverse:function(e){var t=this.elements,r=e.elements,n=r[0],i=r[1],a=r[2],s=r[3],o=r[4],h=r[5],c=r[6],u=r[7],l=r[8],d=r[9],p=r[10],f=r[11],_=r[12],v=r[13],m=r[14],g=r[15],M=d*m*u-v*p*u+v*c*f-h*m*f-d*c*g+h*p*g,E=_*p*u-l*m*u-_*c*f+o*m*f+l*c*g-o*p*g,x=l*v*u-_*d*u+_*h*f-o*v*f-l*h*g+o*d*g,S=_*d*c-l*v*c-_*h*p+o*v*p+l*h*m-o*d*m,w=n*M+i*E+a*x+s*S;if(0===w)return console.warn("can't invert matrix, determinant is 0"),this.identity();var y=1/w;return t[0]=M*y,t[1]=(v*p*s-d*m*s-v*a*f+i*m*f+d*a*g-i*p*g)*y,t[2]=(h*m*s-v*c*s+v*a*u-i*m*u-h*a*g+i*c*g)*y,t[3]=(d*c*s-h*p*s-d*a*u+i*p*u+h*a*f-i*c*f)*y,t[4]=E*y,t[5]=(l*m*s-_*p*s+_*a*f-n*m*f-l*a*g+n*p*g)*y,t[6]=(_*c*s-o*m*s-_*a*u+n*m*u+o*a*g-n*c*g)*y,t[7]=(o*p*s-l*c*s+l*a*u-n*p*u-o*a*f+n*c*f)*y,t[8]=x*y,t[9]=(_*d*s-l*v*s-_*i*f+n*v*f+l*i*g-n*d*g)*y,t[10]=(o*v*s-_*h*s+_*i*u-n*v*u-o*i*g+n*h*g)*y,t[11]=(l*h*s-o*d*s-l*i*u+n*d*u+o*i*f-n*h*f)*y,t[12]=S*y,t[13]=(l*v*a-_*d*a+_*i*p-n*v*p-l*i*m+n*d*m)*y,t[14]=(_*h*a-o*v*a-_*i*c+n*v*c+o*i*m-n*h*m)*y,t[15]=(o*d*a-l*h*a+l*i*c-n*d*c-o*i*p+n*h*p)*y,this},transform:(m=new ge,function(e,t,r){var n=r.toMatrix4(m).elements,i=this.elements;return i[0]=n[0]*t.x,i[1]=n[1]*t.x,i[2]=n[2]*t.x,i[3]=0,i[4]=n[4]*t.y,i[5]=n[5]*t.y,i[6]=n[6]*t.y,i[7]=0,i[8]=n[8]*t.z,i[9]=n[9]*t.z,i[10]=n[10]*t.z,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}),makeRotationFromQuaternion:function(e){var t=this.elements,r=e.x,n=e.y,i=e.z,a=e.w,s=r+r,o=n+n,h=i+i,c=r*s,u=r*o,l=r*h,d=n*o,p=n*h,f=i*h,_=a*s,v=a*o,m=a*h;return t[0]=1-(d+f),t[4]=u-m,t[8]=l+v,t[1]=u+m,t[5]=1-(c+f),t[9]=p-_,t[2]=l-v,t[6]=p+_,t[10]=1-(c+d),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAtRH:(f=new Me,_=new Me,v=new Me,function(e,t,r){var n=this.elements;return v.subVectors(e,t),0===v.getLengthSquared()&&(v.z=1),v.normalize(),f.crossVectors(r,v),0===f.getLengthSquared()&&(1===Math.abs(r.z)?v.x+=1e-4:v.z+=1e-4,v.normalize(),f.crossVectors(r,v)),f.normalize(),_.crossVectors(v,f),n[0]=f.x,n[4]=_.x,n[8]=v.x,n[1]=f.y,n[5]=_.y,n[9]=v.y,n[2]=f.z,n[6]=_.z,n[10]=v.z,this}),decompose:(d=new Me,p=new ge,function(e,t,r){var n=this.elements,i=d.set(n[0],n[1],n[2]).getLength(),a=d.set(n[4],n[5],n[6]).getLength(),s=d.set(n[8],n[9],n[10]).getLength();this.determinant()<0&&(i=-i),e.x=n[12],e.y=n[13],e.z=n[14],p.elements.set(this.elements);var o=1/i,h=1/a,c=1/s;return p.elements[0]*=o,p.elements[1]*=o,p.elements[2]*=o,p.elements[4]*=h,p.elements[5]*=h,p.elements[6]*=h,p.elements[8]*=c,p.elements[9]*=c,p.elements[10]*=c,t.setFromRotationMatrix(p),r.x=i,r.y=a,r.z=s,this}),determinant:function(){var e=this.elements,t=e[0],r=e[4],n=e[8],i=e[12],a=e[1],s=e[5],o=e[9],h=e[13],c=e[2],u=e[6],l=e[10],d=e[14];return e[3]*(+i*o*u-n*h*u-i*s*l+r*h*l+n*s*d-r*o*d)+e[7]*(+t*o*d-t*h*l+i*a*l-n*a*d+n*h*c-i*o*c)+e[11]*(+t*h*u-t*s*d-i*a*u+r*a*d+i*s*c-r*h*c)+e[15]*(-n*s*c-t*o*u+t*s*l+n*a*u-r*a*l+r*o*c)},fromArray:function(e,t){void 0===t&&(t=0);for(var r=0;r<16;r++)this.elements[r]=e[r+t];return this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,n))},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}),Object.assign(Me.prototype,{lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},set:function(e,t,r){return this.x=e||0,this.y=t||0,this.z=r||0,this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},getLength:function(){return Math.sqrt(this.getLengthSquared())},getLengthSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z},normalize:function(e){e=e||1;var t=this.getLength();if(0!=t){var r=e/t;return this.x*=r,this.y*=r,this.z*=r,this}},subtract:function(e,t){return t||(t=new Me),t.set(this.x-e.x,this.y-e.y,this.z-e.z),t},multiply:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this},crossVectors:function(e,t){var r=e.x,n=e.y,i=e.z,a=t.x,s=t.y,o=t.z;return this.x=n*o-i*s,this.y=i*a-r*o,this.z=r*s-n*a,this},cross:function(e){var t=this.x,r=this.y,n=this.z;return this.x=r*e.z-n*e.y,this.y=n*e.x-t*e.z,this.z=t*e.y-r*e.x,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},applyQuaternion:function(e){var t=this.x,r=this.y,n=this.z,i=e._x,a=e._y,s=e._z,o=e._w,h=o*t+a*n-s*r,c=o*r+s*t-i*n,u=o*n+i*r-a*t,l=-i*t-a*r-s*n;return this.x=h*o+l*-i+c*-s-u*-a,this.y=c*o+l*-a+u*-i-h*-s,this.z=u*o+l*-s+h*-a-c*-i,this},applyMatrix4:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*n+i[12],this.y=i[1]*t+i[5]*r+i[9]*n+i[13],this.z=i[2]*t+i[6]*r+i[10]*n+i[14],this},applyMatrix3:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[3]*r+i[6]*n,this.y=i[1]*t+i[4]*r+i[7]*n,this.z=i[2]*t+i[5]*r+i[8]*n,this},transformDirection:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*n,this.y=i[1]*t+i[5]*r+i[9]*n,this.z=i[2]*t+i[6]*r+i[10]*n,this.normalize()},setFromMatrixPosition:function(e){return this.setFromMatrixColumn(e,3)},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},add:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},sub:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,n=this.z-e.z;return t*t+r*r+n*n},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},setFromSpherical:function(e){var t=Math.sin(e.phi)*e.radius;return this.x=t*Math.sin(e.theta),this.y=Math.cos(e.phi)*e.radius,this.z=t*Math.cos(e.theta),this},unproject:function(e){return void 0===g&&(g=new ge),g.multiplyMatrices(e.worldMatrix,g.getInverse(e.projectionMatrix)),this.applyProjection(g)},applyProjection:function(e){var t=this.x,r=this.y,n=this.z,i=e.elements,a=1/(i[3]*t+i[7]*r+i[11]*n+i[15]);return this.x=(i[0]*t+i[4]*r+i[8]*n+i[12])*a,this.y=(i[1]*t+i[5]*r+i[9]*n+i[13])*a,this.z=(i[2]*t+i[6]*r+i[10]*n+i[14])*a,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},clone:function(){return new Me(this.x,this.y,this.z)}}),Object.assign(Ee.prototype,{set:function(e,t){this.origin.copy(e),this.direction.copy(t)},at:function(e,t){return(t||new Me).copy(this.direction).multiplyScalar(e).add(this.origin)},intersectsSphere:(w=new Me,function(e,t){w.subVectors(e.center,this.origin);var r=w.dot(this.direction),n=w.dot(w)-r*r,i=e.radius*e.radius;if(i<n)return null;var a=Math.sqrt(i-n),s=r-a,o=r+a;return s<0&&o<0?null:s<0?this.at(o,t):this.at(s,t)}),intersectsBox:function(e,t){var r,n,i,a,s,o,h=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,l=this.origin;return 0<=h?(r=(e.min.x-l.x)*h,n=(e.max.x-l.x)*h):(r=(e.max.x-l.x)*h,n=(e.min.x-l.x)*h),0<=c?(i=(e.min.y-l.y)*c,a=(e.max.y-l.y)*c):(i=(e.max.y-l.y)*c,a=(e.min.y-l.y)*c),a<r||n<i?null:((r<i||r!=r)&&(r=i),(a<n||n!=n)&&(n=a),0<=u?(s=(e.min.z-l.z)*u,o=(e.max.z-l.z)*u):(s=(e.max.z-l.z)*u,o=(e.min.z-l.z)*u),o<r||n<s?null:((r<s||r!=r)&&(r=s),(o<n||n!=n)&&(n=o),n<0?null:this.at(0<=r?r:n,t)))},intersectTriangle:(M=new Me,E=new Me,x=new Me,S=new Me,function(e,t,r,n,i){E.subVectors(t,e),x.subVectors(r,e),S.crossVectors(E,x);var a,s=this.direction.dot(S);if(0<s){if(n)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}M.subVectors(this.origin,e);var o=a*this.direction.dot(x.crossVectors(M,x));if(o<0)return null;var h=a*this.direction.dot(E.cross(M));if(h<0)return null;if(s<o+h)return null;var c=-a*M.dot(S);return c<0?null:this.at(c/s,i)}),copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this}}),Object.assign(xe.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){this.ray.origin.setFromMatrixPosition(t.worldMatrix),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize()},intersectObject:function(e,t){var r=[];return we(e,this,r,t),r.sort(Se),r},intersectObjects:function(e,t){var r=[];if(!1===Array.isArray(e))return console.warn("Raycaster.intersectObjects: objects is not an Array."),r;for(var n=0,i=e.length;n<i;n++)we(e[n],this,r,t);return r.sort(Se),r}}),ye.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],ye.DefaultOrder="XYZ",Object.defineProperties(ye.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this.onChangeCallback()}}}),Object.assign(ye.prototype,{copyFrom:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},set:function(e,t,r,n){return this._x=e||0,this._y=t||0,this._z=r||0,this._order=n||this._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,r){var n=function(e,t,r){return Math.max(t,Math.min(r,e))},i=e.elements,a=i[0],s=i[4],o=i[8],h=i[1],c=i[5],u=i[9],l=i[2],d=i[6],p=i[10];return"XYZ"===(t=t||this._order)?(this._y=Math.asin(n(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(d,c),this._z=0)):"YXZ"===t?(this._x=Math.asin(-n(u,-1,1)),Math.abs(u)<.99999?(this._y=Math.atan2(o,p),this._z=Math.atan2(h,c)):(this._y=Math.atan2(-l,a),this._z=0)):"ZXY"===t?(this._x=Math.asin(n(d,-1,1)),Math.abs(d)<.99999?(this._y=Math.atan2(-l,p),this._z=Math.atan2(-s,c)):(this._y=0,this._z=Math.atan2(h,a))):"ZYX"===t?(this._y=Math.asin(-n(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(d,p),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-s,c))):"YZX"===t?(this._z=Math.asin(n(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-l,a)):(this._x=0,this._y=Math.atan2(o,p))):"XZY"===t?(this._z=Math.asin(-n(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(d,c),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-u,p),this._y=0)):console.warn("given unsupported order: "+t),this._order=t,!1!==r&&this.onChangeCallback(),this},setFromQuaternion:(y=new ge,function(e,t,r){return e.toMatrix4(y),this.setFromRotationMatrix(y,t,r)}),onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(Te.prototype,{set:function(e,t){return this.x=e||0,this.y=t||0,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},getLength:function(){return Math.sqrt(this.getLengthSquared())},getLengthSquared:function(){return this.x*this.x+this.y*this.y},normalize:function(e){e=e||1;var t=this.getLength();if(0!=t){var r=e/t;return this.x*=r,this.y*=r,this}},subtract:function(e,t){return t||(t=new Te),t.set(this.x-e.x,this.y-e.y),t},copy:function(e){return this.x=e.x,this.y=e.y,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},add:function(e){return this.x+=e.x,this.y+=e.y,this},clone:function(){return new Te(this.x,this.y)}}),Object.assign(be.prototype,{lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},set:function(e,t,r,n){return this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==n?n:1,this},normalize:function(){return this.multiplyScalar(1/(this.getLength()||1))},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},getLengthSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},getLength:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},applyMatrix4:function(e){var t=this.x,r=this.y,n=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*n+a[12]*i,this.y=a[1]*t+a[5]*r+a[9]*n+a[13]*i,this.z=a[2]*t+a[6]*r+a[10]*n+a[14]*i,this.w=a[3]*t+a[7]*r+a[11]*n+a[15]*i,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},add:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}}),Object.assign(Ae.prototype,{identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},inverse:function(){return this.getInverse(this)},getInverse:function(e){var t=e.elements,r=this.elements,n=t[0],i=t[1],a=t[2],s=t[3],o=t[4],h=t[5],c=t[6],u=t[7],l=t[8],d=l*o-h*u,p=h*c-l*s,f=u*s-o*c,_=n*d+i*p+a*f;if(0===_){return console.warn("zen3d.Matrix3: .getInverse() can't invert matrix, determinant is 0"),this.identity()}var v=1/_;return r[0]=d*v,r[1]=(a*u-l*i)*v,r[2]=(h*i-a*o)*v,r[3]=p*v,r[4]=(l*n-a*c)*v,r[5]=(a*s-h*n)*v,r[6]=f*v,r[7]=(i*c-u*n)*v,r[8]=(o*n-i*s)*v,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},set:function(e,t,r,n,i,a,s,o,h){var c=this.elements;return c[0]=e,c[3]=t,c[6]=r,c[1]=n,c[4]=i,c[7]=a,c[2]=s,c[5]=o,c[8]=h,this},copy:function(e){return this.elements.set(e.elements),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var r=e.elements,n=t.elements,i=this.elements,a=r[0],s=r[3],o=r[6],h=r[1],c=r[4],u=r[7],l=r[2],d=r[5],p=r[8],f=n[0],_=n[3],v=n[6],m=n[1],g=n[4],M=n[7],E=n[2],x=n[5],S=n[8];return i[0]=a*f+s*m+o*E,i[3]=a*_+s*g+o*x,i[6]=a*v+s*M+o*S,i[1]=h*f+c*m+u*E,i[4]=h*_+c*g+u*x,i[7]=h*v+c*M+u*S,i[2]=l*f+d*m+p*E,i[5]=l*_+d*g+p*x,i[8]=l*v+d*M+p*S,this},transform:function(e,t,r,n,i,a,s){var o=this.elements,h=1,c=0;if(i%360){var u=i;h=Math.cos(u),c=Math.sin(u)}return o[0]=h*r,o[3]=-c*n,o[6]=e,o[1]=c*r,o[4]=h*n,o[7]=t,o[2]=0,o[5]=0,o[8]=1,(a||s)&&(o[6]-=a*o[0]+s*o[3],o[7]-=a*o[1]+s*o[4]),this},setUvTransform:function(e,t,r,n,i,a,s){var o=Math.cos(i),h=Math.sin(i);this.set(r*o,r*h,-r*(o*a+h*s)+a+e,-n*h,n*o,-n*(-h*a+o*s)+s+t,0,0,1)},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}}),Object.defineProperties(Ce.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this.onChangeCallback()}}}),Object.assign(Ce.prototype,{normalize:function(e){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},lerpQuaternions:function(e,t,r){var n=e._w,i=e._x,a=e._y,s=e._z,o=t._w,h=t._x,c=t._y,u=t._z,l=n*o+i*h+a*c+s*u;l<0&&(l=-l,o=-o,h=-h,c=-c,u=-u),this._w=n+r*(o-n),this._x=i+r*(h-i),this._y=a+r*(c-a),this._z=s+r*(u-s);var d=1/Math.sqrt(this._w*this._w+this._x*this._x+this._y*this._y+this._z*this._z);return this._w*=d,this._x*=d,this._y*=d,this._z*=d,this.onChangeCallback(),this},slerpQuaternions:function(e,t,r){var n=e._w,i=e._x,a=e._y,s=e._z,o=t._w,h=t._x,c=t._y,u=t._z,l=n*o+i*h+a*c+s*u;if(l<0&&(l=-l,o=-o,h=-h,c=-c,u=-u),l<.95){var d=Math.acos(l),p=1/Math.sin(d),f=Math.sin(d*(1-r))*p,_=Math.sin(d*r)*p;this._w=n*f+o*_,this._x=i*f+h*_,this._y=a*f+c*_,this._z=s*f+u*_}else{this._w=n+r*(o-n),this._x=i+r*(h-i),this._y=a+r*(c-a),this._z=s+r*(u-s);var v=1/Math.sqrt(this._w*this._w+this._x*this._x+this._y*this._y+this._z*this._z);this._w*=v,this._x*=v,this._y*=v,this._z*=v}return this.onChangeCallback(),this},set:function(e,t,r,n){return this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==n?n:1,this.onChangeCallback(),this},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=void 0!==e.w?e.w:1,this.onChangeCallback(),this},setFromEuler:function(e,t){var r=Math.cos(e._x/2),n=Math.cos(e._y/2),i=Math.cos(e._z/2),a=Math.sin(e._x/2),s=Math.sin(e._y/2),o=Math.sin(e._z/2),h=e._order;return"XYZ"===h?(this._x=a*n*i+r*s*o,this._y=r*s*i-a*n*o,this._z=r*n*o+a*s*i,this._w=r*n*i-a*s*o):"YXZ"===h?(this._x=a*n*i+r*s*o,this._y=r*s*i-a*n*o,this._z=r*n*o-a*s*i,this._w=r*n*i+a*s*o):"ZXY"===h?(this._x=a*n*i-r*s*o,this._y=r*s*i+a*n*o,this._z=r*n*o+a*s*i,this._w=r*n*i-a*s*o):"ZYX"===h?(this._x=a*n*i-r*s*o,this._y=r*s*i+a*n*o,this._z=r*n*o-a*s*i,this._w=r*n*i+a*s*o):"YZX"===h?(this._x=a*n*i+r*s*o,this._y=r*s*i+a*n*o,this._z=r*n*o-a*s*i,this._w=r*n*i-a*s*o):"XZY"===h&&(this._x=a*n*i-r*s*o,this._y=r*s*i-a*n*o,this._z=r*n*o+a*s*i,this._w=r*n*i+a*s*o),!1!==t&&this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,r=e.elements,n=r[0],i=r[4],a=r[8],s=r[1],o=r[5],h=r[9],c=r[2],u=r[6],l=r[10],d=n+o+l;return 0<d?(t=.5/Math.sqrt(d+1),this._w=.25/t,this._x=(u-h)*t,this._y=(a-c)*t,this._z=(s-i)*t):o<n&&l<n?(t=2*Math.sqrt(1+n-o-l),this._w=(u-h)/t,this._x=.25*t,this._y=(i+s)/t,this._z=(a+c)/t):l<o?(t=2*Math.sqrt(1+o-n-l),this._w=(a-c)/t,this._x=(i+s)/t,this._y=.25*t,this._z=(h+u)/t):(t=2*Math.sqrt(1+l-n-o),this._w=(s-i)/t,this._x=(a+c)/t,this._y=(h+u)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:(b=new Me,function(e,t){return void 0===b&&(b=new Me),(T=e.dot(t)+1)<1e-6?(T=0,Math.abs(e.x)>Math.abs(e.z)?b.set(-e.y,e.x,0):b.set(0,-e.z,e.y)):b.crossVectors(e,t),this._x=b.x,this._y=b.y,this._z=b.z,this._w=T,this.normalize()}),multiply:function(e){return this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var r=e._x,n=e._y,i=e._z,a=e._w,s=t._x,o=t._y,h=t._z,c=t._w;return this._x=r*c+a*s+n*h-i*o,this._y=n*c+a*o+i*s-r*h,this._z=i*c+a*h+r*o-n*s,this._w=a*c-r*s-n*o-i*h,this.onChangeCallback(),this},toMatrix4:function(e){e||(e=new ge);var t=e.elements,r=2*this._x*this._y,n=2*this._x*this._z,i=2*this._x*this._w,a=2*this._y*this._z,s=2*this._y*this._w,o=2*this._z*this._w,h=this._x*this._x,c=this._y*this._y,u=this._z*this._z,l=this._w*this._w;return t[0]=h-c-u+l,t[4]=r-o,t[8]=n+s,t[12]=0,t[1]=r+o,t[5]=-h+c-u+l,t[9]=a-i,t[13]=0,t[2]=n-s,t[6]=a+i,t[10]=-h-c+u+l,t[14]=0,t[3]=0,t[7]=0,t[11]=0,t[15]=1,e},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},setFromAxisAngle:function(e,t){var r=t/2,n=Math.sin(r);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(r),this.onChangeCallback(),this},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),Object.assign(Ce,{slerpFlat:function(e,t,r,n,i,a,s){var o=r[n+0],h=r[n+1],c=r[n+2],u=r[n+3],l=i[a+0],d=i[a+1],p=i[a+2],f=i[a+3];if(u!==f||o!==l||h!==d||c!==p){var _=1-s,v=o*l+h*d+c*p+u*f,m=0<=v?1:-1,g=1-v*v;if(g>Number.EPSILON){var M=Math.sqrt(g),E=Math.atan2(M,v*m);_=Math.sin(_*E)/M,s=Math.sin(s*E)/M}var x=s*m;if(o=o*_+l*x,h=h*_+d*x,c=c*_+p*x,u=u*_+f*x,_===1-s){var S=1/Math.sqrt(o*o+h*h+c*c+u*u);o*=S,h*=S,c*=S,u*=S}}e[t]=o,e[t+1]=h,e[t+2]=c,e[t+3]=u}}),Object.assign(Ne.prototype,{set:function(e,t,r,n){this.min.set(e,t),this.max.set(r,n)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}}),Object.assign(Re.prototype,{set:function(e,t){this.min.copy(e),this.max.copy(t)},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},setFromArray:function(e,t){for(var r=1/0,n=1/0,i=1/0,a=-1/0,s=-1/0,o=-1/0,h=void 0!==t?t:3,c=0,u=e.length;c<u;c+=h){var l=e[c],d=e[c+1],p=e[c+2];l<r&&(r=l),d<n&&(n=d),p<i&&(i=p),a<l&&(a=l),s<d&&(s=d),o<p&&(o=p)}return this.min.set(r,n,i),this.max.set(a,s,o),this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},getCenter:function(e){var t=e||new Me;return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},applyMatrix4:(A=[new Me,new Me,new Me,new Me,new Me,new Me,new Me,new Me],function(e){return this.isEmpty()||(A[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),A[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),A[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),A[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),A[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),A[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),A[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),A[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(A)),this}),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}}),Object.assign(Pe.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromArray:(C=new Re,N=new Me,function(e,t){var r=void 0!==t?t:3,n=this.center;C.setFromArray(e,r).getCenter(n);for(var i=0,a=0,s=e.length;a<s;a+=r){var o=e[a],h=e[a+1],c=e[a+2];N.set(o,h,c),i=Math.max(i,n.distanceToSquared(N))}return this.radius=Math.sqrt(i),this}),applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},getBoundingBox:function(e){var t=e||new Re;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},clone:function(){return(new Pe).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this}}),Object.assign(Le.prototype,{set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,n){return this.normal.set(e,t,r),this.constant=n,this},normalize:function(){var e=1/this.normal.getLength();return this.normal.multiplyScalar(e),this.constant*=e,this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},coplanarPoint:function(e){return(e||new Me).copy(this.normal).multiplyScalar(-this.constant)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},applyMatrix4:(R=new Me,P=new Ae,function(e,t){var r=t||P.setFromMatrix4(e).inverse().transpose(),n=this.coplanarPoint(R).applyMatrix4(e),i=this.normal.applyMatrix3(r).normalize();return this.constant=-n.dot(i),this})}),Object.assign(Oe.prototype,{set:function(e,t,r,n,i,a){var s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(r),s[3].copy(n),s[4].copy(i),s[5].copy(a),this},setFromMatrix:function(e){var t=this.planes,r=e.elements,n=r[0],i=r[1],a=r[2],s=r[3],o=r[4],h=r[5],c=r[6],u=r[7],l=r[8],d=r[9],p=r[10],f=r[11],_=r[12],v=r[13],m=r[14],g=r[15];return t[0].setComponents(s-n,u-o,f-l,g-_).normalize(),t[1].setComponents(s+n,u+o,f+l,g+_).normalize(),t[2].setComponents(s+i,u+h,f+d,g+v).normalize(),t[3].setComponents(s-i,u-h,f-d,g-v).normalize(),t[4].setComponents(s-a,u-c,f-p,g-m).normalize(),t[5].setComponents(s+a,u+c,f+p,g+m).normalize(),this},intersectsSphere:function(e){for(var t=this.planes,r=e.center,n=-e.radius,i=0;i<6;i++){if(t[i].distanceToPoint(r)<n)return!1}return!0},intersectsBox:(L=new Me,O=new Me,function(e){for(var t=this.planes,r=0;r<6;r++){var n=t[r];L.x=0<n.normal.x?e.min.x:e.max.x,O.x=0<n.normal.x?e.max.x:e.min.x,L.y=0<n.normal.y?e.min.y:e.max.y,O.y=0<n.normal.y?e.max.y:e.min.y,L.z=0<n.normal.z?e.min.z:e.max.z,O.z=0<n.normal.z?e.max.z:e.min.z;var i=n.distanceToPoint(L),a=n.distanceToPoint(O);if(i<0&&a<0)return!1}return!0})}),Object.assign(Fe.prototype,{lerpColors:function(e,t,r){this.r=r*(t.r-e.r)+e.r,this.g=r*(t.g-e.g)+e.g,this.b=r*(t.b-e.b)+e.b,this.r=this.r,this.g=this.g,this.b=this.b},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(){function s(e,t,r){return r<0&&(r+=1),1<r&&(r-=1),r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+6*(t-e)*(2/3-r):e}return function(e,t,r){var n;if(e=(e%(n=1)+n)%n,t=Math.max(0,Math.min(1,t)),r=Math.max(0,Math.min(1,r)),0===t)this.r=this.g=this.b=r;else{var i=r<=.5?r*(1+t):r+t-r*t,a=2*r-i;this.r=s(a,i,e+1/3),this.g=s(a,i,e),this.b=s(a,i,e-1/3)}return this}}(),fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}}),Object.assign(De.prototype,{set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}}),De.normal=(F=new Me,function(e,t,r,n){var i=n||new Me;i.subVectors(r,t),F.subVectors(e,t),i.cross(F);var a=i.getLengthSquared();return 0<a?i.multiplyScalar(1/Math.sqrt(a)):i.set(0,0,0)}),De.barycoordFromPoint=(D=new Me,U=new Me,I=new Me,function(e,t,r,n,i){D.subVectors(n,t),U.subVectors(r,t),I.subVectors(e,t);var a=D.dot(D),s=D.dot(U),o=D.dot(I),h=U.dot(U),c=U.dot(I),u=a*h-s*s,l=i||new Me;if(0===u)return l.set(-2,-1,-1);var d=1/u,p=(h*o-s*c)*d,f=(a*c-s*o)*d;return l.set(1-p-f,f,p)}),De.containsPoint=(z=new Me,function(e,t,r,n){var i=De.barycoordFromPoint(e,t,r,n,z);return 0<=i.x&&0<=i.y&&i.x+i.y<=1}),Object.assign(Ue.prototype,{set:function(e,t){this.posPoints=e,this.ctrlPoints=t,e.length!==t.length&&console.warn("Curve: posPoints and ctrlPoints's length not equal!"),this.segCount=e.length-1},calc:(B=new Te,G=new Te,H=new Te,k=new Te,function(e){for(var t=0;t<this.segCount;t++)if(e>=this.posPoints[t].x&&e<=this.posPoints[t+1].x){B.copy(this.posPoints[t]),H.copy(this.posPoints[t+1]),G.copy(this.ctrlPoints[t]),k.copy(this.ctrlPoints[t+1]);break}return B||B.copy(this.posPoints[this.posPoints.length-1]),G||G.copy(this.ctrlPoints[this.ctrlPoints.length-1]),H.copy(H||B),k.copy(k||G),e=(e-B.x)/(H.x-B.x),this._cubic_bezier(B.y,G.y,k.y,H.y,e)}),averageXSampler:function(e){e<2&&console.warn("Curve: sampler num less than 2!");for(var t=[],r=this.posPoints[0].x,n=this.posPoints[this.posPoints.length-1].x,i=(n-r)/(e-1),a=0,s=0;s<e;s++)a=s===e-1?n:r+s*i,t.push(a,this.calc(a));return t},_cubic_bezier:function(e,t,r,n,i){return e=this._mix(e,t,i),t=this._mix(t,r,i),r=this._mix(r,n,i),e=this._mix(e,t,i),t=this._mix(t,r,i),e=this._mix(e,t,i)},_mix:function(e,t,r){return e*(1-r)+t*r}}),Object.assign(Ie.prototype,{set:function(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},clone:function(){return(new this.constructor).copy(this)},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(e){return this.radius=e.getLength(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e.x,e.z),this.phi=Math.acos(Math.min(1,Math.max(-1,e.y/this.radius)))),this}}),ze.prototype=Object.assign(Object.create(me.prototype),{constructor:ze,clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.textureType=e.textureType,this.border=e.border,this.format=e.format,this.type=e.type,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.anisotropy=e.anisotropy,this.generateMipmaps=e.generateMipmaps,this.encoding=e.encoding,this.flipY=e.flipY,this.version=e.version,this},dispose:function(){this.dispatchEvent({type:"dispose"}),this.version=0}}),Object.assign(Be.prototype,{load:function(e,t,r,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e);var i=document.createElementNS("http://www.w3.org/1999/xhtml","img");return i.addEventListener("load",function(){t&&t(this)},!1),i.addEventListener("error",function(e){n&&n(e)},!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(i.crossOrigin=this.crossOrigin),i.src=e,i},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(Ge.prototype,{load:function(e,r,t,n){void 0===e&&(e=""),null!=this.path&&(e=this.path+e);var i=e.match(/^data:(.*?)(;base64)?,(.*)$/);if(i){var a=i[1],s=!!i[2],o=i[3];o=window.decodeURIComponent(o),s&&(o=window.atob(o));try{var h,c=(this.responseType||"").toLowerCase();switch(c){case"arraybuffer":case"blob":h=new ArrayBuffer(o.length);for(var u=new Uint8Array(h),l=0;l<o.length;l++)u[l]=o.charCodeAt(l);"blob"===c&&(h=new Blob([h],{type:a}));break;case"document":var d=new DOMParser;h=d.parseFromString(o,a);break;case"json":h=JSON.parse(o);break;default:h=o}window.setTimeout(function(){r&&r(h)},0)}catch(e){window.setTimeout(function(){n&&n(e)},0)}}else{var p=new XMLHttpRequest;for(var f in p.open("GET",e,!0),p.addEventListener("load",function(e){var t=e.target.response;200===this.status?r&&r(t):0===this.status?(console.warn("THREE.FileLoader: HTTP Status 0 received."),r&&r(t)):n&&n(e)},!1),void 0!==t&&p.addEventListener("progress",function(e){t(e)},!1),void 0!==n&&p.addEventListener("error",function(e){n(e)},!1),void 0!==this.responseType&&(p.responseType=this.responseType),void 0!==this.withCredentials&&(p.withCredentials=this.withCredentials),p.overrideMimeType&&p.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)p.setRequestHeader(f,this.requestHeader[f]);p.send(null)}},setPath:function(e){return this.path=e,this},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}}),Object.assign(He.prototype,{load:function(e,t,r,n){var i=this,a=new Ge;a.setResponseType("arraybuffer"),a.load(e,function(e){void 0!==t&&t(i.parse(e))},r,n)},parse:function(e){var t=0,r=1,n=2,i=3,a=9,s=10,o=11,l=48,d=4,p=0,f=1,_=2,v=3;e.length<19&&console.error("TGALoader.parse: Not enough data to contain header.");var h=new Uint8Array(e),c=0,m={id_length:h[c++],colormap_type:h[c++],image_type:h[c++],colormap_index:h[c++]|h[c++]<<8,colormap_length:h[c++]|h[c++]<<8,colormap_size:h[c++],origin:[h[c++]|h[c++]<<8,h[c++]|h[c++]<<8],width:h[c++]|h[c++]<<8,height:h[c++]|h[c++]<<8,pixel_size:h[c++],flags:h[c++]};!function(e){switch(e.image_type){case r:case a:(256<e.colormap_length||24!==e.colormap_size||1!==e.colormap_type)&&console.error("TGALoader.parse.tgaCheckHeader: Invalid type colormap data for indexed type");break;case n:case i:case s:case o:e.colormap_type&&console.error("TGALoader.parse.tgaCheckHeader: Invalid type colormap data for colormap type");break;case t:console.error("TGALoader.parse.tgaCheckHeader: No data");default:console.error('TGALoader.parse.tgaCheckHeader: Invalid type " '+e.image_type+'"')}(e.width<=0||e.height<=0)&&console.error("TGALoader.parse.tgaCheckHeader: Invalid image size"),8!==e.pixel_size&&16!==e.pixel_size&&24!==e.pixel_size&&32!==e.pixel_size&&console.error('TGALoader.parse.tgaCheckHeader: Invalid pixel size "'+e.pixel_size+'"')}(m),m.id_length+c>e.length&&console.error("TGALoader.parse: No data"),c+=m.id_length;var u=!1,g=!1,M=!1;switch(m.image_type){case a:g=u=!0;break;case r:g=!0;break;case s:u=!0;break;case n:break;case o:M=u=!0;break;case i:M=!0}var E=document.createElement("canvas");E.width=m.width,E.height=m.height;var x=E.getContext("2d"),S=x.createImageData(m.width,m.height),w=function(e,t,r,n,i){var a,s,o,h;if(s=r.pixel_size>>3,o=r.width*r.height*s,t&&(h=i.subarray(n,n+=r.colormap_length*(r.colormap_size>>3))),e){var c,u,l;a=new Uint8Array(o);for(var d=0,p=new Uint8Array(s);d<o;)if(u=1+(127&(c=i[n++])),128&c){for(l=0;l<s;++l)p[l]=i[n++];for(l=0;l<u;++l)a.set(p,d+l*s);d+=s*u}else{for(u*=s,l=0;l<u;++l)a[d+l]=i[n++];d+=u}}else a=i.subarray(n,n+=t?r.width*r.height:o);return{pixel_data:a,palettes:h}}(u,g,m,c,h);!function(e,t,r,n,i){var a,s,o,h,c,u;switch((m.flags&l)>>d){default:case _:c=t,s=a=0,h=o=1,u=r;break;case p:a=0,c=t,s=r-(o=1),u=h=-1;break;case v:a=t-1,c=o=-1,s=0,h=1,u=r;break;case f:a=t-1,s=r-1,u=h=c=o=-1}if(M)switch(m.pixel_size){case 8:!function(e,t,r,n,i,a,s,o){var h,c,u,l=0,d=m.width;for(u=t;u!==n;u+=r)for(c=i;c!==s;c+=a,l++)h=o[l],e[4*(c+d*u)+0]=h,e[4*(c+d*u)+1]=h,e[4*(c+d*u)+2]=h,e[4*(c+d*u)+3]=255}(e,s,h,u,a,o,c,n);break;case 16:!function(e,t,r,n,i,a,s,o){var h,c,u=0,l=m.width;for(c=t;c!==n;c+=r)for(h=i;h!==s;h+=a,u+=2)e[4*(h+l*c)+0]=o[u+0],e[4*(h+l*c)+1]=o[u+0],e[4*(h+l*c)+2]=o[u+0],e[4*(h+l*c)+3]=o[u+1]}(e,s,h,u,a,o,c,n);break;default:console.error("TGALoader.parse.getTgaRGBA: not support this format")}else switch(m.pixel_size){case 8:!function(e,t,r,n,i,a,s,o,h){var c,u,l,d=h,p=0,f=m.width;for(l=t;l!==n;l+=r)for(u=i;u!==s;u+=a,p++)c=o[p],e[4*(u+f*l)+3]=255,e[4*(u+f*l)+2]=d[3*c+0],e[4*(u+f*l)+1]=d[3*c+1],e[4*(u+f*l)+0]=d[3*c+2]}(e,s,h,u,a,o,c,n,i);break;case 16:!function(e,t,r,n,i,a,s,o){var h,c,u,l=0,d=m.width;for(u=t;u!==n;u+=r)for(c=i;c!==s;c+=a,l+=2)h=o[l+0]+(o[l+1]<<8),e[4*(c+d*u)+0]=(31744&h)>>7,e[4*(c+d*u)+1]=(992&h)>>2,e[4*(c+d*u)+2]=(31&h)>>3,e[4*(c+d*u)+3]=32768&h?0:255}(e,s,h,u,a,o,c,n);break;case 24:!function(e,t,r,n,i,a,s,o){var h,c,u=0,l=m.width;for(c=t;c!==n;c+=r)for(h=i;h!==s;h+=a,u+=3)e[4*(h+l*c)+3]=255,e[4*(h+l*c)+2]=o[u+0],e[4*(h+l*c)+1]=o[u+1],e[4*(h+l*c)+0]=o[u+2]}(e,s,h,u,a,o,c,n);break;case 32:!function(e,t,r,n,i,a,s,o){var h,c,u=0,l=m.width;for(c=t;c!==n;c+=r)for(h=i;h!==s;h+=a,u+=4)e[4*(h+l*c)+2]=o[u+0],e[4*(h+l*c)+1]=o[u+1],e[4*(h+l*c)+0]=o[u+2],e[4*(h+l*c)+3]=o[u+3]}(e,s,h,u,a,o,c,n);break;default:console.error("TGALoader.parse.getTgaRGBA: not support this format")}}(S.data,m.width,m.height,w.pixel_data,w.palettes);return x.putImageData(S,0,0),E}}),ke.prototype=Object.assign(Object.create(ze.prototype),{constructor:ke,copy:function(e){return ze.prototype.copy.call(this,e),this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this},updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}}),ke.fromImage=function(e){var t=new ke;return t.image=e,t.version++,t},ke.fromSrc=function(e){var t=new ke,r=0<e.search(/\.(jpg|jpeg)$/)||0===e.search(/^data\:image\/jpeg/);return(0<e.search(/\.(tga)$/)||0===e.search(/^data\:image\/tga/)?new He:new Be).load(e,function(e){t.format=r?ae.RGB:ae.RGBA,t.image=e,t.version++,t.dispatchEvent({type:"onload"})}),t},Ve.prototype=Object.assign(Object.create(ze.prototype),{constructor:Ve,copy:function(e){return ze.prototype.copy.call(this,e),this.images=e.images.slice(0),this}}),Ve.fromImage=function(e){for(var t=new Ve,r=t.images,n=0;n<6;n++)r[n]=e[n];return t.version++,t},Ve.fromSrc=function(r){var n=new Ve,i=n.images,e=r[0],a=0<e.search(/\.(jpg|jpeg)$/)||0===e.search(/^data\:image\/jpeg/),s=0<e.search(/\.(tga)$/)||0===e.search(/^data\:image\/tga/),o=0;return function e(t){if(t&&(i.push(t),o++),6<=o)return n.format=a?ae.RGB:ae.RGBA,n.version++,void n.dispatchEvent({type:"onload"});(s?new He:new Be).load(r[o],e)}(),n},Object.assign(je.prototype,{onBeforeRender:function(){},onAfterRender:function(){},add:function(e){this.children.push(e),e.parent=this},remove:function(e){var t=this.children.indexOf(e);-1!==t&&this.children.splice(t,1),e.parent=null},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var r=0,n=this.children.length;r<n;r++){var i=this.children[r].getObjectByProperty(e,t);if(void 0!==i)return i}},updateMatrix:function(){var e=this.matrix.transform(this.position,this.scale,this.quaternion);if(this.worldMatrix.copy(e),this.parent){var t=this.parent.worldMatrix;this.worldMatrix.premultiply(t)}for(var r=this.children,n=0,i=r.length;n<i;n++)r[n].updateMatrix()},getWorldDirection:(j=new Me,X=new Ce,W=new Me,function(e){var t=e||new Me;return this.worldMatrix.decompose(j,X,W),t.set(0,0,1).applyQuaternion(X),t}),lookAt:(V=new ge,function(e,t){V.lookAtRH(e,this.position,t),this.quaternion.setFromRotationMatrix(V)}),raycast:function(e,t){},traverse:function(e){e(this);for(var t=this.children,r=0,n=t.length;r<n;r++)t[r].traverse(e)},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.type=e.type,this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.worldMatrix.copy(e.worldMatrix),this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var r=0;r<e.children.length;r++){var n=e.children[r];this.add(n.clone())}return this}}),(Xe.prototype=Object.create(je.prototype)).constructor=Xe,Object.assign(We.prototype,{updateBones:(Y=new ge,function(){for(var e=0;e<this.bones.length;e++){var t=this.bones[e];Y.multiplyMatrices(t.worldMatrix,t.offsetMatrix),Y.toArray(this.boneMatrices,16*e)}void 0!==this.boneTexture&&this.boneTexture.version++}),getBoneByName:function(e){for(var t=0,r=this.bones.length;t<r;t++){var n=this.bones[t];if(n.name===e)return n}}}),Object.assign(Ke.prototype,{parseBinding:function(e,t){if(1<(t=t.split(".")).length){for(var r=e[t[0]],n=1;n<t.length-1;n++)r=r[t[n]];this.property=t[t.length-1],this.target=r}else this.property=t[0],this.target=e},accumulate:function(e){var t=this.buffer,r=this.valueSize,n=r,i=this.cumulativeWeight;if(0===i){for(var a=0;a!==r;++a)t[n+a]=t[a];i=e}else{var s=e/(i+=e);this._mixBufferFunction(t,n,0,s,r)}this.cumulativeWeight=i},apply:function(){var e=this.buffer,t=this.valueSize;this.cumulativeWeight;this.cumulativeWeight=0,1<this.valueSize?this.target[this.property].fromArray(e,t):this.target[this.property]=e[t]}}),Object.assign(Qe.prototype,{add:function(e){if(void 0===this._clips[e.name]){for(var t=e.tracks,r=0;r<t.length;r++){var n,i=t[r],a=i.name;this._bindings[a]?n=this._bindings[a]:(n=new Ke(i.target,i.propertyPath,i.valueTypeName,i.valueSize),this._bindings[a]=n),n.referenceCount++}this._clips[e.name]=e}else console.warn("AnimationMixer.add: already has clip: "+e.name)},remove:function(e){if(this._clips[e.name]){for(var t=e.tracks,r=0;r<t.length;r++){var n=t[r].name,i=this._bindings[n];i&&i.referenceCount--,i.referenceCount<=0&&delete this._bindings[n]}delete this._clips[e.name]}else console.warn("AnimationMixer.remove: has no clip: "+e.name)},play:function(e,t){if(void 0===this._activeClips[e]){this._activeClips[e]=void 0===t?1:t;var r=this._clips[e];if(r){r.frame=0;for(var n=r.tracks,i=0;i<n.length;i++){var a=n[i].name,s=this._bindings[a];s&&s.useCount++}}else console.warn("AnimationMixer.stop: clip "+e+" is not found.")}else console.warn("AnimationMixer.play: clip "+e+" is playing.")},stop:function(e){if(void 0!==this._activeClips[e]){delete this._activeClips[e];var t=this._clips[e];if(t)for(var r=t.tracks,n=0;n<r.length;n++){var i=r[n].name,a=this._bindings[i];a&&0<a.useCount&&a.useCount--}else console.warn("AnimationMixer.stop: clip "+e+" is not found.")}else console.warn("AnimationMixer.stop: clip "+e+" is not playing.")},update:function(e){for(var t in this._activeClips){var r=this._clips[t],n=this._activeClips[t];r.update(e,this._bindings,n)}for(var i in this._bindings)0<this._bindings[i].useCount&&this._bindings[i].apply()},setClipWeight:function(e,t){void 0!==this._activeClips[e]?this._activeClips[e]=t:console.warn("AnimationMixer.stop: clip "+e+" is not playing.")},getAllClipNames:function(){var e=[];for(var t in this._clips)e.push(t);return e}}),Object.assign(Je.prototype,{_getLastTimeIndex:function(e){var t,r=0,n=this.times.length;for(t=0;t<n;t++)e>=this.times[t]&&(r=t);return r},getValue:function(e,t){for(var r,n,i=this._getLastTimeIndex(e),a=this.times,s=this.values,o=this.valueSize,h=a[i],c=a[i+1],u=0;u<o;u++)if(r=s[i*o+u],n=s[(i+1)*o+u],this.interpolant)if(void 0!==r&&void 0!==n){var l=(e-h)/(c-h);t[u]=r*(1-l)+n*l}else t[u]=r;else t[u]=r}}),$e.prototype=Object.assign(Object.create(Je.prototype),{constructor:$e,valueTypeName:"bool",getValue:function(e,t){var r=this._getLastTimeIndex(e),n=this.times[r];t[0]=this.values[n]}}),et.prototype=Object.assign(Object.create(Je.prototype),{constructor:et,valueTypeName:"color"}),Object.assign(tt.prototype,{update:function(e,t,r){this.frame+=e,this.frame>this.endFrame&&(this.loop?this.frame=this.startFrame:this.frame=this.endFrame);for(var n=0,i=this.tracks.length;n<i;n++){var a=this.tracks[n],s=t[a.name];a.getValue(this.frame,s.buffer),s.accumulate(r)}}}),rt.prototype=Object.assign(Object.create(Je.prototype),{constructor:rt,valueTypeName:"number"}),nt.prototype=Object.assign(Object.create(Je.prototype),{constructor:nt,valueTypeName:"quaternion",getValue:function(e,t){var r=this._getLastTimeIndex(e),n=this.times,i=this.values,a=n[r],s=n[r+1];if(this.interpolant)if(void 0!==s)Ce.slerpFlat(t,0,i,4*r,i,4*(r+1),(e-a)/(s-a));else for(var o=0;o<4;o++)t[o]=i[4*r+o];else for(o=0;o<4;o++)t[o]=i[4*r+o]}}),it.prototype=Object.assign(Object.create(Je.prototype),{constructor:it,valueTypeName:"string",getValue:function(e,t){var r=this._getLastTimeIndex(e),n=this.times[r];t[0]=this.values[n]}}),at.prototype=Object.assign(Object.create(Je.prototype),{constructor:at,valueTypeName:"vector"}),Object.assign(st.prototype,{setArray:function(e){this.count=void 0!==e?e.length/this.size:0,this.array=e}}),ot.prototype=Object.assign(Object.create(me.prototype),{constructor:ot,addAttribute:function(e,t){this.attributes[e]=t},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){delete this.attributes[e]},setIndex:function(e){Array.isArray(e)?this.index=new st(new Uint16Array(e),1):this.index=e},addGroup:function(e,t,r){this.groups.push({start:e,count:t,materialIndex:void 0!==r?r:0})},clearGroups:function(){this.groups=[]},computeBoundingBox:function(){var e=this.attributes.a_Position||this.attributes.position;if(e.isInterleavedBufferAttribute){var t=e.data;this.boundingBox.setFromArray(t.array,t.stride)}else this.boundingBox.setFromArray(e.array,e.size)},computeBoundingSphere:function(){var e=this.attributes.a_Position||this.attributes.position;if(e.isInterleavedBufferAttribute){var t=e.data;this.boundingSphere.setFromArray(t.array,t.stride)}else this.boundingSphere.setFromArray(e.array,e.size)},dispose:function(){this.dispatchEvent({type:"dispose"})}}),ht.prototype=Object.assign(Object.create(ot.prototype),{constructor:ht,buildGeometry:function(e,t,r,n,i,a){var N=this;e=e||1,t=t||1,r=r||1,n=Math.floor(n)||1,i=Math.floor(i)||1,a=Math.floor(a)||1;var R=[],P=[],L=[],O=[],F=0,D=0;function s(e,t,r,n,i,a,s,o,h,c,u){var l,d,p=a/h,f=s/c,_=a/2,v=s/2,m=o/2,g=h+1,M=c+1,E=0,x=0,S=new Me;for(d=0;d<M;d++){var w=d*f-v;for(l=0;l<g;l++){var y=l*p-_;S[e]=y*n,S[t]=w*i,S[r]=m,P.push(S.x,S.y,S.z),S[e]=0,S[t]=0,S[r]=0<o?1:-1,L.push(S.x,S.y,S.z),O.push(l/h),O.push(1-d/c),E+=1}}for(d=0;d<c;d++)for(l=0;l<h;l++){var T=F+l+g*d,b=F+l+g*(d+1),A=F+(l+1)+g*(d+1),C=F+(l+1)+g*d;R.push(T,b,C),R.push(b,A,C),x+=6}N.addGroup(D,x,u),D+=x,F+=E}s("z","y","x",-1,-1,r,t,e,a,i,0),s("z","y","x",1,-1,r,t,-e,a,i,1),s("x","z","y",1,1,e,r,t,n,a,2),s("x","z","y",1,-1,e,r,-t,n,a,3),s("x","y","z",1,-1,e,t,r,n,i,4),s("x","y","z",-1,-1,e,t,-r,n,i,5),this.setIndex(R),this.addAttribute("a_Position",new st(new Float32Array(P),3)),this.addAttribute("a_Normal",new st(new Float32Array(L),3)),this.addAttribute("a_Uv",new st(new Float32Array(O),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),ct.prototype=Object.assign(Object.create(ot.prototype),{constructor:ct,buildGeometry:function(m,g,M,E,x,e,S,w){var y=this;m=void 0!==m?m:1,g=void 0!==g?g:1,M=M||1,E=Math.floor(E)||8,x=Math.floor(x)||1,e=void 0!==e&&e,S=void 0!==S?S:0,w=void 0!==w?w:2*Math.PI;var T=[],b=[],A=[],C=[],N=0,R=[],P=M/2,L=0;function t(e){var t,r,n,i=new Te,a=new Me,s=0,o=!0===e?m:g,h=!0===e?1:-1;for(r=N,t=1;t<=E;t++)b.push(0,P*h,0),A.push(0,h,0),C.push(.5,.5),N++;for(n=N,t=0;t<=E;t++){var c=t/E*w+S,u=Math.cos(c),l=Math.sin(c);a.x=o*l,a.y=P*h,a.z=o*u,b.push(a.x,a.y,a.z),A.push(0,h,0),i.x=.5*u+.5,i.y=.5*l*h+.5,C.push(i.x,i.y),N++}for(t=0;t<E;t++){var d=r+t,p=n+t;!0===e?T.push(p,p+1,d):T.push(p+1,p,d),s+=3}y.addGroup(L,s,!0===e?1:2),L+=s}!function(){var e,t,r=new Me,n=new Me,i=0,a=(g-m)/M;for(t=0;t<=x;t++){var s=[],o=t/x,h=o*(g-m)+m;for(e=0;e<=E;e++){var c=e/E,u=c*w+S,l=Math.sin(u),d=Math.cos(u);n.x=h*l,n.y=-o*M+P,n.z=h*d,b.push(n.x,n.y,n.z),r.set(l,a,d).normalize(),A.push(r.x,r.y,r.z),C.push(c,1-o),s.push(N++)}R.push(s)}for(e=0;e<E;e++)for(t=0;t<x;t++){var p=R[t][e],f=R[t+1][e],_=R[t+1][e+1],v=R[t][e+1];T.push(p,f,v),T.push(f,_,v),i+=6}y.addGroup(L,i,0),L+=i}(),!1===e&&(0<m&&t(!0),0<g&&t(!1)),this.setIndex(T),this.addAttribute("a_Position",new st(new Float32Array(b),3)),this.addAttribute("a_Normal",new st(new Float32Array(A),3)),this.addAttribute("a_Uv",new st(new Float32Array(C),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),ut.prototype=Object.assign(Object.create(st.prototype),{constructor:ut,isInstancedBufferAttribute:!0}),lt.prototype=Object.assign(Object.create(ot.prototype),{constructor:lt,isInstancedGeometry:!0}),Object.assign(dt.prototype,{setArray:function(e){this.count=void 0!==e?e.length/this.stride:0,this.array=e}}),pt.prototype=Object.assign(Object.create(dt.prototype),{constructor:pt,isInstancedInterleavedBuffer:!0}),ft.prototype.isInterleavedBufferAttribute=!0,Object.defineProperties(ft.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),_t.prototype=Object.assign(Object.create(ot.prototype),{constructor:_t,buildGeometry:function(e,t,r,n){var i,a,s=(e=e||1)/2,o=(t=t||1)/2,h=Math.floor(r)||1,c=Math.floor(n)||1,u=h+1,l=c+1,d=e/h,p=t/c,f=[],_=[],v=[],m=[];for(a=0;a<l;a++){var g=a*p-o;for(i=0;i<u;i++){var M=i*d-s;_.push(M,0,g),v.push(0,1,0),m.push(i/h),m.push(1-a/c)}}for(a=0;a<c;a++)for(i=0;i<h;i++){var E=i+u*a,x=i+u*(a+1),S=i+1+u*(a+1),w=i+1+u*a;f.push(E,x,w),f.push(x,S,w)}this.setIndex(f),this.addAttribute("a_Position",new st(new Float32Array(_),3)),this.addAttribute("a_Normal",new st(new Float32Array(v),3)),this.addAttribute("a_Uv",new st(new Float32Array(m),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),vt.prototype=Object.assign(Object.create(ot.prototype),{constructor:vt,buildGeometry:function(e,t,r,n,i,a,s){e=e||1,t=Math.max(3,Math.floor(t)||8),r=Math.max(2,Math.floor(r)||6),n=void 0!==n?n:0,i=void 0!==i?i:2*Math.PI;var o,h,c=(a=void 0!==a?a:0)+(s=void 0!==s?s:Math.PI),u=0,l=[],d=new Me,p=new Me,f=[],_=[],v=[],m=[];for(h=0;h<=r;h++){var g=[],M=h/r;for(o=0;o<=t;o++){var E=o/t;d.x=-e*Math.cos(n+E*i)*Math.sin(a+M*s),d.y=e*Math.cos(a+M*s),d.z=e*Math.sin(n+E*i)*Math.sin(a+M*s),_.push(d.x,d.y,d.z),p.set(d.x,d.y,d.z).normalize(),v.push(p.x,p.y,p.z),m.push(E,1-M),g.push(u++)}l.push(g)}for(h=0;h<r;h++)for(o=0;o<t;o++){var x=l[h][o+1],S=l[h][o],w=l[h+1][o],y=l[h+1][o+1];(0!==h||0<a)&&f.push(x,S,y),(h!==r-1||c<Math.PI)&&f.push(S,w,y)}this.setIndex(f),this.addAttribute("a_Position",new st(new Float32Array(_),3)),this.addAttribute("a_Normal",new st(new Float32Array(v),3)),this.addAttribute("a_Uv",new st(new Float32Array(m),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),Object.assign(mt.prototype,{copy:function(e){return this.type=e.type,this.opacity=e.opacity,this.transparent=e.transparent,this.premultipliedAlpha=e.premultipliedAlpha,this.vertexColors=e.vertexColors,this.diffuse.copy(e.diffuse),this.diffuseMap=e.diffuseMap,this.normalMap=e.normalMap,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.envMapCombine=e.envMapCombine,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.blending=e.blending,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.alphaTest=e.alphaTest,this.side=e.side,this.shading=e.shading,this.acceptLight=e.acceptLight,this.drawMode=e.drawMode,this},clone:function(){return(new this.constructor).copy(this)}}),(gt.prototype=Object.create(mt.prototype)).constructor=gt,(Mt.prototype=Object.create(mt.prototype)).constructor=Mt,Et.prototype=Object.assign(Object.create(mt.prototype),{constructor:Et,copy:function(e){return mt.prototype.copy.call(this,e),this.shininess=e.shininess,this.specular.copy(e.specular),this.specularMap=e.specularMap,this}}),xt.prototype=Object.assign(Object.create(mt.prototype),{constructor:xt,copy:function(e){return mt.prototype.copy.call(this,e),this.roughness=e.roughness,this.metalness=e.metalness,this}}),St.prototype=Object.assign(Object.create(mt.prototype),{constructor:St,copy:function(e){return mt.prototype.copy.call(this,e),this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}),wt.prototype=Object.assign(Object.create(mt.prototype),{constructor:wt,copy:function(e){return mt.prototype.copy.call(this,e),this.lineWidth=e.lineWidth,this}}),yt.prototype=Object.assign(Object.create(mt.prototype),{constructor:yt,copy:function(e){return mt.prototype.copy.call(this,e),this.lineWidth=e.lineWidth,this}}),Tt.prototype=Object.assign(Object.create(mt.prototype),{constructor:Tt,copy:function(e){return mt.prototype.copy.call(this,e),this.lineWidth=e.lineWidth,this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}),bt.prototype=Object.assign(Object.create(mt.prototype),{constructor:bt,copy:function(e){return mt.prototype.copy.call(this,e),this.vertexShader=e.vertexShader,this.fragmentShader=e.fragmentShader,this}}),(At.prototype=Object.create(mt.prototype)).constructor=At,(Ct.prototype=Object.create(mt.prototype)).constructor=Ct,Object.assign(Pt.prototype,{setBlend:function(e,t,r,n,i,a,s,o){var h=this.gl;e!==J.NONE?this.enable(h.BLEND):this.disable(h.BLEND),e!==J.CUSTOM?(e===this.currentBlending&&o===this.currentPremultipliedAlpha||(e===J.NORMAL&&(o?(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.ONE,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA)):(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.SRC_ALPHA,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA))),e===J.ADD&&(o?(h.blendEquationSeparate(h.FUNC_ADD,h.FUNC_ADD),h.blendFuncSeparate(h.ONE,h.ONE,h.ONE,h.ONE)):(h.blendEquation(h.FUNC_ADD),h.blendFunc(h.SRC_ALPHA,h.ONE)))),this.currentBlendEquation=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendEquationAlpha=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null):(i=i||t,a=a||r,s=s||n,t===this.currentBlendEquation&&i===this.currentBlendEquationAlpha||(h.blendEquationSeparate(t,i),this.currentBlendEquation=t,this.currentBlendEquationAlpha=i),r===this.currentBlendSrc&&n===this.currentBlendDst&&a===this.currentBlendSrcAlpha&&s===this.currentBlendDstAlpha||(h.blendFuncSeparate(r,n,a,s),this.currentBlendSrc=r,this.currentBlendDst=n,this.currentBlendSrcAlpha=a,this.currentBlendDstAlpha=s)),this.currentBlending=e,this.currentPremultipliedAlpha=o},setFlipSided:function(e){var t=this.gl;this.currentFlipSided!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e)},setCullFace:function(e){var t=this.gl;e!==te.NONE?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===te.BACK?t.cullFace(t.BACK):e===te.FRONT?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e},viewport:function(e,t,r,n){var i=this.currentViewport;i.x===e&&i.y===t&&i.z===r&&i.w===n||(this.gl.viewport(e,t,r,n),i.set(e,t,r,n))},colorMask:function(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)},clearColor:function(e,t,r,n){var i=this.currentClearColor;i.x===e&&i.y===t&&i.z===r&&i.w===n||(this.gl.clearColor(e,t,r,n),i.set(e,t,r,n))},activeTexture:function(e){var t=this.gl;void 0===e&&(e=t.TEXTURE0+this.capabilities.maxTextures-1),this.currentTextureSlot!==e&&(t.activeTexture(e),this.currentTextureSlot=e)},bindTexture:function(e,t){var r=this.gl;null===this.currentTextureSlot&&this.activeTexture();var n=this.currentBoundTextures[this.currentTextureSlot];void 0===n&&(n={type:void 0,texture:void 0},this.currentBoundTextures[this.currentTextureSlot]=n),n.type===e&&n.texture===t||(r.bindTexture(e,t||this.emptyTextures[e]),n.type=e,n.texture=t)},bindBuffer:function(e,t){var r=this.gl;this.currentBoundBuffers[e]!==t&&(r.bindBuffer(e,t),this.currentBoundBuffers[e]=t)},enable:function(e){!0!==this.states[e]&&(this.gl.enable(e),this.states[e]=!0)},disable:function(e){!1!==this.states[e]&&(this.gl.disable(e),this.states[e]=!1)},depthMask:function(e){e!==this.currentDepthMask&&(this.gl.depthMask(e),this.currentDepthMask=e)},setLineWidth:function(e){e!==this.currentLineWidth&&(1<=this.capabilities.version&&this.gl.lineWidth(e),this.currentLineWidth=e)},setProgram:function(e){this.currentProgram!==e&&(this.gl.useProgram(e.id),this.currentProgram=e)},stencilMask:function(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)},stencilFunc:function(e,t,r){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===r||(this.gl.stencilFunc(e,t,r),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=r)},stencilOp:function(e,t,r){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===r||(this.gl.stencilOp(e,t,r),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=r)},clearStencil:function(e){this.currentStencilClear!==e&&(this.gl.clearStencil(e),this.currentStencilClear=e)}}),Object.assign(Lt.prototype,{get:function(e){var t=e.uuid,r=this.properties[t];return void 0===r&&(r={},this.properties[t]=r),r},delete:function(e){delete this.properties[e.uuid]},clear:function(){this.properties={}}}),Object.assign(zt.prototype,{setTexture2D:function(e,t){var r=this.gl,n=this.state,i=this.capabilities;void 0!==t&&(t=r.TEXTURE0+t);var a=this.properties.get(e);if(e.image&&(!e.image.rtt||void 0===t)&&a.__version!==e.version){void 0===a.__webglTexture&&(e.addEventListener("dispose",this.onTextureDispose,this),a.__webglTexture=r.createTexture()),n.activeTexture(t),n.bindTexture(r.TEXTURE_2D,a.__webglTexture);var s=e.image,o=s instanceof HTMLImageElement||s instanceof HTMLCanvasElement;o&&(s=It(s,i.maxTextureSize),Ot(e)&&!1===Dt(s)&&i.version<2&&(s=Ut(s)));var h=!Dt(s)&&i.version<2;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,e.flipY),this.setTextureParameters(e,h);var c,u=e.mipmaps,l=e.format,d=e.internalformat||e.format,p=e.type;if(i.version<2?(l!==d&&console.warn("texture format "+l+" not same as internalformat "+d+" in webgl 1.0."),p===se.HALF_FLOAT&&(i.getExtension("OES_texture_half_float")||console.warn("extension OES_texture_half_float is not support in webgl 1.0.")),p===se.FLOAT&&(i.getExtension("OES_texture_float")||console.warn("extension OES_texture_float is not support in webgl 1.0.")),l!==ae.DEPTH_COMPONENT&&l!==ae.DEPTH_STENCIL||i.getExtension("WEBGL_depth_texture")||console.warn("extension WEBGL_depth_texture is not support in webgl 1.0.")):p===se.HALF_FLOAT&&(p=5131),o)if(0<u.length&&!h){for(var f=0,_=u.length;f<_;f++)c=u[f],r.texImage2D(r.TEXTURE_2D,f,d,l,p,c);e.generateMipmaps=!1}else r.texImage2D(r.TEXTURE_2D,0,d,l,p,s);else if(0<u.length&&!h){for(f=0,_=u.length;f<_;f++)c=u[f],r.texImage2D(r.TEXTURE_2D,f,d,c.width,c.height,e.border,l,p,c.data);e.generateMipmaps=!1}else r.texImage2D(r.TEXTURE_2D,0,d,s.width,s.height,e.border,l,p,s.data);return e.generateMipmaps&&!h&&r.generateMipmap(r.TEXTURE_2D),a.__version=e.version,a}return n.activeTexture(t),n.bindTexture(r.TEXTURE_2D,a.__webglTexture),a},setTextureCube:function(e,t){var r=this.gl,n=this.state,i=this.capabilities;void 0!==t&&(t=r.TEXTURE0+t);var a=this.properties.get(e);if(6===e.images.length&&(!e.images[0].rtt||void 0===t)&&a.__version!==e.version){void 0===a.__webglTexture&&(e.addEventListener("dispose",this.onTextureDispose,this),a.__webglTexture=r.createTexture()),n.activeTexture(t),n.bindTexture(r.TEXTURE_CUBE_MAP,a.__webglTexture);var s=[],o=e.format,h=e.internalformat||e.format,c=e.type;i.version<2?(o!==h&&console.warn("texture format "+o+" not same as internalformat "+h+" in webgl 1.0."),c===se.HALF_FLOAT&&(i.getExtension("OES_texture_half_float")||console.warn("extension OES_texture_half_float is not support in webgl 1.0.")),c===se.FLOAT&&(i.getExtension("OES_texture_float")||console.warn("extension OES_texture_float is not support in webgl 1.0.")),o!==ae.DEPTH_COMPONENT&&o!==ae.DEPTH_STENCIL||i.getExtension("WEBGL_depth_texture")||console.warn("extension WEBGL_depth_texture is not support in webgl 1.0.")):c===se.HALF_FLOAT&&(c=5131);for(var u=!1,l=0;l<6;l++){(p=(d=e.images[l])instanceof HTMLImageElement||d instanceof HTMLCanvasElement)&&(d=It(d,i.maxTextureSize),Ot(e)&&!1===Dt(d)&&i.version<2&&(d=Ut(d))),!Dt(d)&&i.version<2&&(u=!0),(s[l]=d).__isElement=p}r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,e.flipY),this.setTextureParameters(e,u);for(l=0;l<6;l++){var d,p;(p=(d=s[l]).__isElement)?r.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,h,o,c,d):r.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,h,d.width,d.height,e.border,o,c,d.data)}return e.generateMipmaps&&!u&&r.generateMipmap(r.TEXTURE_CUBE_MAP),a.__version=e.version,a}return n.activeTexture(t),n.bindTexture(r.TEXTURE_CUBE_MAP,a.__webglTexture),a},setTextureParameters:function(e,t){var r,n,i,a,s,o,h,c,u=this.gl,l=this.capabilities,d=e.textureType,p=(n=t,i=(r=e).wrapS,a=r.wrapT,s=r.magFilter,o=r.minFilter,h=r.anisotropy,c=r.compare,n&&(i=he.CLAMP_TO_EDGE,a=he.CLAMP_TO_EDGE,r.wrapS===he.CLAMP_TO_EDGE&&r.wrapT===he.CLAMP_TO_EDGE||console.warn("Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to zen3d.TEXTURE_WRAP.CLAMP_TO_EDGE.",r),s=Ft(r.magFilter),o=Ft(r.minFilter),(r.minFilter!==oe.NEAREST&&r.minFilter!==oe.LINEAR||r.magFilter!==oe.NEAREST&&r.magFilter!==oe.LINEAR)&&console.warn("Texture is not power of two. Texture.minFilter and Texture.magFilter should be set to zen3d.TEXTURE_FILTER.NEAREST or zen3d.TEXTURE_FILTER.LINEAR.",r)),[i,a,s,o,h,c]);u.texParameteri(d,u.TEXTURE_WRAP_S,p[0]),u.texParameteri(d,u.TEXTURE_WRAP_T,p[1]),u.texParameteri(d,u.TEXTURE_MAG_FILTER,p[2]),u.texParameteri(d,u.TEXTURE_MIN_FILTER,p[3]);var f=l.anisotropyExt;f&&u.texParameterf(d,f.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(p[4],l.maxAnisotropy)),2<=l.version&&(0<p[5]?(u.texParameteri(d,u.TEXTURE_COMPARE_MODE,u.COMPARE_REF_TO_TEXTURE),u.texParameteri(d,u.TEXTURE_COMPARE_FUNC,p[5])):u.texParameteri(d,u.TEXTURE_COMPARE_MODE,u.NONE))},onTextureDispose:function(e){var t=this.gl,r=e.target,n=this.properties.get(r);r.removeEventListener("dispose",this.onTextureDispose,this),n.__webglTexture&&t.deleteTexture(n.__webglTexture),this.properties.delete(r)}}),Object.assign(Ht.prototype,{setGeometry:function(e){var t=this.gl,r=(this.state,this.properties),n=this.properties.get(e);for(var i in n.created||(e.addEventListener("dispose",this.onGeometryDispose2,this),n.created=!0,n._vaos={}),null!==e.index&&Bt(t,r,e.index,t.ELEMENT_ARRAY_BUFFER),e.attributes)Bt(t,r,e.attributes[i],t.ARRAY_BUFFER);return n},onGeometryDispose:function(e){var t=this.gl,r=e.target,n=this.properties.get(r);for(var i in r.removeEventListener("dispose",this.onGeometryDispose,this),null!==r.index&&Gt(t,properties,r.index),r.attributes)Gt(t,properties,r.attributes[i]);for(var a in n._vaos){var s=n[a];s&&(2<=this.capabilities.version?t.deleteVertexArray(s):t.deleteVertexArrayOES(s))}n._vaos={},n.created=!1,this.properties.delete(r)}}),Object.assign(kt.prototype,{_generateSetValue:function(){var i=this.gl,e=this.type,a=this.location;switch(e){case ue.FLOAT:1<this.size?this.setValue=this.set=function(e){i.uniform1fv(a,e)}:this.setValue=this.set=function(e){i.uniform1f(a,e)};break;case ue.SAMPLER_2D:case ue.SAMPLER_CUBE:case ue.SAMPLER_2D_SHADOW:case ue.SAMPLER_CUBE_SHADOW:case ue.BOOL:case ue.INT:this.setValue=this.set=function(e){i.uniform1i(a,e)};break;case ue.FLOAT_VEC2:this.setValue=function(e,t){i.uniform2f(a,e,t)},this.set=function(e){i.uniform2fv(a,e)};break;case ue.BOOL_VEC2:case ue.INT_VEC2:this.setValue=function(e,t){i.uniform2i(a,e,t)},this.set=function(e){i.uniform2iv(a,e)};break;case ue.FLOAT_VEC3:this.setValue=function(e,t,r){i.uniform3f(a,e,t,r)},this.set=function(e){i.uniform3fv(a,e)};break;case ue.BOOL_VEC3:case ue.INT_VEC3:this.setValue=function(e,t,r){i.uniform3i(a,e,t,r)},this.set=function(e){i.uniform3iv(a,e)};break;case ue.FLOAT_VEC4:this.setValue=function(e,t,r,n){i.uniform4f(a,e,t,r,n)},this.set=function(e){i.uniform4fv(a,e)};break;case ue.BOOL_VEC4:case ue.INT_VEC4:this.setValue=function(e,t,r,n){i.uniform4i(a,e,t,r,n)},this.set=function(e){i.uniform4iv(a,e)};break;case ue.FLOAT_MAT2:this.setValue=this.set=function(e){i.uniformMatrix2fv(a,!1,e)};break;case ue.FLOAT_MAT3:this.setValue=this.set=function(e){i.uniformMatrix3fv(a,!1,e)};break;case ue.FLOAT_MAT4:this.setValue=this.set=function(e){i.uniformMatrix4fv(a,!1,e)}}}}),Object.assign(Vt.prototype,{initCount:function(e){switch(this.type){case le.FLOAT:case le.BYTE:case le.UNSIGNED_BYTE:case le.UNSIGNED_SHORT:this.count=1;break;case le.FLOAT_VEC2:this.count=2;break;case le.FLOAT_VEC3:this.count=3;break;case le.FLOAT_VEC4:this.count=4}},initFormat:function(e){switch(this.type){case le.FLOAT:case le.FLOAT_VEC2:case le.FLOAT_VEC3:case le.FLOAT_VEC4:this.format=e.FLOAT;break;case le.UNSIGNED_BYTE:this.format=e.UNSIGNED_BYTE;break;case le.UNSIGNED_SHORT:this.format=e.UNSIGNED_SHORT;break;case le.BYTE:this.format=e.BYTE}}}),Xt.prototype.dispose=function(e){e.deleteProgram(this.id)};var Wt={alphaTest_frag:"#ifdef ALPHATEST\r\n\r\n\tif ( outColor.a < ALPHATEST ) discard;\r\n\r\n#endif",ambientlight_pars_frag:"uniform vec4 u_AmbientLightColor;",aoMap_pars_frag:"#ifdef USE_AOMAP\r\n\r\n\tuniform sampler2D aoMap;\r\n\tuniform float aoMapIntensity;\r\n\r\n#endif",begin_frag:"vec4 outColor = vec4(u_Color, u_Opacity);",begin_vert:"vec3 transformed = vec3(a_Position);\r\n#if defined(USE_NORMAL) || defined(USE_ENV_MAP)\r\n    vec3 objectNormal = vec3(a_Normal);\r\n#endif",bsdfs:'// diffuse just use lambert\r\n\r\nvec4 BRDF_Diffuse_Lambert(vec4 diffuseColor) {\r\n    return RECIPROCAL_PI * diffuseColor;\r\n}\r\n\r\n// specular use Cook-Torrance microfacet model, http://ruh.li/GraphicsCookTorrance.html\r\n// About RECIPROCAL_PI: referenced by http://www.joshbarczak.com/blog/?p=272\r\n\r\nvec4 F_Schlick( const in vec4 specularColor, const in float dotLH ) {\r\n\t// Original approximation by Christophe Schlick \'94\r\n\tfloat fresnel = pow( 1.0 - dotLH, 5.0 );\r\n\r\n\t// Optimized variant (presented by Epic at SIGGRAPH \'13)\r\n\t// float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\r\n\r\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\r\n}\r\n\r\n// use blinn phong instead of phong\r\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\r\n    // ( shininess * 0.5 + 1.0 ), three.js do this, but why ???\r\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\r\n}\r\n\r\nfloat G_BlinnPhong_Implicit( ) {\r\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\r\n\treturn 0.25;\r\n}\r\n\r\nvec4 BRDF_Specular_BlinnPhong(vec4 specularColor, vec3 N, vec3 L, vec3 V, float shininess) {\r\n    vec3 H = normalize(L + V);\r\n\r\n    float dotNH = saturate(dot(N, H));\r\n    float dotLH = saturate(dot(L, H));\r\n\r\n    vec4 F = F_Schlick(specularColor, dotLH);\r\n\r\n    float G = G_BlinnPhong_Implicit( );\r\n\r\n    float D = D_BlinnPhong(shininess, dotNH);\r\n\r\n    return F * G * D;\r\n}\r\n\r\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\r\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\r\n// alpha is "roughness squared" in Disney’s reparameterization\r\nfloat D_GGX( const in float alpha, const in float dotNH ) {\r\n\r\n\tfloat a2 = pow2( alpha );\r\n\r\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\r\n\r\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\r\n\r\n}\r\n\r\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\r\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\r\n// alpha is "roughness squared" in Disney’s reparameterization\r\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\r\n\r\n\t// geometry term = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\r\n\r\n\tfloat a2 = pow2( alpha );\r\n\r\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\r\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\r\n\r\n\treturn 1.0 / ( gl * gv );\r\n\r\n}\r\n\r\n// Moving Frostbite to Physically Based Rendering 2.0 - page 12, listing 2\r\n// http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr_v2.pdf\r\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\r\n\r\n\tfloat a2 = pow2( alpha );\r\n\r\n\t// dotNL and dotNV are explicitly swapped. This is not a mistake.\r\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\r\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\r\n\r\n\treturn 0.5 / max( gv + gl, EPSILON );\r\n}\r\n\r\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\r\nvec4 BRDF_Specular_GGX(vec4 specularColor, vec3 N, vec3 L, vec3 V, float roughness) {\r\n\r\n\tfloat alpha = pow2( roughness ); // UE4\'s roughness\r\n\r\n\tvec3 H = normalize(L + V);\r\n\r\n\tfloat dotNL = saturate( dot(N, L) );\r\n\tfloat dotNV = saturate( dot(N, V) );\r\n\tfloat dotNH = saturate( dot(N, H) );\r\n\tfloat dotLH = saturate( dot(L, H) );\r\n\r\n\tvec4 F = F_Schlick( specularColor, dotLH );\r\n\r\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\r\n\r\n\tfloat D = D_GGX( alpha, dotNH );\r\n\r\n\treturn F * G * D;\r\n\r\n}\r\n\r\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\r\nvec4 BRDF_Specular_GGX_Environment( const in vec3 N, const in vec3 V, const in vec4 specularColor, const in float roughness ) {\r\n\r\n\tfloat dotNV = saturate( dot( N, V ) );\r\n\r\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\r\n\r\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\r\n\r\n\tvec4 r = roughness * c0 + c1;\r\n\r\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\r\n\r\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\r\n\r\n\treturn specularColor * AB.x + AB.y;\r\n\r\n}\r\n\r\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\r\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\r\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\r\n}\r\n\r\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\r\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\r\n}',bumpMap_pars_frag:"#ifdef USE_BUMPMAP\r\n\r\n\tuniform sampler2D bumpMap;\r\n\tuniform float bumpScale;\r\n\r\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\r\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\r\n\r\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\r\n\r\n\tvec2 dHdxy_fwd(vec2 uv) {\r\n\r\n\t\tvec2 dSTdx = dFdx( uv );\r\n\t\tvec2 dSTdy = dFdy( uv );\r\n\r\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, uv ).x;\r\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, uv + dSTdx ).x - Hll;\r\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, uv + dSTdy ).x - Hll;\r\n\r\n\t\treturn vec2( dBx, dBy );\r\n\r\n\t}\r\n\r\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy) {\r\n\r\n\t\tvec3 vSigmaX = dFdx( surf_pos );\r\n\t\tvec3 vSigmaY = dFdy( surf_pos );\r\n\t\tvec3 vN = surf_norm;\t\t// normalized\r\n\r\n\t\tvec3 R1 = cross( vSigmaY, vN );\r\n\t\tvec3 R2 = cross( vN, vSigmaX );\r\n\r\n\t\tfloat fDet = dot( vSigmaX, R1 );\r\n\r\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\r\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\r\n\r\n\t}\r\n\r\n#endif\r\n",clippingPlanes_frag:"#if NUM_CLIPPING_PLANES > 0\r\n\r\n    vec4 plane;\r\n\r\n    #pragma unroll_loop\r\n    for ( int i = 0; i < NUM_CLIPPING_PLANES; i ++ ) {\r\n\r\n        plane = clippingPlanes[ i ];\r\n        if ( dot( -v_modelPos, plane.xyz ) > plane.w ) discard;\r\n\r\n    }\r\n\r\n#endif",clippingPlanes_pars_frag:"#if NUM_CLIPPING_PLANES > 0\r\n    uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\r\n#endif",color_frag:"#ifdef USE_VCOLOR\r\n    outColor *= v_Color;\r\n#endif",color_pars_frag:"#ifdef USE_VCOLOR\r\n    varying vec4 v_Color;\r\n#endif",color_pars_vert:"#ifdef USE_VCOLOR\r\n    attribute vec4 a_Color;\r\n    varying vec4 v_Color;\r\n#endif",color_vert:"#ifdef USE_VCOLOR\r\n    v_Color = a_Color;\r\n#endif",common_frag:"uniform mat4 u_View;\r\n\r\nuniform float u_Opacity;\r\nuniform vec3 u_Color;\r\n\r\nuniform vec3 u_CameraPosition;",common_vert:"attribute vec3 a_Position;\r\nattribute vec3 a_Normal;\r\n\r\n#include <transpose>\r\n#include <inverse>\r\n\r\nuniform mat4 u_Projection;\r\nuniform mat4 u_View;\r\nuniform mat4 u_Model;\r\n\r\nuniform vec3 u_CameraPosition;",diffuseMap_frag:"#ifdef USE_DIFFUSE_MAP\r\n    vec4 texelColor = texture2D( diffuseMap, v_Uv );\r\n    texelColor = mapTexelToLinear( texelColor );\r\n\r\n    outColor *= texelColor;\r\n#endif",diffuseMap_pars_frag:"#ifdef USE_DIFFUSE_MAP\r\n    uniform sampler2D diffuseMap;\r\n#endif",directlight_pars_frag:"struct DirectLight\r\n{\r\n    vec3 direction;\r\n    vec4 color;\r\n    float intensity;\r\n\r\n    int shadow;\r\n    float shadowBias;\r\n    float shadowRadius;\r\n    vec2 shadowMapSize;\r\n};\r\nuniform DirectLight u_Directional[NUM_DIR_LIGHTS];",emissiveMap_frag:"#ifdef USE_EMISSIVEMAP\r\n\r\n\tvec4 emissiveColor = texture2D(emissiveMap, v_Uv);\r\n\r\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\r\n\r\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\r\n\r\n#endif",emissiveMap_pars_frag:"#ifdef USE_EMISSIVEMAP\r\n\r\n\tuniform sampler2D emissiveMap;\r\n\r\n#endif",encodings_frag:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_frag:"// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\r\n\r\nvec4 LinearToLinear( in vec4 value ) {\r\n\treturn value;\r\n}\r\n\r\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\r\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\r\n}\r\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\r\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\r\n}\r\n\r\nvec4 sRGBToLinear( in vec4 value ) {\r\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\r\n}\r\nvec4 LinearTosRGB( in vec4 value ) {\r\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\r\n}\r\n\r\nvec4 RGBEToLinear( in vec4 value ) {\r\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\r\n}\r\nvec4 LinearToRGBE( in vec4 value ) {\r\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\r\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\r\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\r\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\r\n}\r\n\r\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\r\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\r\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\r\n}\r\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\r\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\r\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\r\n\tM            = ceil( M * 255.0 ) / 255.0;\r\n\treturn vec4( value.rgb / ( M * maxRange ), M );\r\n}\r\n\r\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\r\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\r\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\r\n}\r\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\r\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\r\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\r\n\tD            = min( floor( D ) / 255.0, 1.0 );\r\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\r\n}\r\n\r\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\r\n\r\n// M matrix, for encoding\r\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\r\nvec4 LinearToLogLuv( in vec4 value )  {\r\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\r\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\r\n\tvec4 vResult;\r\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\r\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\r\n\tvResult.w = fract(Le);\r\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\r\n\treturn vResult;\r\n}\r\n\r\n// Inverse M matrix, for decoding\r\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\r\nvec4 LogLuvToLinear( in vec4 value ) {\r\n\tfloat Le = value.z * 255.0 + value.w;\r\n\tvec3 Xp_Y_XYZp;\r\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\r\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\r\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\r\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\r\n\treturn vec4( max(vRGB, 0.0), 1.0 );\r\n}\r\n",end_frag:"gl_FragColor = outColor;",envMap_frag:"#ifdef USE_ENV_MAP\r\n\r\n    vec3 envDir;\r\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n        envDir = reflect(normalize(v_worldPos - u_CameraPosition), N);\r\n    #else\r\n        envDir = v_EnvPos;\r\n    #endif\r\n\r\n    vec4 envColor = textureCube(envMap, envDir);\r\n\r\n    envColor = envMapTexelToLinear( envColor );\r\n\r\n    #ifdef ENVMAP_BLENDING_MULTIPLY\r\n\t\toutColor = mix(outColor, envColor * outColor, u_EnvMap_Intensity);\r\n\t#elif defined( ENVMAP_BLENDING_MIX )\r\n\t\toutColor = mix(outColor, envColor, u_EnvMap_Intensity);\r\n\t#elif defined( ENVMAP_BLENDING_ADD )\r\n\t\toutColor += envColor * u_EnvMap_Intensity;\r\n\t#endif\r\n#endif",envMap_pars_frag:"#ifdef USE_ENV_MAP\r\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n        varying vec3 v_worldPos;\r\n    #else\r\n        varying vec3 v_EnvPos;\r\n    #endif\r\n    uniform samplerCube envMap;\r\n    uniform float u_EnvMap_Intensity;\r\n#endif",envMap_pars_vert:"#ifdef USE_ENV_MAP\r\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n        varying vec3 v_worldPos;\r\n    #else\r\n        varying vec3 v_EnvPos;\r\n    #endif\r\n#endif",envMap_vert:"#ifdef USE_ENV_MAP\r\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n        v_worldPos = (u_Model * vec4(transformed, 1.0)).xyz;\r\n    #else\r\n        v_EnvPos = reflect(normalize((u_Model * vec4(transformed, 1.0)).xyz - u_CameraPosition), (transposeMat4(inverseMat4(u_Model)) * vec4(objectNormal, 1.0)).xyz);\r\n    #endif\r\n#endif",fog_frag:"#ifdef USE_FOG\r\n\r\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\r\n\r\n    #ifdef USE_EXP2_FOG\r\n\r\n        float fogFactor = whiteCompliment( exp2( - u_FogDensity * u_FogDensity * depth * depth * LOG2 ) );\r\n\r\n    #else\r\n\r\n        float fogFactor = smoothstep( u_FogNear, u_FogFar, depth );\r\n\r\n    #endif\r\n\r\n    gl_FragColor.rgb = mix( gl_FragColor.rgb, u_FogColor, fogFactor );\r\n\r\n#endif",fog_pars_frag:"#ifdef USE_FOG\r\n\r\n    uniform vec3 u_FogColor;\r\n\r\n    #ifdef USE_EXP2_FOG\r\n\r\n        uniform float u_FogDensity;\r\n\r\n    #else\r\n\r\n        uniform float u_FogNear;\r\n        uniform float u_FogFar;\r\n    #endif\r\n\r\n#endif",inverse:"mat4 inverseMat4(mat4 m) {\r\n    float\r\n    a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\r\n    a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\r\n    a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\r\n    a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\r\n    b00 = a00 * a11 - a01 * a10,\r\n    b01 = a00 * a12 - a02 * a10,\r\n    b02 = a00 * a13 - a03 * a10,\r\n    b03 = a01 * a12 - a02 * a11,\r\n    b04 = a01 * a13 - a03 * a11,\r\n    b05 = a02 * a13 - a03 * a12,\r\n    b06 = a20 * a31 - a21 * a30,\r\n    b07 = a20 * a32 - a22 * a30,\r\n    b08 = a20 * a33 - a23 * a30,\r\n    b09 = a21 * a32 - a22 * a31,\r\n    b10 = a21 * a33 - a23 * a31,\r\n    b11 = a22 * a33 - a23 * a32,\r\n    det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n    return mat4(\r\n        a11 * b11 - a12 * b10 + a13 * b09,\r\n        a02 * b10 - a01 * b11 - a03 * b09,\r\n        a31 * b05 - a32 * b04 + a33 * b03,\r\n        a22 * b04 - a21 * b05 - a23 * b03,\r\n        a12 * b08 - a10 * b11 - a13 * b07,\r\n        a00 * b11 - a02 * b08 + a03 * b07,\r\n        a32 * b02 - a30 * b05 - a33 * b01,\r\n        a20 * b05 - a22 * b02 + a23 * b01,\r\n        a10 * b10 - a11 * b08 + a13 * b06,\r\n        a01 * b08 - a00 * b10 - a03 * b06,\r\n        a30 * b04 - a31 * b02 + a33 * b00,\r\n        a21 * b02 - a20 * b04 - a23 * b00,\r\n        a11 * b07 - a10 * b09 - a12 * b06,\r\n        a00 * b09 - a01 * b07 + a02 * b06,\r\n        a31 * b01 - a30 * b03 - a32 * b00,\r\n        a20 * b03 - a21 * b01 + a22 * b00) / det;\r\n}",light_frag:"#ifdef USE_LIGHT\r\n    vec4 light;\r\n    vec3 L;\r\n\r\n    vec4 totalReflect = vec4(0., 0., 0., 0.); // direct light\r\n    vec4 indirectIrradiance = vec4(0., 0., 0., 0.); // for indirect diffuse\r\n    vec4 indirectRadiance = vec4(0., 0., 0., 0.); // for indirect specular\r\n\r\n    #ifdef USE_PBR\r\n        vec4 diffuseColor = outColor.xyzw * (1.0 - metalnessFactor);\r\n        vec4 specularColor = mix(vec4(0.04), outColor.xyzw, metalnessFactor);\r\n        float roughness = clamp(roughnessFactor, 0.04, 1.0);\r\n    #else\r\n        vec4 diffuseColor = outColor.xyzw;\r\n        #ifdef USE_PHONG\r\n            vec4 specularColor = u_SpecularColor;\r\n            float shininess = u_Specular;\r\n        #endif\r\n    #endif\r\n\r\n    #ifdef USE_AMBIENT_LIGHT\r\n        #ifdef USE_PBR\r\n            indirectIrradiance += PI * diffuseColor * u_AmbientLightColor;\r\n        #else\r\n            indirectIrradiance += diffuseColor * u_AmbientLightColor;\r\n        #endif\r\n    #endif\r\n\r\n    // TODO light map\r\n\r\n    #ifdef USE_PBR\r\n        #ifdef USE_ENV_MAP\r\n    \t\tvec3 envDir;\r\n    \t    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\r\n    \t        envDir = reflect(normalize(v_worldPos - u_CameraPosition), N);\r\n    \t    #else\r\n    \t        envDir = v_EnvPos;\r\n    \t    #endif\r\n            indirectIrradiance += getLightProbeIndirectIrradiance(8, envDir);\r\n            indirectRadiance += getLightProbeIndirectRadiance(GGXRoughnessToBlinnExponent(roughness), 8, envDir);\r\n    \t#endif\r\n    #endif\r\n\r\n    #if (defined(USE_PHONG) || defined(USE_PBR))\r\n        vec3 V = normalize( u_CameraPosition - v_modelPos );\r\n    #endif\r\n\r\n    float dotNL;\r\n    vec4 irradiance;\r\n    vec4 reflectLight;\r\n    float dist;\r\n\r\n    #if NUM_DIR_LIGHTS > 0\r\n\r\n        #pragma unroll_loop\r\n        for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\r\n            L = -u_Directional[ i ].direction;\r\n            light = u_Directional[ i ].color * u_Directional[ i ].intensity;\r\n            L = normalize(L);\r\n\r\n            dotNL = saturate( dot(N, L) );\r\n            irradiance = light * dotNL;\r\n\r\n            #ifdef USE_SHADOW\r\n                #ifdef USE_PCSS_SOFT_SHADOW\r\n                    irradiance *= bool( u_Directional[ i ].shadow ) ? getShadowWithPCSS( directionalDepthMap[ i ], directionalShadowMap[ i ], vDirectionalShadowCoord[ i ], u_Directional[ i ].shadowBias, u_Directional[ i ].shadowRadius, u_Directional[ i ].shadowMapSize ) : 1.0;\r\n                #else\r\n                    irradiance *= bool( u_Directional[ i ].shadow ) ? getShadow( directionalShadowMap[ i ], vDirectionalShadowCoord[ i ], u_Directional[ i ].shadowBias, u_Directional[ i ].shadowRadius, u_Directional[ i ].shadowMapSize ) : 1.0;\r\n                #endif\r\n            #endif\r\n\r\n            #ifdef USE_PBR\r\n                irradiance *= PI;\r\n            #endif\r\n\r\n            reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\r\n\r\n            #ifdef USE_PHONG\r\n                reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\r\n            #endif\r\n\r\n            #ifdef USE_PBR\r\n                reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\r\n            #endif\r\n\r\n            totalReflect += reflectLight;\r\n        }\r\n\r\n    #endif\r\n\r\n    #if NUM_POINT_LIGHTS > 0\r\n        vec3 worldV;\r\n\r\n        #pragma unroll_loop\r\n        for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\r\n            L = u_Point[ i ].position - v_modelPos;\r\n            dist = pow(clamp(1. - length(L) / u_Point[ i ].distance, 0.0, 1.0), u_Point[ i ].decay);\r\n            light = u_Point[ i ].color * u_Point[ i ].intensity * dist;\r\n            L = normalize(L);\r\n\r\n            dotNL = saturate( dot(N, L) );\r\n            irradiance = light * dotNL;\r\n\r\n            #ifdef USE_PBR\r\n                irradiance *= PI;\r\n            #endif\r\n\r\n            #ifdef USE_SHADOW\r\n                worldV = v_modelPos - u_Point[ i ].position;\r\n                irradiance *= bool( u_Point[ i ].shadow ) ? getPointShadow( pointShadowMap[ i ], worldV, u_Point[ i ].shadowBias, u_Point[ i ].shadowRadius, u_Point[ i ].shadowMapSize, u_Point[ i ].shadowCameraNear, u_Point[ i ].shadowCameraFar ) : 1.0;\r\n            #endif\r\n\r\n            reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\r\n\r\n            #ifdef USE_PHONG\r\n                reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\r\n            #endif\r\n\r\n            #ifdef USE_PBR\r\n                reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\r\n            #endif\r\n\r\n            totalReflect += reflectLight;\r\n        }\r\n\r\n    #endif\r\n\r\n    #if NUM_SPOT_LIGHTS > 0\r\n        float lightDistance;\r\n        float angleCos;\r\n        float spotEffect;\r\n\r\n        #pragma unroll_loop\r\n        for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\r\n            L = u_Spot[ i ].position - v_modelPos;\r\n            lightDistance = length(L);\r\n            L = normalize(L);\r\n            angleCos = dot( L, -normalize(u_Spot[ i ].direction) );\r\n\r\n            if( all( bvec2(angleCos > u_Spot[ i ].coneCos, lightDistance < u_Spot[ i ].distance) ) ) {\r\n\r\n                spotEffect = smoothstep( u_Spot[ i ].coneCos, u_Spot[ i ].penumbraCos, angleCos );\r\n                dist = pow(clamp(1. - lightDistance / u_Spot[ i ].distance, 0.0, 1.0), u_Spot[ i ].decay);\r\n                light = u_Spot[ i ].color * u_Spot[ i ].intensity * dist * spotEffect;\r\n\r\n                dotNL = saturate( dot(N, L) );\r\n                irradiance = light * dotNL;\r\n\r\n                #ifdef USE_PBR\r\n                    irradiance *= PI;\r\n                #endif\r\n\r\n                #ifdef USE_SHADOW\r\n                    #ifdef USE_PCSS_SOFT_SHADOW\r\n                        irradiance *= bool( u_Spot[ i ].shadow ) ? getShadowWithPCSS( spotDepthMap[ i ], spotShadowMap[ i ], vSpotShadowCoord[ i ], u_Spot[ i ].shadowBias, u_Spot[ i ].shadowRadius, u_Spot[ i ].shadowMapSize ) : 1.0;\r\n                    #else\r\n                        irradiance *= bool( u_Spot[ i ].shadow ) ? getShadow( spotShadowMap[ i ], vSpotShadowCoord[ i ], u_Spot[ i ].shadowBias, u_Spot[ i ].shadowRadius, u_Spot[ i ].shadowMapSize ) : 1.0;\r\n                    #endif\r\n                #endif\r\n\r\n                reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\r\n\r\n                #ifdef USE_PHONG\r\n                    reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\r\n                #endif\r\n\r\n                #ifdef USE_PBR\r\n                    reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\r\n                #endif\r\n\r\n                totalReflect += reflectLight;\r\n            }\r\n\r\n        }\r\n\r\n    #endif\r\n\r\n    vec4 indirectDiffuse = indirectIrradiance * BRDF_Diffuse_Lambert(diffuseColor);\r\n    vec4 indirectSpecular = vec4(0., 0., 0., 0.);\r\n\r\n    #if defined( USE_ENV_MAP ) && defined( USE_PBR )\r\n        indirectSpecular += indirectRadiance * BRDF_Specular_GGX_Environment(N, V, specularColor, roughness) * specularStrength;\r\n    #endif\r\n\r\n    #ifdef USE_AOMAP\r\n\r\n    \t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n    \tfloat ambientOcclusion = ( texture2D( aoMap, v_Uv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\r\n\r\n    \tindirectDiffuse *= ambientOcclusion;\r\n\r\n    \t#if defined( USE_ENV_MAP ) && defined( USE_PBR )\r\n\r\n    \t\tfloat dotNV = saturate( dot( N, V ) );\r\n\r\n    \t\tindirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, GGXRoughnessToBlinnExponent(roughness) );\r\n\r\n    \t#endif\r\n\r\n    #endif\r\n\r\n    outColor.xyz = totalReflect.xyz + indirectDiffuse.xyz + indirectSpecular.xyz;\r\n#endif",light_pars_frag:"#ifdef USE_AMBIENT_LIGHT\r\n    #include <ambientlight_pars_frag>\r\n#endif\r\n#if NUM_DIR_LIGHTS > 0\r\n    #include <directlight_pars_frag>\r\n#endif\r\n#if NUM_POINT_LIGHTS > 0\r\n    #include <pointlight_pars_frag>\r\n#endif\r\n#if NUM_SPOT_LIGHTS > 0\r\n    #include <spotlight_pars_frag>\r\n#endif\r\n\r\n#if defined(USE_PBR) && defined(USE_ENV_MAP)\r\n\r\n    vec4 getLightProbeIndirectIrradiance(const in int maxMIPLevel, const in vec3 envDir) {\r\n        // TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\r\n    \t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\r\n\r\n    \t#ifdef TEXTURE_LOD_EXT\r\n\r\n    \t\tvec4 envMapColor = textureCubeLodEXT( envMap, envDir, float( maxMIPLevel ) );\r\n\r\n    \t#else\r\n\r\n    \t\t// force the bias high to get the last LOD level as it is the most blurred.\r\n    \t\tvec4 envMapColor = textureCube( envMap, envDir, float( maxMIPLevel ) );\r\n\r\n    \t#endif\r\n\r\n        envMapColor = envMapTexelToLinear( envMapColor );\r\n\r\n        return PI * envMapColor * u_EnvMap_Intensity;\r\n    }\r\n\r\n    // taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\r\n    float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\r\n\r\n    \t//float envMapWidth = pow( 2.0, maxMIPLevelScalar );\r\n    \t//float desiredMIPLevel = log2( envMapWidth * sqrt( 3.0 ) ) - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\r\n\r\n    \tfloat maxMIPLevelScalar = float( maxMIPLevel );\r\n    \tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\r\n\r\n    \t// clamp to allowable LOD ranges.\r\n    \treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\r\n\r\n    }\r\n\r\n    vec4 getLightProbeIndirectRadiance(const in float blinnShininessExponent, const in int maxMIPLevel, const in vec3 envDir) {\r\n        float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\r\n\r\n        #ifdef TEXTURE_LOD_EXT\r\n\r\n    \t\tvec4 envMapColor = textureCubeLodEXT( envMap, envDir, specularMIPLevel );\r\n\r\n    \t#else\r\n\r\n    \t\tvec4 envMapColor = textureCube( envMap, envDir, specularMIPLevel );\r\n\r\n    \t#endif\r\n\r\n        envMapColor = envMapTexelToLinear( envMapColor );\r\n\r\n        return envMapColor * u_EnvMap_Intensity;\r\n    }\r\n\r\n    // ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n    float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\r\n\r\n    \treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\r\n\r\n    }\r\n\r\n#endif",normalMap_pars_frag:"#include <tbn>\r\n#include <tsn>\r\nuniform sampler2D normalMap;",normal_frag:"#ifdef USE_NORMAL\r\n    #ifdef DOUBLE_SIDED\r\n    \tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\r\n    #else\r\n    \tfloat flipNormal = 1.0;\r\n    #endif\r\n    #ifdef FLAT_SHADED\r\n        // Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\r\n    \tvec3 fdx = vec3( dFdx( v_modelPos.x ), dFdx( v_modelPos.y ), dFdx( v_modelPos.z ) );\r\n    \tvec3 fdy = vec3( dFdy( v_modelPos.x ), dFdy( v_modelPos.y ), dFdy( v_modelPos.z ) );\r\n    \tvec3 N = normalize( cross( fdx, fdy ) );\r\n    #else\r\n        vec3 N = normalize(v_Normal) * flipNormal;\r\n    #endif\r\n    #ifdef USE_NORMAL_MAP\r\n        vec3 normalMapColor = texture2D(normalMap, v_Uv).rgb;\r\n        // for now, uv coord is flip Y\r\n        mat3 tspace = tsn(N, -v_modelPos, vec2(v_Uv.x, 1.0 - v_Uv.y));\r\n        // mat3 tspace = tbn(normalize(v_Normal), v_modelPos, vec2(v_Uv.x, 1.0 - v_Uv.y));\r\n        N = normalize(tspace * (normalMapColor * 2.0 - 1.0));\r\n    #elif defined(USE_BUMPMAP)\r\n        N = perturbNormalArb(-v_modelPos, N, dHdxy_fwd(v_Uv));\r\n    #endif\r\n#endif",normal_pars_frag:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\r\n    varying vec3 v_Normal;\r\n#endif",normal_pars_vert:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\r\n    //attribute vec3 a_Normal;\r\n    varying vec3 v_Normal;\r\n#endif",normal_vert:"#if defined(USE_NORMAL) && !defined(FLAT_SHADED)\r\n    v_Normal = (transposeMat4(inverseMat4(u_Model)) * vec4(objectNormal, 1.0)).xyz;\r\n\r\n    #ifdef FLIP_SIDED\r\n    \tv_Normal = - v_Normal;\r\n    #endif\r\n#endif",packing:"const float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\r\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\r\n\r\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\r\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\r\n\r\nconst float ShiftRight8 = 1. / 256.;\r\n\r\nvec4 packDepthToRGBA( const in float v ) {\r\n\r\n    vec4 r = vec4( fract( v * PackFactors ), v );\r\n    r.yzw -= r.xyz * ShiftRight8; // tidy overflow\r\n    return r * PackUpscale;\r\n\r\n}\r\n\r\nfloat unpackRGBAToDepth( const in vec4 v ) {\r\n\r\n    return dot( v, UnpackFactors );\r\n\r\n}",pointlight_pars_frag:"struct PointLight\r\n{\r\n    vec3 position;\r\n    vec4 color;\r\n    float intensity;\r\n    float distance;\r\n    float decay;\r\n\r\n    int shadow;\r\n    float shadowBias;\r\n    float shadowRadius;\r\n    vec2 shadowMapSize;\r\n\r\n    float shadowCameraNear;\r\n    float shadowCameraFar;\r\n};\r\nuniform PointLight u_Point[NUM_POINT_LIGHTS];",premultipliedAlpha_frag:"#ifdef USE_PREMULTIPLIED_ALPHA\r\n    gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;\r\n#endif",pvm_vert:"gl_Position = u_Projection * u_View * u_Model * vec4(transformed, 1.0);",shadow:"\r\n#ifdef WEBGL2\r\n    float computeShadow(sampler2DShadow shadowMap, vec3 shadowCoord) {\r\n        return texture2D( shadowMap, shadowCoord );\r\n    }\r\n#else\r\n    float computeShadow(sampler2D shadowMap, vec3 shadowCoord) {\r\n        return step( shadowCoord.z, unpackRGBAToDepth( texture2D( shadowMap, shadowCoord.xy ) ) );\r\n    }\r\n#endif\r\n\r\nfloat computeShadowWithPoissonSampling( sampler2DShadow shadowMap, vec3 shadowCoord, float texelSize ) {\r\n    vec3 poissonDisk[4];\r\n    poissonDisk[0] = vec3(-0.94201624, -0.39906216, 0);\r\n    poissonDisk[1] = vec3(0.94558609, -0.76890725, 0);\r\n    poissonDisk[2] = vec3(-0.094184101, -0.92938870, 0);\r\n    poissonDisk[3] = vec3(0.34495938, 0.29387760, 0);\r\n\r\n    return computeShadow( shadowMap, shadowCoord + poissonDisk[0] * texelSize ) * 0.25 +\r\n        computeShadow( shadowMap, shadowCoord + poissonDisk[1] * texelSize ) * 0.25 +\r\n        computeShadow( shadowMap, shadowCoord + poissonDisk[2] * texelSize ) * 0.25 +\r\n        computeShadow( shadowMap, shadowCoord + poissonDisk[3] * texelSize ) * 0.25;\r\n}\r\n\r\n// Shadow PCF kernel size 1 with a single tap (lowest quality)\r\nfloat computeShadowWithPCF1(sampler2DShadow shadowSampler, vec3 shadowCoord) {\r\n    return computeShadow(shadowSampler, shadowCoord);\r\n}\r\n\r\n// Shadow PCF kernel 3*3 in only 4 taps (medium quality)\r\n// This uses a well distributed taps to allow a gaussian distribution covering a 3*3 kernel\r\n// https://mynameismjp.wordpress.com/2013/09/10/shadow-maps/\r\nfloat computeShadowWithPCF3(sampler2DShadow shadowSampler, vec3 shadowCoord, vec2 shadowMapSizeAndInverse) {\r\n    vec2 uv = shadowCoord.xy * shadowMapSizeAndInverse.x;\t// uv in texel units\r\n    uv += 0.5;\t\t\t\t\t\t\t\t\t\t\t// offset of half to be in the center of the texel\r\n    vec2 st = fract(uv);\t\t\t\t\t\t\t\t// how far from the center\r\n    vec2 base_uv = floor(uv) - 0.5;\t\t\t\t\t\t// texel coord\r\n    base_uv *= shadowMapSizeAndInverse.y;\t\t\t\t// move back to uv coords\r\n\r\n    // Equation resolved to fit in a 3*3 distribution like \r\n    // 1 2 1\r\n    // 2 4 2 \r\n    // 1 2 1\r\n    vec2 uvw0 = 3. - 2. * st;\r\n    vec2 uvw1 = 1. + 2. * st;\r\n    vec2 u = vec2((2. - st.x) / uvw0.x - 1., st.x / uvw1.x + 1.) * shadowMapSizeAndInverse.y;\r\n    vec2 v = vec2((2. - st.y) / uvw0.y - 1., st.y / uvw1.y + 1.) * shadowMapSizeAndInverse.y;\r\n\r\n    float shadow = 0.;\r\n    shadow += uvw0.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[0]), shadowCoord.z));\r\n    shadow += uvw1.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[0]), shadowCoord.z));\r\n    shadow += uvw0.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[1]), shadowCoord.z));\r\n    shadow += uvw1.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[1]), shadowCoord.z));\r\n    shadow = shadow / 16.;\r\n\r\n    return shadow;\r\n}\r\n\r\n// Shadow PCF kernel 5*5 in only 9 taps (high quality)\r\n// This uses a well distributed taps to allow a gaussian distribution covering a 5*5 kernel\r\n// https://mynameismjp.wordpress.com/2013/09/10/shadow-maps/\r\nfloat computeShadowWithPCF5(sampler2DShadow shadowSampler, vec3 shadowCoord, vec2 shadowMapSizeAndInverse) {\r\n\r\n    vec2 uv = shadowCoord.xy * shadowMapSizeAndInverse.x;\t// uv in texel units\r\n    uv += 0.5;\t\t\t\t\t\t\t\t\t\t\t// offset of half to be in the center of the texel\r\n    vec2 st = fract(uv);\t\t\t\t\t\t\t\t// how far from the center\r\n    vec2 base_uv = floor(uv) - 0.5;\t\t\t\t\t\t// texel coord\r\n    base_uv *= shadowMapSizeAndInverse.y;\t\t\t\t// move back to uv coords\r\n\r\n    // Equation resolved to fit in a 5*5 distribution like \r\n    // 1 2 4 2 1\r\n    vec2 uvw0 = 4. - 3. * st;\r\n    vec2 uvw1 = vec2(7.);\r\n    vec2 uvw2 = 1. + 3. * st;\r\n\r\n    vec3 u = vec3((3. - 2. * st.x) / uvw0.x - 2., (3. + st.x) / uvw1.x, st.x / uvw2.x + 2.) * shadowMapSizeAndInverse.y;\r\n    vec3 v = vec3((3. - 2. * st.y) / uvw0.y - 2., (3. + st.y) / uvw1.y, st.y / uvw2.y + 2.) * shadowMapSizeAndInverse.y;\r\n\r\n    float shadow = 0.;\r\n    shadow += uvw0.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[0]), shadowCoord.z));\r\n    shadow += uvw1.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[0]), shadowCoord.z));\r\n    shadow += uvw2.x * uvw0.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[2], v[0]), shadowCoord.z));\r\n    shadow += uvw0.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[1]), shadowCoord.z));\r\n    shadow += uvw1.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[1]), shadowCoord.z));\r\n    shadow += uvw2.x * uvw1.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[2], v[1]), shadowCoord.z));\r\n    shadow += uvw0.x * uvw2.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[0], v[2]), shadowCoord.z));\r\n    shadow += uvw1.x * uvw2.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[1], v[2]), shadowCoord.z));\r\n    shadow += uvw2.x * uvw2.y * computeShadow(shadowSampler, vec3(base_uv.xy + vec2(u[2], v[2]), shadowCoord.z));\r\n    shadow = shadow / 144.;\r\n\r\n    return shadow;\r\n}\r\n\r\nfloat getShadow( sampler2DShadow shadowMap, vec4 shadowCoord, float shadowBias, float shadowRadius, vec2 shadowMapSize ) {\r\n    shadowCoord.xyz /= shadowCoord.w;\r\n\r\n    shadowCoord.z += shadowBias;\r\n\r\n    bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\r\n    bool inFrustum = all( inFrustumVec );\r\n\r\n    bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\r\n\r\n    bool frustumTest = all( frustumTestVec );\r\n\r\n    if ( frustumTest ) {\r\n        #ifdef USE_HARD_SHADOW\r\n            return computeShadow(shadowMap, shadowCoord.xyz);\r\n        #else\r\n            #ifdef USE_PCF3_SOFT_SHADOW\r\n                vec2 shadowMapSizeAndInverse = vec2(shadowMapSize.x, 1. / shadowMapSize.x);\r\n                return computeShadowWithPCF3(shadowMap, shadowCoord.xyz, shadowMapSizeAndInverse);\r\n            #else\r\n                #ifdef USE_PCF5_SOFT_SHADOW\r\n                    vec2 shadowMapSizeAndInverse = vec2(shadowMapSize.x, 1. / shadowMapSize.x);\r\n                    return computeShadowWithPCF5(shadowMap, shadowCoord.xyz, shadowMapSizeAndInverse);\r\n                #else\r\n                    float texelSize = shadowRadius / shadowMapSize.x;\r\n                    return computeShadowWithPoissonSampling(shadowMap, shadowCoord.xyz, texelSize);\r\n                #endif\r\n            #endif\r\n        #endif\r\n    }\r\n\r\n    return 1.0;\r\n\r\n}\r\n\r\nfloat textureCubeCompare( samplerCube depths, vec3 uv, float compare ) {\r\n\r\n    return step( compare, unpackRGBAToDepth( textureCube( depths, uv ) ) );\r\n\r\n}\r\n\r\nfloat getPointShadow( samplerCube shadowMap, vec3 V, float shadowBias, float shadowRadius, vec2 shadowMapSize, float shadowCameraNear, float shadowCameraFar ) {\r\n\r\n    // depth = normalized distance from light to fragment position\r\n    float depth = ( length( V ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\r\n    depth += shadowBias;\r\n\r\n    #ifdef USE_HARD_SHADOW\r\n        return textureCubeCompare( shadowMap, normalize(V), depth);\r\n    #else\r\n        float texelSize = shadowRadius / shadowMapSize.x;\r\n\r\n        vec3 poissonDisk[4];\r\n        poissonDisk[0] = vec3(-1.0, 1.0, -1.0);\r\n        poissonDisk[1] = vec3(1.0, -1.0, -1.0);\r\n        poissonDisk[2] = vec3(-1.0, -1.0, -1.0);\r\n        poissonDisk[3] = vec3(1.0, -1.0, 1.0);\r\n\r\n        return textureCubeCompare( shadowMap, normalize(V) + poissonDisk[0] * texelSize, depth ) * 0.25 +\r\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[1] * texelSize, depth ) * 0.25 +\r\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[2] * texelSize, depth ) * 0.25 +\r\n            textureCubeCompare( shadowMap, normalize(V) + poissonDisk[3] * texelSize, depth ) * 0.25;\r\n    #endif\r\n}\r\n\r\n#ifdef USE_PCSS_SOFT_SHADOW\r\n\r\n    const vec3 PoissonSamplers32[64] = vec3[64](\r\n        vec3(0.06407013, 0.05409927, 0.),\r\n        vec3(0.7366577, 0.5789394, 0.),\r\n        vec3(-0.6270542, -0.5320278, 0.),\r\n        vec3(-0.4096107, 0.8411095, 0.),\r\n        vec3(0.6849564, -0.4990818, 0.),\r\n        vec3(-0.874181, -0.04579735, 0.),\r\n        vec3(0.9989998, 0.0009880066, 0.),\r\n        vec3(-0.004920578, -0.9151649, 0.),\r\n        vec3(0.1805763, 0.9747483, 0.),\r\n        vec3(-0.2138451, 0.2635818, 0.),\r\n        vec3(0.109845, 0.3884785, 0.),\r\n        vec3(0.06876755, -0.3581074, 0.),\r\n        vec3(0.374073, -0.7661266, 0.),\r\n        vec3(0.3079132, -0.1216763, 0.),\r\n        vec3(-0.3794335, -0.8271583, 0.),\r\n        vec3(-0.203878, -0.07715034, 0.),\r\n        vec3(0.5912697, 0.1469799, 0.),\r\n        vec3(-0.88069, 0.3031784, 0.),\r\n        vec3(0.5040108, 0.8283722, 0.),\r\n        vec3(-0.5844124, 0.5494877, 0.),\r\n        vec3(0.6017799, -0.1726654, 0.),\r\n        vec3(-0.5554981, 0.1559997, 0.),\r\n        vec3(-0.3016369, -0.3900928, 0.),\r\n        vec3(-0.5550632, -0.1723762, 0.),\r\n        vec3(0.925029, 0.2995041, 0.),\r\n        vec3(-0.2473137, 0.5538505, 0.),\r\n        vec3(0.9183037, -0.2862392, 0.),\r\n        vec3(0.2469421, 0.6718712, 0.),\r\n        vec3(0.3916397, -0.4328209, 0.),\r\n        vec3(-0.03576927, -0.6220032, 0.),\r\n        vec3(-0.04661255, 0.7995201, 0.),\r\n        vec3(0.4402924, 0.3640312, 0.),\r\n\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.),\r\n        vec3(0., 0., 0.)\r\n    );\r\n\r\n    const vec3 PoissonSamplers64[64] = vec3[64](\r\n        vec3(-0.613392, 0.617481, 0.),\r\n        vec3(0.170019, -0.040254, 0.),\r\n        vec3(-0.299417, 0.791925, 0.),\r\n        vec3(0.645680, 0.493210, 0.),\r\n        vec3(-0.651784, 0.717887, 0.),\r\n        vec3(0.421003, 0.027070, 0.),\r\n        vec3(-0.817194, -0.271096, 0.),\r\n        vec3(-0.705374, -0.668203, 0.),\r\n        vec3(0.977050, -0.108615, 0.),\r\n        vec3(0.063326, 0.142369, 0.),\r\n        vec3(0.203528, 0.214331, 0.),\r\n        vec3(-0.667531, 0.326090, 0.),\r\n        vec3(-0.098422, -0.295755, 0.),\r\n        vec3(-0.885922, 0.215369, 0.),\r\n        vec3(0.566637, 0.605213, 0.),\r\n        vec3(0.039766, -0.396100, 0.),\r\n        vec3(0.751946, 0.453352, 0.),\r\n        vec3(0.078707, -0.715323, 0.),\r\n        vec3(-0.075838, -0.529344, 0.),\r\n        vec3(0.724479, -0.580798, 0.),\r\n        vec3(0.222999, -0.215125, 0.),\r\n        vec3(-0.467574, -0.405438, 0.),\r\n        vec3(-0.248268, -0.814753, 0.),\r\n        vec3(0.354411, -0.887570, 0.),\r\n        vec3(0.175817, 0.382366, 0.),\r\n        vec3(0.487472, -0.063082, 0.),\r\n        vec3(-0.084078, 0.898312, 0.),\r\n        vec3(0.488876, -0.783441, 0.),\r\n        vec3(0.470016, 0.217933, 0.),\r\n        vec3(-0.696890, -0.549791, 0.),\r\n        vec3(-0.149693, 0.605762, 0.),\r\n        vec3(0.034211, 0.979980, 0.),\r\n        vec3(0.503098, -0.308878, 0.),\r\n        vec3(-0.016205, -0.872921, 0.),\r\n        vec3(0.385784, -0.393902, 0.),\r\n        vec3(-0.146886, -0.859249, 0.),\r\n        vec3(0.643361, 0.164098, 0.),\r\n        vec3(0.634388, -0.049471, 0.),\r\n        vec3(-0.688894, 0.007843, 0.),\r\n        vec3(0.464034, -0.188818, 0.),\r\n        vec3(-0.440840, 0.137486, 0.),\r\n        vec3(0.364483, 0.511704, 0.),\r\n        vec3(0.034028, 0.325968, 0.),\r\n        vec3(0.099094, -0.308023, 0.),\r\n        vec3(0.693960, -0.366253, 0.),\r\n        vec3(0.678884, -0.204688, 0.),\r\n        vec3(0.001801, 0.780328, 0.),\r\n        vec3(0.145177, -0.898984, 0.),\r\n        vec3(0.062655, -0.611866, 0.),\r\n        vec3(0.315226, -0.604297, 0.),\r\n        vec3(-0.780145, 0.486251, 0.),\r\n        vec3(-0.371868, 0.882138, 0.),\r\n        vec3(0.200476, 0.494430, 0.),\r\n        vec3(-0.494552, -0.711051, 0.),\r\n        vec3(0.612476, 0.705252, 0.),\r\n        vec3(-0.578845, -0.768792, 0.),\r\n        vec3(-0.772454, -0.090976, 0.),\r\n        vec3(0.504440, 0.372295, 0.),\r\n        vec3(0.155736, 0.065157, 0.),\r\n        vec3(0.391522, 0.849605, 0.),\r\n        vec3(-0.620106, -0.328104, 0.),\r\n        vec3(0.789239, -0.419965, 0.),\r\n        vec3(-0.545396, 0.538133, 0.),\r\n        vec3(-0.178564, -0.596057, 0.)\r\n    );\r\n\r\n    // https://stackoverflow.com/questions/4200224/random-noise-functions-for-glsl\r\n    float getRand(vec2 seed) {\r\n        return fract(sin(dot(seed.xy ,vec2(12.9898,78.233))) * 43758.5453);\r\n    }\r\n\r\n    // PCSS\r\n    // This helps to achieve a contact hardening effect on the shadow\r\n    // It uses 16 Taps for search and a 32 PCF taps in a randomly rotating poisson sampling disc.\r\n    // This is heavily inspired from http://developer.download.nvidia.com/shaderlibrary/docs/shadow_PCSS.pdf\r\n    // and http://developer.download.nvidia.com/whitepapers/2008/PCSS_Integration.pdf\r\n    float computeShadowWithPCSS(sampler2D depthSampler, sampler2DShadow shadowSampler, vec3 shadowCoord, float shadowMapSizeInverse, float lightSizeUV, int searchTapCount, int pcfTapCount, vec3[64] poissonSamplers) {\r\n        float depthMetric = shadowCoord.z;\r\n\r\n        float blockerDepth = 0.0;\r\n        float sumBlockerDepth = 0.0;\r\n        float numBlocker = 0.0;\r\n        for (int i = 0; i < searchTapCount; i ++) {\r\n            blockerDepth = unpackRGBAToDepth( texture( depthSampler, shadowCoord.xy + (lightSizeUV * shadowMapSizeInverse * PoissonSamplers32[i].xy) ) );\r\n            if (blockerDepth < depthMetric) {\r\n                sumBlockerDepth += blockerDepth;\r\n                numBlocker++;\r\n            }\r\n        }\r\n\r\n        if (numBlocker < 1.0) {\r\n            return 1.0;\r\n        }\r\n        float avgBlockerDepth = sumBlockerDepth / numBlocker;\r\n\r\n        // Offset preventing aliasing on contact.\r\n        float AAOffset = shadowMapSizeInverse * 10.;\r\n        // Do not dividing by z despite being physically incorrect looks better due to the limited kernel size.\r\n        // float penumbraRatio = (depthMetric - avgBlockerDepth) / avgBlockerDepth;\r\n        float penumbraRatio = ((depthMetric - avgBlockerDepth) + AAOffset);\r\n        float filterRadius = penumbraRatio * lightSizeUV * shadowMapSizeInverse;\r\n\r\n        float random = getRand(shadowCoord.xy);//getRand(vPositionFromLight.xy);\r\n        float rotationAngle = random * 3.1415926;\r\n        vec2 rotationVector = vec2(cos(rotationAngle), sin(rotationAngle));\r\n\r\n        float shadow = 0.;\r\n        for (int i = 0; i < pcfTapCount; i++) {\r\n            vec3 offset = poissonSamplers[i];\r\n            // Rotated offset.\r\n            offset = vec3(offset.x * rotationVector.x - offset.y * rotationVector.y, offset.y * rotationVector.x + offset.x * rotationVector.y, 0.);\r\n            shadow += texture(shadowSampler, shadowCoord + offset * filterRadius);\r\n        }\r\n        shadow /= float(pcfTapCount);\r\n\r\n        // Blocker distance falloff\r\n        shadow = mix(shadow, 1., depthMetric - avgBlockerDepth);\r\n\r\n        return shadow;\r\n    }\r\n\r\n    float getShadowWithPCSS( sampler2D depthSampler, sampler2DShadow shadowMap, vec4 shadowCoord, float shadowBias, float shadowRadius, vec2 shadowMapSize ) {\r\n\r\n        shadowCoord.xyz /= shadowCoord.w;\r\n\r\n        shadowCoord.z += shadowBias;\r\n\r\n        bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\r\n        bool inFrustum = all( inFrustumVec );\r\n\r\n        bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\r\n\r\n        bool frustumTest = all( frustumTestVec );\r\n\r\n        if ( frustumTest ) {\r\n            #ifdef USE_PCSS16_SOFT_SHADOW\r\n                return computeShadowWithPCSS(depthSampler, shadowMap, shadowCoord.xyz, 1. / shadowMapSize.x, 0.1 * shadowMapSize.x, 16, 16, PoissonSamplers32);\r\n            #else\r\n                #ifdef USE_PCSS32_SOFT_SHADOW\r\n                    return computeShadowWithPCSS(depthSampler, shadowMap, shadowCoord.xyz, 1. / shadowMapSize.x, 0.1 * shadowMapSize.x, 16, 32, PoissonSamplers32);\r\n                #else\r\n                    return computeShadowWithPCSS(depthSampler, shadowMap, shadowCoord.xyz, 1. / shadowMapSize.x, 0.1 * shadowMapSize.x, 32, 64, PoissonSamplers64);\r\n                #endif\r\n            #endif\r\n        }\r\n\r\n        return 1.0;\r\n\r\n    }\r\n\r\n#endif",shadowMap_frag:"#ifdef USE_SHADOW\r\n    // outColor *= getShadowMask();\r\n#endif",shadowMap_pars_frag:"#ifdef USE_SHADOW\r\n\r\n    #if NUM_DIR_LIGHTS > 0\r\n\r\n        uniform sampler2DShadow directionalShadowMap[ NUM_DIR_LIGHTS ];\r\n        varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\r\n\r\n        #ifdef USE_PCSS_SOFT_SHADOW\r\n\r\n            uniform sampler2D directionalDepthMap[ NUM_DIR_LIGHTS ];\r\n\r\n        #endif\r\n\r\n    #endif\r\n\r\n    #if NUM_POINT_LIGHTS > 0\r\n\r\n        uniform samplerCube pointShadowMap[ NUM_POINT_LIGHTS ];\r\n\r\n    #endif\r\n\r\n    #if NUM_SPOT_LIGHTS > 0\r\n\r\n        uniform sampler2DShadow spotShadowMap[ NUM_SPOT_LIGHTS ];\r\n        varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\r\n\r\n        #ifdef USE_PCSS_SOFT_SHADOW\r\n\r\n            uniform sampler2D spotDepthMap[ NUM_SPOT_LIGHTS ];\r\n\r\n        #endif\r\n\r\n    #endif\r\n\r\n    #include <packing>\r\n    #include <shadow>\r\n\r\n#endif",shadowMap_pars_vert:"#ifdef USE_SHADOW\r\n\r\n    #if NUM_DIR_LIGHTS > 0\r\n\r\n        uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\r\n        varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\r\n\r\n    #endif\r\n\r\n    #if NUM_POINT_LIGHTS > 0\r\n\r\n        // nothing\r\n\r\n    #endif\r\n\r\n    #if NUM_SPOT_LIGHTS > 0\r\n\r\n        uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\r\n        varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\r\n\r\n    #endif\r\n\r\n#endif",shadowMap_vert:"#ifdef USE_SHADOW\r\n\r\n    vec4 worldPosition = u_Model * vec4(transformed, 1.0);\r\n\r\n    #if NUM_DIR_LIGHTS > 0\r\n\r\n        #pragma unroll_loop\r\n        for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\r\n\r\n            vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\r\n\r\n        }\r\n\r\n    #endif\r\n\r\n    #if NUM_POINT_LIGHTS > 0\r\n\r\n        // nothing\r\n\r\n    #endif\r\n\r\n    #if NUM_SPOT_LIGHTS > 0\r\n\r\n        #pragma unroll_loop\r\n        for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\r\n\r\n            vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\r\n\r\n        }\r\n\r\n    #endif\r\n\r\n#endif",skinning_pars_vert:"#ifdef USE_SKINNING\r\n\r\n    attribute vec4 skinIndex;\r\n\tattribute vec4 skinWeight;\r\n\r\n    uniform mat4 bindMatrix;\r\n\tuniform mat4 bindMatrixInverse;\r\n\r\n    #ifdef BONE_TEXTURE\r\n        uniform sampler2D boneTexture;\r\n        uniform int boneTextureSize;\r\n\r\n        mat4 getBoneMatrix( const in float i ) {\r\n            float j = i * 4.0;\r\n            float x = mod( j, float( boneTextureSize ) );\r\n            float y = floor( j / float( boneTextureSize ) );\r\n\r\n            float dx = 1.0 / float( boneTextureSize );\r\n            float dy = 1.0 / float( boneTextureSize );\r\n\r\n            y = dy * ( y + 0.5 );\r\n\r\n            vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\r\n            vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\r\n            vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\r\n            vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\r\n\r\n            mat4 bone = mat4( v1, v2, v3, v4 );\r\n\r\n            return bone;\r\n        }\r\n    #else\r\n        uniform mat4 boneMatrices[MAX_BONES];\r\n\r\n        mat4 getBoneMatrix(const in float i) {\r\n            mat4 bone = boneMatrices[int(i)];\r\n            return bone;\r\n        }\r\n    #endif\r\n\r\n#endif",skinning_vert:"#ifdef USE_SKINNING\r\n\r\n    mat4 boneMatX = getBoneMatrix( skinIndex.x );\r\n    mat4 boneMatY = getBoneMatrix( skinIndex.y );\r\n    mat4 boneMatZ = getBoneMatrix( skinIndex.z );\r\n    mat4 boneMatW = getBoneMatrix( skinIndex.w );\r\n\r\n    vec4 skinVertex = bindMatrix * vec4(transformed, 1.0);\r\n\r\n    vec4 skinned = vec4( 0.0 );\r\n\tskinned += boneMatX * skinVertex * skinWeight.x;\r\n\tskinned += boneMatY * skinVertex * skinWeight.y;\r\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\r\n\tskinned += boneMatW * skinVertex * skinWeight.w;\r\n\tskinned = bindMatrixInverse * skinned;\r\n\r\n    // override\r\n    transformed = skinned.xyz / skinned.w;\r\n\r\n    #if defined(USE_NORMAL) || defined(USE_ENV_MAP)\r\n        mat4 skinMatrix = mat4( 0.0 );\r\n        skinMatrix += skinWeight.x * boneMatX;\r\n        skinMatrix += skinWeight.y * boneMatY;\r\n        skinMatrix += skinWeight.z * boneMatZ;\r\n        skinMatrix += skinWeight.w * boneMatW;\r\n        skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\r\n\r\n        // override\r\n        objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\r\n    #endif\r\n\r\n#endif",specularMap_frag:"float specularStrength;\r\n\r\n#ifdef USE_SPECULARMAP\r\n\r\n\tvec4 texelSpecular = texture2D( specularMap, v_Uv );\r\n\tspecularStrength = texelSpecular.r;\r\n\r\n#else\r\n\r\n\tspecularStrength = 1.0;\r\n\r\n#endif",specularMap_pars_frag:"#ifdef USE_SPECULARMAP\r\n\r\n\tuniform sampler2D specularMap;\r\n\r\n#endif",spotlight_pars_frag:"struct SpotLight\r\n{\r\n    vec3 position;\r\n    vec4 color;\r\n    float intensity;\r\n    float distance;\r\n    float decay;\r\n    float coneCos;\r\n    float penumbraCos;\r\n    vec3 direction;\r\n\r\n    int shadow;\r\n    float shadowBias;\r\n    float shadowRadius;\r\n    vec2 shadowMapSize;\r\n};\r\nuniform SpotLight u_Spot[NUM_SPOT_LIGHTS];",tbn:"mat3 tbn(vec3 N, vec3 p, vec2 uv) {\r\n    vec3 dp1 = dFdx(p.xyz);\r\n    vec3 dp2 = dFdy(p.xyz);\r\n    vec2 duv1 = dFdx(uv.st);\r\n    vec2 duv2 = dFdy(uv.st);\r\n    vec3 dp2perp = cross(dp2, N);\r\n    vec3 dp1perp = cross(N, dp1);\r\n    vec3 T = dp2perp * duv1.x + dp1perp * duv2.x;\r\n    vec3 B = dp2perp * duv1.y + dp1perp * duv2.y;\r\n    float invmax = 1.0 / sqrt(max(dot(T,T), dot(B,B)));\r\n    return mat3(T * invmax, B * invmax, N);\r\n}",transpose:"mat4 transposeMat4(mat4 inMatrix) {\r\n    vec4 i0 = inMatrix[0];\r\n    vec4 i1 = inMatrix[1];\r\n    vec4 i2 = inMatrix[2];\r\n    vec4 i3 = inMatrix[3];\r\n    mat4 outMatrix = mat4(\r\n        vec4(i0.x, i1.x, i2.x, i3.x),\r\n        vec4(i0.y, i1.y, i2.y, i3.y),\r\n        vec4(i0.z, i1.z, i2.z, i3.z),\r\n        vec4(i0.w, i1.w, i2.w, i3.w)\r\n    );\r\n    return outMatrix;\r\n}",tsn:"mat3 tsn(vec3 N, vec3 V, vec2 uv) {\r\n\r\n    vec3 q0 = dFdx( V.xyz );\r\n    vec3 q1 = dFdy( V.xyz );\r\n    vec2 st0 = dFdx( uv.st );\r\n    vec2 st1 = dFdy( uv.st );\r\n\r\n    vec3 S = normalize( q0 * st1.t - q1 * st0.t );\r\n    vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\r\n    // vec3 N = normalize( N );\r\n\r\n    mat3 tsn = mat3( S, T, N );\r\n    return tsn;\r\n}",uv_pars_frag:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\r\n    varying vec2 v_Uv;\r\n#endif\r\n\r\n#ifdef USE_AOMAP\r\n    varying vec2 v_Uv2;\r\n#endif",uv_pars_vert:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\r\n    attribute vec2 a_Uv;\r\n    varying vec2 v_Uv;\r\n    uniform mat3 uvTransform;\r\n#endif\r\n\r\n#ifdef USE_AOMAP\r\n    attribute vec2 a_Uv2;\r\n    varying vec2 v_Uv2;\r\n#endif\r\n",uv_vert:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\r\n    v_Uv = (uvTransform * vec3(a_Uv, 1)).xy;\r\n#endif\r\n\r\n#ifdef USE_AOMAP\r\n    v_Uv2 = a_Uv2;\r\n#endif",viewModelPos_pars_frag:"#if (NUM_POINT_LIGHTS > 0) || (NUM_SPOT_LIGHTS > 0) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR) || (NUM_CLIPPING_PLANES > 0) \r\n    varying vec3 v_modelPos;\r\n#endif",viewModelPos_pars_vert:"#if (NUM_POINT_LIGHTS > 0) || (NUM_SPOT_LIGHTS > 0) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR)|| (NUM_CLIPPING_PLANES > 0)\r\n    varying vec3 v_modelPos;\r\n#endif",viewModelPos_vert:"#if (NUM_POINT_LIGHTS > 0) || (NUM_SPOT_LIGHTS > 0) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR) || (NUM_CLIPPING_PLANES > 0)\r\n    v_modelPos = (u_Model * vec4(transformed, 1.0)).xyz;\r\n#endif"},Yt={basic_frag:"#include <common_frag>\r\n#include <uv_pars_frag>\r\n#include <color_pars_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <envMap_pars_frag>\r\n#include <aoMap_pars_frag>\r\n#include <fog_pars_frag>\r\nvoid main() {\r\n    #include <begin_frag>\r\n    #include <color_frag>\r\n    #include <diffuseMap_frag>\r\n    #include <alphaTest_frag>\r\n    #include <envMap_frag>\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",basic_vert:"#include <common_vert>\r\n#include <uv_pars_vert>\r\n#include <color_pars_vert>\r\n#include <envMap_pars_vert>\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    #include <uv_vert>\r\n    #include <color_vert>\r\n    #include <envMap_vert>\r\n}",canvas2d_frag:"#include <common_frag>\r\nvarying vec2 v_Uv;\r\nuniform sampler2D spriteTexture;\r\nvoid main() {\r\n    #include <begin_frag>\r\n    outColor *= texture2D(spriteTexture, v_Uv);\r\n    #include <end_frag>\r\n    #include <premultipliedAlpha_frag>\r\n}",canvas2d_vert:"#include <common_vert>\r\nattribute vec2 a_Uv;\r\nvarying vec2 v_Uv;\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <pvm_vert>\r\n    v_Uv = a_Uv;\r\n}",depth_frag:"#include <common_frag>\r\n#include <diffuseMap_pars_frag>\r\n\r\n#include <uv_pars_frag>\r\n\r\n#include <packing>\r\n\r\nvoid main() {\r\n    #if defined(USE_DIFFUSE_MAP) && defined(ALPHATEST)\r\n        vec4 texelColor = texture2D( diffuseMap, v_Uv );\r\n\r\n        float alpha = texelColor.a * u_Opacity;\r\n        if(alpha < ALPHATEST) discard;\r\n    #endif\r\n    \r\n    #ifdef DEPTH_PACKING_RGBA\r\n        gl_FragColor = packDepthToRGBA(gl_FragCoord.z);\r\n    #else\r\n        gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), u_Opacity );\r\n    #endif\r\n}",depth_vert:"#include <common_vert>\r\n#include <skinning_pars_vert>\r\n#include <uv_pars_vert>\r\nvoid main() {\r\n    #include <uv_vert>\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n}",distance_frag:"#include <common_frag>\r\nuniform float nearDistance;\r\nuniform float farDistance;\r\nvarying vec3 v_ModelPos;\r\n#include <packing>\r\nvoid main() {\r\n    float dist = length( v_ModelPos - u_CameraPosition );\r\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\r\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\r\n\r\n    gl_FragColor = packDepthToRGBA(dist);\r\n}",distance_vert:"#include <common_vert>\r\nvarying vec3 v_ModelPos;\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    v_ModelPos = (u_Model * vec4(transformed, 1.0)).xyz;\r\n}",lambert_frag:"#include <common_frag>\r\n\r\nuniform vec3 emissive;\r\n\r\n#include <uv_pars_frag>\r\n#include <color_pars_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <normalMap_pars_frag>\r\n#include <bumpMap_pars_frag>\r\n#include <light_pars_frag>\r\n#include <normal_pars_frag>\r\n#include <viewModelPos_pars_frag>\r\n#include <bsdfs>\r\n#include <envMap_pars_frag>\r\n#include <aoMap_pars_frag>\r\n#include <shadowMap_pars_frag>\r\n#include <fog_pars_frag>\r\n#include <emissiveMap_pars_frag>\r\n#include <clippingPlanes_pars_frag>\r\nvoid main() {\r\n    #include <clippingPlanes_frag>\r\n    #include <begin_frag>\r\n    #include <color_frag>\r\n    #include <diffuseMap_frag>\r\n    #include <alphaTest_frag>\r\n    #include <normal_frag>\r\n    #include <light_frag>\r\n    #include <envMap_frag>\r\n    #include <shadowMap_frag>\r\n\r\n    vec3 totalEmissiveRadiance = emissive;\r\n    #include <emissiveMap_frag>\r\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\r\n\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",lambert_vert:"#include <common_vert>\r\n#include <normal_pars_vert>\r\n#include <uv_pars_vert>\r\n#include <color_pars_vert>\r\n#include <viewModelPos_pars_vert>\r\n#include <envMap_pars_vert>\r\n#include <shadowMap_pars_vert>\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    #include <normal_vert>\r\n    #include <uv_vert>\r\n    #include <color_vert>\r\n    #include <viewModelPos_vert>\r\n    #include <envMap_vert>\r\n    #include <shadowMap_vert>\r\n}",linedashed_frag:"#include <common_frag>\r\n#include <fog_pars_frag>\r\n\r\nuniform float dashSize;\r\nuniform float totalSize;\r\n\r\nvarying float vLineDistance;\r\n\r\nvoid main() {\r\n\r\n    if ( mod( vLineDistance, totalSize ) > dashSize ) {\r\n\t\tdiscard;\r\n\t}\r\n\r\n    #include <begin_frag>\r\n    #include <end_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",linedashed_vert:"#include <common_vert>\r\n\r\nuniform float scale;\r\nattribute float lineDistance;\r\n\r\nvarying float vLineDistance;\r\n\r\nvoid main() {\r\n    vLineDistance = scale * lineDistance;\r\n\r\n    vec3 transformed = vec3(a_Position);\r\n\r\n    #include <pvm_vert>\r\n}",normaldepth_frag:"#include <common_frag>\r\n#include <diffuseMap_pars_frag>\r\n\r\n#include <uv_pars_frag>\r\n\r\n#define USE_NORMAL\r\n\r\n#include <packing>\r\n#include <normal_pars_frag>\r\n\r\nvoid main() {\r\n    #if defined(USE_DIFFUSE_MAP) && defined(ALPHATEST)\r\n        vec4 texelColor = texture2D( diffuseMap, v_Uv );\r\n\r\n        float alpha = texelColor.a * u_Opacity;\r\n        if(alpha < ALPHATEST) discard;\r\n    #endif\r\n    vec4 packedNormalDepth;\r\n    packedNormalDepth.xyz = normalize(v_Normal) * 0.5 + 0.5;\r\n    packedNormalDepth.w = gl_FragCoord.z;\r\n    gl_FragColor = packedNormalDepth;\r\n}",normaldepth_vert:"#include <common_vert>\r\n\r\n#define USE_NORMAL\r\n\r\n#include <skinning_pars_vert>\r\n#include <normal_pars_vert>\r\n#include <uv_pars_vert>\r\nvoid main() {\r\n    #include <uv_vert>\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <normal_vert>\r\n    #include <pvm_vert>\r\n}",pbr_frag:"#include <common_frag>\r\n\r\n// if no light> this will not active\r\nuniform float u_Metalness;\r\n#ifdef USE_METALNESSMAP\r\n\tuniform sampler2D metalnessMap;\r\n#endif\r\n\r\nuniform float u_Roughness;\r\n#ifdef USE_ROUGHNESSMAP\r\n\tuniform sampler2D roughnessMap;\r\n#endif\r\n\r\nuniform vec3 emissive;\r\n\r\n#include <uv_pars_frag>\r\n#include <color_pars_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <normalMap_pars_frag>\r\n#include <bumpMap_pars_frag>\r\n#include <envMap_pars_frag>\r\n#include <aoMap_pars_frag>\r\n#include <light_pars_frag>\r\n#include <normal_pars_frag>\r\n#include <viewModelPos_pars_frag>\r\n#include <bsdfs>\r\n#include <shadowMap_pars_frag>\r\n#include <fog_pars_frag>\r\n#include <emissiveMap_pars_frag>\r\n#include <clippingPlanes_pars_frag>\r\nvoid main() {\r\n    #include <clippingPlanes_frag>\r\n    #include <begin_frag>\r\n    #include <color_frag>\r\n    #include <diffuseMap_frag>\r\n    #include <alphaTest_frag>\r\n    #include <normal_frag>\r\n    #include <specularMap_frag>\r\n\r\n    float roughnessFactor = u_Roughness;\r\n    #ifdef USE_ROUGHNESSMAP\r\n    \tvec4 texelRoughness = texture2D( roughnessMap, v_Uv );\r\n    \t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n    \troughnessFactor *= texelRoughness.g;\r\n    #endif\r\n\r\n    float metalnessFactor = u_Metalness;\r\n    #ifdef USE_METALNESSMAP\r\n    \tvec4 texelMetalness = texture2D( metalnessMap, v_Uv );\r\n    \t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n    \tmetalnessFactor *= texelMetalness.b;\r\n    #endif\r\n\r\n    #include <light_frag>\r\n    #include <shadowMap_frag>\r\n\r\n    vec3 totalEmissiveRadiance = emissive;\r\n    #include <emissiveMap_frag>\r\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\r\n\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",pbr_vert:"#include <common_vert>\r\n#include <normal_pars_vert>\r\n#include <uv_pars_vert>\r\n#include <color_pars_vert>\r\n#include <viewModelPos_pars_vert>\r\n#include <envMap_pars_vert>\r\n#include <shadowMap_pars_vert>\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    #include <normal_vert>\r\n    #include <uv_vert>\r\n    #include <color_vert>\r\n    #include <viewModelPos_vert>\r\n    #include <envMap_vert>\r\n    #include <shadowMap_vert>\r\n}",phong_frag:"#include <common_frag>\r\n\r\n// if no light> this will not active\r\nuniform float u_Specular;\r\nuniform vec4 u_SpecularColor;\r\n#include <specularMap_pars_frag>\r\n\r\nuniform vec3 emissive;\r\n\r\n#include <uv_pars_frag>\r\n#include <color_pars_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <normalMap_pars_frag>\r\n#include <bumpMap_pars_frag>\r\n#include <light_pars_frag>\r\n#include <normal_pars_frag>\r\n#include <viewModelPos_pars_frag>\r\n#include <bsdfs>\r\n#include <envMap_pars_frag>\r\n#include <aoMap_pars_frag>\r\n#include <shadowMap_pars_frag>\r\n#include <fog_pars_frag>\r\n#include <emissiveMap_pars_frag>\r\n#include <clippingPlanes_pars_frag>\r\nvoid main() {\r\n    #include <clippingPlanes_frag>\r\n    #include <begin_frag>\r\n    #include <color_frag>\r\n    #include <diffuseMap_frag>\r\n    #include <alphaTest_frag>\r\n    #include <normal_frag>\r\n    #include <specularMap_frag>\r\n    #include <light_frag>\r\n    #include <envMap_frag>\r\n    #include <shadowMap_frag>\r\n\r\n    vec3 totalEmissiveRadiance = emissive;\r\n    #include <emissiveMap_frag>\r\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\r\n\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",phong_vert:"#include <common_vert>\r\n#include <normal_pars_vert>\r\n#include <uv_pars_vert>\r\n#include <color_pars_vert>\r\n#include <viewModelPos_pars_vert>\r\n#include <envMap_pars_vert>\r\n#include <shadowMap_pars_vert>\r\n#include <skinning_pars_vert>\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <skinning_vert>\r\n    #include <pvm_vert>\r\n    #include <normal_vert>\r\n    #include <uv_vert>\r\n    #include <color_vert>\r\n    #include <viewModelPos_vert>\r\n    #include <envMap_vert>\r\n    #include <shadowMap_vert>\r\n}",point_frag:"#include <common_frag>\r\n#include <diffuseMap_pars_frag>\r\n#include <fog_pars_frag>\r\nvoid main() {\r\n    #include <begin_frag>\r\n    #ifdef USE_DIFFUSE_MAP\r\n        outColor *= texture2D(diffuseMap, vec2(gl_PointCoord.x, 1.0 - gl_PointCoord.y));\r\n    #endif\r\n    #include <end_frag>\r\n    #include <encodings_frag>\r\n    #include <premultipliedAlpha_frag>\r\n    #include <fog_frag>\r\n}",point_vert:"#include <common_vert>\r\nuniform float u_PointSize;\r\nuniform float u_PointScale;\r\nvoid main() {\r\n    #include <begin_vert>\r\n    #include <pvm_vert>\r\n    vec4 mvPosition = u_View * u_Model * vec4(transformed, 1.0);\r\n    #ifdef USE_SIZEATTENUATION\r\n        gl_PointSize = u_PointSize * ( u_PointScale / - mvPosition.z );\r\n    #else\r\n        gl_PointSize = u_PointSize;\r\n    #endif\r\n}"},qt={};function Zt(e,t){var r;return e?e.encoding&&(r=e.encoding):r=pe.LINEAR,r===pe.LINEAR&&t&&(r=pe.GAMMA),r}function Kt(e){switch(e){case pe.LINEAR:return["Linear","( value )"];case pe.SRGB:return["sRGB","( value )"];case pe.RGBE:return["RGBE","( value )"];case pe.RGBM7:return["RGBM","( value, 7.0 )"];case pe.RGBM16:return["RGBM","( value, 16.0 )"];case pe.RGBD:return["RGBD","( value, 256.0 )"];case pe.GAMMA:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:console.error("unsupported encoding: "+e)}}function Qt(e,t){var r=Kt(t);return"vec4 "+e+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function Jt(e,t,r){var n,i,a,s=["precision "+t.precision+" float;","precision "+t.precision+" int;","precision "+t.precision+" sampler2D;","#define SHADER_NAME "+t.materialType,r,2<=t.version?"#define WEBGL2":"",t.useRoughnessMap?"#define USE_ROUGHNESSMAP":"",t.useMetalnessMap?"#define USE_METALNESSMAP":"",0<t.ambientLightNum?"#define USE_AMBIENT_LIGHT "+t.ambientLightNum:"",0<t.pointLightNum||0<t.directLightNum||0<t.ambientLightNum||0<t.spotLightNum?"#define USE_LIGHT":"",0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum?"#define USE_NORMAL":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useNormalMap?"#define USE_NORMAL_MAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useBumpMap?"#define USE_BUMPMAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useSpecularMap?"#define USE_SPECULARMAP":"",t.useEmissiveMap?"#define USE_EMISSIVEMAP":"",t.useShadow?"#define USE_SHADOW":"",t.flatShading?"#define FLAT_SHADED":"",t.materialType==K.LAMBERT?"#define USE_LAMBERT":"",t.materialType==K.PHONG?"#define USE_PHONG":"",t.materialType==K.PBR?"#define USE_PBR":"",t.flipSided?"#define FLIP_SIDED":"",t.useDiffuseMap?"#define USE_DIFFUSE_MAP":"",t.useEnvMap?"#define USE_ENV_MAP":"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useAOMap?"#define USE_AOMAP":"",t.useVertexColors?"#define USE_VCOLOR":"",t.useSkinning?"#define USE_SKINNING":"",0<t.bonesNum?"#define MAX_BONES "+t.bonesNum:"",t.useVertexTexture?"#define BONE_TEXTURE":""].join("\n"),o=[t.useStandardDerivatives&&t.version<2?"#extension GL_OES_standard_derivatives : enable":"",t.useShaderTextureLOD&&t.version<2?"#extension GL_EXT_shader_texture_lod : enable":"","precision "+t.precision+" float;","precision "+t.precision+" int;","precision "+t.precision+" sampler2D;",2<=t.version?"precision "+t.precision+" sampler2DShadow;":"",2<=t.version?"precision "+t.precision+" samplerCubeShadow;":"","#define SHADER_NAME "+t.materialType,"#define PI 3.14159265359","#define EPSILON 1e-6","float pow2( const in float x ) { return x*x; }","#define LOG2 1.442695","#define RECIPROCAL_PI 0.31830988618","#define saturate(a) clamp( a, 0.0, 1.0 )","#define whiteCompliment(a) ( 1.0 - saturate( a ) )",r,2<=t.version?"#define WEBGL2":"",t.version<2?"#define sampler2DShadow sampler2D":"",t.useRoughnessMap?"#define USE_ROUGHNESSMAP":"",t.useMetalnessMap?"#define USE_METALNESSMAP":"",0<t.ambientLightNum?"#define USE_AMBIENT_LIGHT "+t.ambientLightNum:"",0<t.pointLightNum||0<t.directLightNum||0<t.ambientLightNum||0<t.spotLightNum?"#define USE_LIGHT":"",0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum?"#define USE_NORMAL":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useNormalMap?"#define USE_NORMAL_MAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useBumpMap?"#define USE_BUMPMAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useSpecularMap?"#define USE_SPECULARMAP":"",t.useEmissiveMap?"#define USE_EMISSIVEMAP":"",t.useShadow?"#define USE_SHADOW":"",t.shadowType===de.HARD?"#define USE_HARD_SHADOW":"",t.shadowType===de.POISSON_SOFT?"#define USE_POISSON_SOFT_SHADOW":"",t.shadowType===de.PCF3_SOFT?"#define USE_PCF3_SOFT_SHADOW":"",t.shadowType===de.PCF5_SOFT?"#define USE_PCF5_SOFT_SHADOW":"",t.shadowType===de.PCSS16_SOFT?"#define USE_PCSS16_SOFT_SHADOW":"",t.shadowType===de.PCSS32_SOFT?"#define USE_PCSS32_SOFT_SHADOW":"",t.shadowType===de.PCSS64_SOFT?"#define USE_PCSS64_SOFT_SHADOW":"",t.shadowType===de.PCSS16_SOFT||t.shadowType===de.PCSS32_SOFT||t.shadowType===de.PCSS64_SOFT?"#define USE_PCSS_SOFT_SHADOW":"",t.flatShading?"#define FLAT_SHADED":"",t.materialType==K.LAMBERT?"#define USE_LAMBERT":"",t.materialType==K.PHONG?"#define USE_PHONG":"",t.materialType==K.PBR?"#define USE_PBR":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.useShaderTextureLOD?"#define TEXTURE_LOD_EXT":"",t.useDiffuseMap?"#define USE_DIFFUSE_MAP":"",t.useEnvMap?"#define USE_ENV_MAP":"",t.useAOMap?"#define USE_AOMAP":"",t.useVertexColors?"#define USE_VCOLOR":"",t.premultipliedAlpha?"#define USE_PREMULTIPLIED_ALPHA":"",t.fog?"#define USE_FOG":"",t.fogExp2?"#define USE_EXP2_FOG":"",t.alphaTest?"#define ALPHATEST "+t.alphaTest:"",t.useEnvMap?"#define "+t.envMapCombine:"","#define GAMMA_FACTOR "+t.gammaFactor,t.diffuseMapEncoding||t.envMapEncoding||t.emissiveMapEncoding||t.outputEncoding?Wt.encodings_pars_frag:"",t.diffuseMapEncoding?Qt("mapTexelToLinear",t.diffuseMapEncoding):"",t.envMapEncoding?Qt("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMapEncoding?Qt("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.outputEncoding?(n="linearToOutputTexel",i=t.outputEncoding,a=Kt(i),"vec4 "+n+"( vec4 value ) { return LinearTo"+a[0]+a[1]+"; }"):"",t.packDepthToRGBA?"#define DEPTH_PACKING_RGBA":""].join("\n"),h=Yt[t.materialType+"_vert"]||t.vertexShader||Yt.basic_vert,c=Yt[t.materialType+"_frag"]||t.fragmentShader||Yt.basic_frag,u=[s,h].join("\n"),l=[o,c].join("\n");if(u=$t(u),l=$t(l),u=er(u,t),l=er(l,t),u=tr(u,t),l=tr(l,t),u=rr(u),l=rr(l),1<t.version){l=l.replace("#extension GL_EXT_draw_buffers : require","");for(var d=0,p=[];-1<l.indexOf("gl_FragData["+d+"]");)l=l.replace("gl_FragData["+d+"]","pc_fragData"+d),p.push("layout(location = "+d+") out vec4 pc_fragData"+d+";"),d++;l=l.replace("#define whiteCompliment(a) ( 1.0 - saturate( a ) )","#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n"+p.join("\n")+"\n"),u=["#version 300 es\n","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+u,l=["#version 300 es\n","#define varying in",-1<l.indexOf("layout")?"":"out highp vec4 pc_fragColor;","#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+l}return new Xt(e,u,l)}var $t=function(e){return e.replace(/#include +<([\w\d.]+)>/g,function(e,t){var r=Wt[t];if(void 0===r)throw new Error("Can not resolve #include <"+t+">");return $t(r)})};function er(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.directLightNum).replace(/NUM_SPOT_LIGHTS/g,t.spotLightNum).replace(/NUM_POINT_LIGHTS/g,t.pointLightNum)}function tr(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes)}function rr(e){return e.replace(/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,function(e,t,r,n){for(var i="",a=parseInt(t);a<parseInt(r);a++)i+=n.replace(/\[ i \]/g,"[ "+a+" ]");return i})}function nr(e,t,r,n,i){var a,s=e.gl,o=function(e,t,r,n,i,a,s){var o={};o.materialType=r.type;var h=e.capabilities;o.version=h.version,o.precision=h.maxPrecision,o.useStandardDerivatives=2<=h.version||!!h.getExtension("OES_standard_derivatives")||!!h.getExtension("GL_OES_standard_derivatives"),o.useShaderTextureLOD=2<=h.version||!!h.getExtension("EXT_shader_texture_lod"),o.useDiffuseMap=!!r.diffuseMap,o.useNormalMap=!!r.normalMap,o.useBumpMap=!!r.bumpMap,o.useSpecularMap=!!r.specularMap,o.useEnvMap=!!r.envMap,o.envMapCombine=r.envMapCombine,o.useEmissiveMap=!!r.emissiveMap,o.useRoughnessMap=!!r.roughnessMap,o.useMetalnessMap=!!r.metalnessMap,o.useAOMap=!!r.aoMap,o.ambientLightNum=i?i.ambientsNum:0,o.directLightNum=i?i.directsNum:0,o.pointLightNum=i?i.pointsNum:0,o.spotLightNum=i?i.spotsNum:0,o.useShadow=n.receiveShadow,-1<n.shadowType.indexOf("pcss")&&h.version<2?(console.warn("WebGL 1.0 not support PCSS soft shadow, fallback to POISSON_SOFT"),o.shadowType=de.POISSON_SOFT):o.shadowType=n.shadowType;var c=e.state.currentRenderTarget;o.gammaFactor=t.gammaFactor,o.outputEncoding=Zt(c.texture||null,t.gammaOutput),o.diffuseMapEncoding=Zt(r.diffuseMap,t.gammaInput),o.envMapEncoding=Zt(r.envMap,t.gammaInput),o.emissiveMapEncoding=Zt(r.emissiveMap,t.gammaInput),o.alphaTest=r.alphaTest,o.premultipliedAlpha=r.premultipliedAlpha,o.useVertexColors=r.vertexColors,o.numClippingPlanes=s?s.length:0,o.flatShading=r.shading===ne.FLAT_SHADING,o.fog=!!a,o.fogExp2=!!a&&a.fogType===Q.EXP2,o.sizeAttenuation=r.sizeAttenuation,o.doubleSided=r.side===re.DOUBLE,o.flipSided=r.side===re.BACK,o.packDepthToRGBA=r.packToRGBA;var u=n.type===q.SKINNED_MESH&&n.skeleton,l=h.maxVertexUniformVectors,d=0<h.maxVertexTextures&&(!!h.getExtension("OES_texture_float")||2<=h.version),p=0;return d?p=1024:l<16*(p=n.skeleton?n.skeleton.bones.length:0)&&(console.warn("Program: too many bones ("+p+"), current cpu only support "+Math.floor(l/16)+" bones!!"),p=Math.floor(l/16)),o.useSkinning=u,o.bonesNum=p,o.useVertexTexture=d,r.type===K.SHADER&&(o.vertexShader=r.vertexShader,o.fragmentShader=r.fragmentShader),o}(e,t,r=r||n.material,n,i&&r.acceptLight?i.lights:null,i?i.fog:null,i?i.clippingPlanes:null),h=function(e,t){var r="";for(var n in e)r+=e[n]+"_";if(void 0!==t.defines)for(var i in t.defines)r+=i+"_"+t.defines[i]+"_";return r}(o,r),c=qt;if(c[h])a=c[h];else{var u="";void 0!==r.defines&&(u=function(e){var t=[];for(var r in e){var n=e[r];!1!==n&&t.push("#define "+r+" "+n)}return t.join("\n")}(r.defines)),a=Jt(s,o,u),c[h]=a}return a}function ir(e,t,r,n,i){this.gl=e,this.state=t,this.texture=r,this.properties=n,this.capabilities=i}Object.assign(ir.prototype,{setRenderTarget2D:function(e){var t=this.gl,r=this.state,n=this.texture,i=this.capabilities,a=this.properties.get(e);if(void 0!==a.__webglFramebuffer)t.bindFramebuffer(t.FRAMEBUFFER,a.__webglFramebuffer);else{e.addEventListener("dispose",this.onRenderTargetDispose,this),a.__webglFramebuffer=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,a.__webglFramebuffer);var s=[];for(var o in e._textures){var h=n.setTexture2D(e._textures[o]);(o=Number(o))!==ve.DEPTH_ATTACHMENT&&o!==ve.DEPTH_STENCIL_ATTACHMENT||i.version<2&&!i.getExtension("WEBGL_depth_texture")&&console.warn("extension WEBGL_depth_texture is not support in webgl 1.0."),t.framebufferTexture2D(t.FRAMEBUFFER,o,t.TEXTURE_2D,h.__webglTexture,0),r.bindTexture(t.TEXTURE_2D,null),(o<=36073&&36064<=o||o<=577045&&577040<=o)&&s.push(o)}if(1<s.length&&(2<=i.version?t.drawBuffers(s):i.getExtension("WEBGL_draw_buffers")&&i.getExtension("WEBGL_draw_buffers").drawBuffersWEBGL(s)),2<=i.version&&0<e.multipleSampling){var c=t.createRenderbuffer();t.bindRenderbuffer(t.RENDERBUFFER,c),t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.min(e.multipleSampling,8),t.RGBA8,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,c),a.__multipleSamplingbuffer=c}if(e.depthBuffer&&!e._textures[ve.DEPTH_STENCIL_ATTACHMENT]&&!e._textures[ve.DEPTH_ATTACHMENT]){a.__webglDepthbuffer=t.createRenderbuffer();c=a.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,c),e.stencilBuffer?(2<=i.version&&0<e.multipleSampling?t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.min(e.multipleSampling,8),t.DEPTH24_STENCIL8,e.width,e.height):t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,c)):(2<=i.version&&0<e.multipleSampling?t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.min(e.multipleSampling,8),t.DEPTH_COMPONENT16,e.width,e.height):t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,c)),t.bindRenderbuffer(t.RENDERBUFFER,null)}var u=t.checkFramebufferStatus(t.FRAMEBUFFER);u!==t.FRAMEBUFFER_COMPLETE&&(u===t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_ATTACHMENT"):u===t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"):u===t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_DIMENSIONS"):u===t.FRAMEBUFFER_UNSUPPORTED?console.warn("framebuffer not complete: FRAMEBUFFER_UNSUPPORTED"):u===t.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"):console.warn("framebuffer not complete."))}},setRenderTargetCube:function(e){var t=this.gl,r=this.state,n=this.texture,i=this.capabilities,a=this.properties.get(e);if(void 0!==a.__webglFramebuffer){for(var s in t.bindFramebuffer(t.FRAMEBUFFER,a.__webglFramebuffer),e._textures){h=this.properties.get(e._textures[s]);t.framebufferTexture2D(t.FRAMEBUFFER,s,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,h.__webglTexture,0)}a.__currentActiveCubeFace=e.activeCubeFace}else{e.addEventListener("dispose",this.onRenderTargetDispose,this),a.__webglFramebuffer=t.createFramebuffer(),a.__currentActiveCubeFace=e.activeCubeFace,t.bindFramebuffer(t.FRAMEBUFFER,a.__webglFramebuffer);var o=[];for(var s in e._textures){var h=n.setTextureCube(e._textures[s]);(s=Number(s))!==ve.DEPTH_ATTACHMENT&&s!==ve.DEPTH_STENCIL_ATTACHMENT||i.version<2&&!i.getExtension("WEBGL_depth_texture")&&console.warn("extension WEBGL_depth_texture is not support in webgl 1.0."),t.framebufferTexture2D(t.FRAMEBUFFER,s,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,h.__webglTexture,0),r.bindTexture(t.TEXTURE_CUBE_MAP,null),(s<=36073&&36064<=s||s<=577045&&577040<=s)&&o.push(s)}if(1<o.length&&(2<=i.version?t.drawBuffers(o):i.getExtension("WEBGL_draw_buffers")&&i.getExtension("WEBGL_draw_buffers").drawBuffersWEBGL(o)),2<=i.version&&0<e.multipleSampling){var c=t.createRenderbuffer();t.bindRenderbuffer(t.RENDERBUFFER,c),t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.min(e.multipleSampling,8),t.RGBA8,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,c),a.__multipleSamplingbuffer=c}if(e.depthBuffer&&!e._textures[ve.DEPTH_STENCIL_ATTACHMENT]&&!e._textures[ve.DEPTH_ATTACHMENT]){a.__webglDepthbuffer=t.createRenderbuffer();c=a.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,c),e.stencilBuffer?(2<=i.version&&0<e.multipleSampling?t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.min(e.multipleSampling,8),t.DEPTH24_STENCIL8,e.width,e.height):t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,c)):(2<=i.version&&0<e.multipleSampling?t.renderbufferStorageMultisample(t.RENDERBUFFER,Math.min(e.multipleSampling,8),t.DEPTH_COMPONENT16,e.width,e.height):t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,c)),t.bindRenderbuffer(t.RENDERBUFFER,null)}var u=t.checkFramebufferStatus(t.FRAMEBUFFER);u!==t.FRAMEBUFFER_COMPLETE&&(u===t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_ATTACHMENT"):u===t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"):u===t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_DIMENSIONS"):u===t.FRAMEBUFFER_UNSUPPORTED?console.warn("framebuffer not complete: FRAMEBUFFER_UNSUPPORTED"):u===t.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"):console.warn("framebuffer not complete."))}},blitRenderTarget:function(e,t){var r=this.gl,n=this.properties,i=this.capabilities;if(i.version<2)console.warn("blitFramebuffer not support by WebGL"+i.version);else{var a=n.get(e).__webglFramebuffer,s=n.get(t).__webglFramebuffer;r.bindFramebuffer(r.READ_FRAMEBUFFER,a),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,s),r.clearBufferfv(r.COLOR,0,[0,0,0,0]),r.blitFramebuffer(0,0,e.width,e.height,0,0,t.width,t.height,r.COLOR_BUFFER_BIT,r.NEAREST)}},updateRenderTargetMipmap:function(e){var t,r=this.gl,n=this.state,i=e.texture;if(i.generateMipmaps&&(o((t=e).width)&&o(t.height))&&i.minFilter!==r.NEAREST&&i.minFilter!==r.LINEAR){var a=i.textureType,s=this.properties.get(i).__webglTexture;n.bindTexture(a,s),r.generateMipmap(a),n.bindTexture(a,null)}},onRenderTargetDispose:function(e){var t=this.gl,r=e.target,n=this.properties.get(r);r.removeEventListener("dispose",this.onRenderTargetDispose,this),n.__webglFramebuffer&&t.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),this.properties.delete(r)},setRenderTarget:function(e){var t=this.gl,r=this.state;if(e.view)r.currentRenderTarget===e||(t.bindFramebuffer(t.FRAMEBUFFER,null),r.currentRenderTarget=e);else{var n=void 0!==e.activeCubeFace;if(r.currentRenderTarget!==e)n?this.setRenderTargetCube(e):this.setRenderTarget2D(e),r.currentRenderTarget=e;else if(n){var i=this.properties.get(e);if(i.__currentActiveCubeFace!==e.activeCubeFace){for(var a in e._textures){var s=this.properties.get(e._textures[a]);t.framebufferTexture2D(t.FRAMEBUFFER,a,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,s.__webglTexture,0)}i.__currentActiveCubeFace=e.activeCubeFace}}}}});var ar=new Me,sr=new be;function or(e){return e.material}function hr(e){return!0}function cr(){}var ur,lr,dr=(lr=new Le,function(e,t){(!ur||ur.length<4*e.length)&&(ur=new Float32Array(4*e.length));for(var r=0;r<e.length;r++)lr.copy(e[r]),ur[4*r+0]=lr.normal.x,ur[4*r+1]=lr.normal.y,ur[4*r+2]=lr.normal.z,ur[4*r+3]=lr.constant;return ur});function pr(e){this.gl=e;var t=new Lt;this.properties=t;var r=new Nt(e),n=new Pt(e,this.capabilities=r);n.enable(e.STENCIL_TEST),n.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),n.setCullFace(te.BACK),n.setFlipSided(!1),n.clearColor(0,0,0,0);var i=new zt(e,this.state=n,t,r);this.texture=i,this.renderTarget=new ir(e,n,i,t,r),this.geometry=new Ht(e,n,t,r),this._usedTextureUnits=0,this._currentGeometryProgram=""}var fr,_r,vr,mr,gr,Mr=[],Er=[],xr=[],Sr=[],wr=[];function yr(){je.call(this),this.type=q.CAMERA,this.viewMatrix=new ge,this.projectionMatrix=new ge,this.frustum=new Oe,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.rect=new be(0,0,1,1),this.frustumCulled=!0}function Tr(e,t){me.call(this),this.uuid=c(),this.width=e,this.height=t,this.depthBuffer=!0,this.stencilBuffer=!0,this.multipleSampling=0}function br(e,t){Tr.call(this,e,t),this._textures={},this.texture=new Ve,this.activeCubeFace=0}function Ar(e){this.camera=new yr,this.targets=[new Me(1,0,0),new Me(-1,0,0),new Me(0,1,0),new Me(0,-1,0),new Me(0,0,1),new Me(0,0,-1)],this.ups=[new Me(0,-1,0),new Me(0,-1,0),new Me(0,0,1),new Me(0,0,-1),new Me(0,-1,0),new Me(0,-1,0)],this.camera.setPerspective(.5*Math.PI,1,1,1e3),this.position=new Me,this.lookTarget=new Me,this.renderTarget=e||new br(512,512),this.renderTexture=this.renderTarget.texture,this.renderTexture.minFilter=oe.LINEAR_MIPMAP_LINEAR}function Cr(e){if(!e.depthMap){var t=new ke;t.type=se.FLOAT_32_UNSIGNED_INT_24_8_REV,t.format=ae.DEPTH_STENCIL,t.internalformat=ae.DEPTH32F_STENCIL8,t.magFilter=oe.LINEAR,t.minFilter=oe.LINEAR,t.compare=ce.LESS,t.generateMipmaps=!1,e.renderTarget.attach(t,ve.DEPTH_STENCIL_ATTACHMENT),e.depthMap=t}}function Nr(){this.depthMaterial=new At,this.depthMaterial.packToRGBA=!0,this.distanceMaterial=new Ct,this.oldClearColor=new be}Object.assign(pr.prototype,{clear:function(e,t,r){var n=this.gl,i=0;(void 0===e||e)&&(i|=n.COLOR_BUFFER_BIT),(void 0===t||t)&&(i|=n.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=n.STENCIL_BUFFER_BIT),n.clear(i)},render:function(t,e,r){var n;n=(r=void 0===r||r)?t.updateRenderList(e):t.getRenderList(e),this.renderPass(n.opaque,e,{scene:t,getMaterial:function(e){return t.overrideMaterial||e.material}}),this.renderPass(n.transparent,e,{scene:t,getMaterial:function(e){return t.overrideMaterial||e.material}})},renderPass:function(e,t,r){r=r||{};for(var n=this.gl,i=this.state,a=this.capabilities.getExtension("OES_vertex_array_object"),s=r.getMaterial||or,o=r.beforeRender||cr,h=r.afterRender||cr,c=r.ifRender||hr,u=r.scene||{},l=i.currentRenderTarget,d=0,p=e.length;d<p;d++){var f=e[d];if(c(f)){var _=f.object,v=s.call(this,f),m=f.geometry,g=f.group;_.onBeforeRender(f,v),o.call(this,f,v);var M=nr(this,t,v,_,u);i.setProgram(M);var E=this.geometry.setGeometry(m);if(2<=this.capabilities.version)E._vaos[M.uuid]?n.bindVertexArray(E._vaos[M.uuid]):(E._vaos[M.uuid]=n.createVertexArray(),n.bindVertexArray(E._vaos[M.uuid]),this.setupVertexAttributes(M,m));else if(a)E._vaos[M.uuid]?a.bindVertexArrayOES(E._vaos[M.uuid]):(E._vaos[M.uuid]=a.createVertexArrayOES(),a.bindVertexArrayOES(E._vaos[M.uuid]),this.setupVertexAttributes(M,m));else{var x=M.uuid+"_"+m.uuid;x!==this._currentGeometryProgram&&(this.setupVertexAttributes(M,m),this._currentGeometryProgram=x),this._currentGeometryProgram=x}var S=M.uniforms;for(var w in S){var y=S[w];if(v.uniforms&&void 0!==v.uniforms[w])if(y.type===ue.SAMPLER_2D||y.type===ue.SAMPLER_2D_SHADOW){var T=this.allocTexUnit();this.texture.setTexture2D(v.uniforms[w],T),y.setValue(T)}else if(y.type===ue.SAMPLER_CUBE||y.type===ue.SAMPLER_CUBE_SHADOW){T=this.allocTexUnit();this.texture.setTextureCube(v.uniforms[w],T),y.setValue(T)}else y.set(v.uniforms[w]);else switch(w){case"u_Projection":if(_.type===q.CANVAS2D&&_.isScreenCanvas)var b=_.orthoCamera.projectionMatrix.elements;else b=t.projectionMatrix.elements;y.setValue(b);break;case"u_View":if(_.type===q.CANVAS2D&&_.isScreenCanvas)var A=_.orthoCamera.viewMatrix.elements;else A=t.viewMatrix.elements;y.setValue(A);break;case"u_Model":var C=_.worldMatrix.elements;y.setValue(C);break;case"u_Color":var N=v.diffuse;y.setValue(N.r,N.g,N.b);break;case"u_Opacity":y.setValue(v.opacity);break;case"diffuseMap":T=this.allocTexUnit();this.texture.setTexture2D(v.diffuseMap,T),y.setValue(T);break;case"normalMap":T=this.allocTexUnit();this.texture.setTexture2D(v.normalMap,T),y.setValue(T);break;case"bumpMap":T=this.allocTexUnit();this.texture.setTexture2D(v.bumpMap,T),y.setValue(T);break;case"bumpScale":y.setValue(v.bumpScale);break;case"envMap":T=this.allocTexUnit();this.texture.setTextureCube(v.envMap,T),y.setValue(T);break;case"cubeMap":T=this.allocTexUnit();this.texture.setTextureCube(v.cubeMap,T),y.setValue(T);break;case"u_EnvMap_Intensity":y.setValue(v.envMapIntensity);break;case"u_Specular":y.setValue(v.shininess);break;case"u_SpecularColor":N=v.specular;y.setValue(N.r,N.g,N.b,1);break;case"specularMap":T=this.allocTexUnit();this.texture.setTexture2D(v.specularMap,T),y.setValue(T);break;case"aoMap":T=this.allocTexUnit();this.texture.setTexture2D(v.aoMap,T),y.setValue(T);break;case"aoMapIntensity":y.setValue(v.aoMapIntensity);break;case"u_Roughness":y.setValue(v.roughness);break;case"roughnessMap":T=this.allocTexUnit();this.texture.setTexture2D(v.roughnessMap,T),y.setValue(T);break;case"u_Metalness":y.setValue(v.metalness);break;case"metalnessMap":T=this.allocTexUnit();this.texture.setTexture2D(v.metalnessMap,T),y.setValue(T);break;case"emissive":N=v.emissive;var R=v.emissiveIntensity;y.setValue(N.r*R,N.g*R,N.b*R);break;case"emissiveMap":T=this.allocTexUnit();this.texture.setTexture2D(v.emissiveMap,T),y.setValue(T);break;case"u_CameraPosition":ar.setFromMatrixPosition(t.worldMatrix),y.setValue(ar.x,ar.y,ar.z);break;case"u_FogColor":N=u.fog.color;y.setValue(N.r,N.g,N.b);break;case"u_FogDensity":y.setValue(u.fog.density);break;case"u_FogNear":y.setValue(u.fog.near);break;case"u_FogFar":y.setValue(u.fog.far);break;case"u_PointSize":y.setValue(v.size);break;case"u_PointScale":var P=.5*l.height;y.setValue(P);break;case"dashSize":y.setValue(v.dashSize);break;case"totalSize":y.setValue(v.dashSize+v.gapSize);break;case"scale":y.setValue(v.scale);break;case"clippingPlanes[0]":var L=dr(u.clippingPlanes||[],t);n.uniform4fv(y.location,L);break;case"uvTransform":var O;(O=v.diffuseMap||v.specularMap||v.normalMap||v.bumpMap||v.roughnessMap||v.metalnessMap||v.emissiveMap)&&(O.matrixAutoUpdate&&O.updateMatrix(),y.setValue(O.matrix.elements))}}_.type===q.SKINNED_MESH&&this.uploadSkeleton(S,_,M.id),v.acceptLight&&u.lights&&this.uploadLights(S,u.lights,_.receiveShadow,t);var F=_.worldMatrix.determinant()<0;this.setStates(v,F);var D=sr.set(l.width,l.height,l.width,l.height).multiply(t.rect);if(D.z-=D.x,D.w-=D.y,D.x=Math.floor(D.x),D.y=Math.floor(D.y),D.z=Math.floor(D.z),D.w=Math.floor(D.w),_.type===q.CANVAS2D){_.isScreenCanvas&&(_.setRenderViewport(D.x,D.y,D.z,D.w),i.viewport(_.viewport.x,_.viewport.y,_.viewport.z,_.viewport.w));for(var U=0,I=0;I<_.drawArray.length;I++){var z=_.drawArray[I];T=this.allocTexUnit();this.texture.setTexture2D(z.texture,T),S.spriteTexture.setValue(T),n.drawElements(n.TRIANGLES,6*z.count,n.UNSIGNED_SHORT,2*U),U+=6*z.count,this._usedTextureUnits=0}}else i.viewport(D.x,D.y,D.z,D.w),this.draw(m,v,g);2<=this.capabilities.version?n.bindVertexArray(null):a&&a.bindVertexArrayOES(null),this._usedTextureUnits=0,i.enable(n.DEPTH_TEST),i.depthMask(!0),i.colorMask(!0),h(this,f),_.onAfterRender(f)}}},setStates:function(e,t){var r=this.gl,n=this.state;e.transparent?n.setBlend(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):n.setBlend(J.NONE),e.depthTest?n.enable(r.DEPTH_TEST):n.disable(r.DEPTH_TEST),n.depthMask(e.depthWrite),n.colorMask(e.colorWrite),n.setCullFace(e.side===re.DOUBLE?te.NONE:te.BACK);var i=e.side===re.BACK;t&&(i=!i),n.setFlipSided(i),void 0!==e.lineWidth&&n.setLineWidth(e.lineWidth)},draw:function(e,t,r){var n=this.gl,i=this.properties,a=this.capabilities,s=null!==e.index,o=0,h=s?e.index.count:e.getAttribute("a_Position").count,c=r?r.start:0,u=r?r.count:1/0;if(o=Math.max(o,c),h=Math.min(h,u),s){var l=i.get(e.index),d=l.bytesPerElement,p=l.type;p===n.UNSIGNED_INT&&a.version<2&&!a.getExtension("OES_element_index_uint")&&console.warn("draw elements type not support UNSIGNED_INT!"),e.isInstancedGeometry?0<e.maxInstancedCount&&(2<=a.version?n.drawElementsInstanced(t.drawMode,h,p,o*d,e.maxInstancedCount):a.getExtension("ANGLE_instanced_arrays")?a.getExtension("ANGLE_instanced_arrays").drawElementsInstancedANGLE(t.drawMode,h,p,o*d,e.maxInstancedCount):console.warn("no support instanced draw.")):n.drawElements(t.drawMode,h,p,o*d)}else e.isInstancedGeometry?0<e.maxInstancedCount&&(2<=a.version?n.drawArraysInstanced(t.drawMode,o,h,e.maxInstancedCount):a.getExtension("ANGLE_instanced_arrays")?a.getExtension("ANGLE_instanced_arrays").drawArraysInstancedANGLE(t.drawMode,o,h,e.maxInstancedCount):console.warn("no support instanced draw.")):n.drawArrays(t.drawMode,o,h)},uploadSkeleton:function(e,t,r){if(t.skeleton&&0<t.skeleton.bones.length){var n=t.skeleton,i=this.gl,a=this.capabilities;if(n.updateBones(),0<a.maxVertexTextures&&(a.getExtension("OES_texture_float")||2<=a.version)){if(void 0===n.boneTexture){var s=Math.sqrt(4*n.bones.length);s=l(Math.ceil(s)),s=Math.max(4,s);var o=new Float32Array(s*s*4);o.set(n.boneMatrices);var h=new ke;h.image={data:o,width:s,height:s},2<=a.version&&(h.internalformat=ae.RGBA32F,h.format=ae.RGBA),h.type=se.FLOAT,h.magFilter=oe.NEAREST,h.minFilter=oe.NEAREST,h.generateMipmaps=!1,h.flipY=!1,n.boneMatrices=o,n.boneTexture=h}var c=this.allocTexUnit();this.texture.setTexture2D(n.boneTexture,c),e.boneTexture&&e.boneTexture.setValue(c),e.boneTextureSize&&e.boneTextureSize.setValue(n.boneTexture.image.width)}else{var u=i.getUniformLocation(r,"boneMatrices");i.uniformMatrix4fv(u,!1,n.boneMatrices)}e.bindMatrix.setValue(t.bindMatrix.elements),e.bindMatrixInverse.setValue(t.bindMatrixInverse.elements)}},uploadLights:function(e,t,r,n){var i=this.gl;0<t.ambientsNum&&e.u_AmbientLightColor.set(t.ambient);for(var a=0;a<t.directsNum;a++){var s=t.directional[a];e["u_Directional["+a+"].direction"].set(s.direction),e["u_Directional["+a+"].intensity"].setValue(1),e["u_Directional["+a+"].color"].set(s.color);var o=s.shadow&&r;if(e["u_Directional["+a+"].shadow"].setValue(o?1:0),o){e["u_Directional["+a+"].shadowBias"].setValue(s.shadowBias),e["u_Directional["+a+"].shadowRadius"].setValue(s.shadowRadius),e["u_Directional["+a+"].shadowMapSize"].set(s.shadowMapSize);var h=this.allocTexUnit();if(this.texture.setTexture2D(t.directionalShadowMap[a],h),Mr[a]=h,e["directionalDepthMap[0]"]){h=this.allocTexUnit();this.texture.setTexture2D(t.directionalDepthMap[a],h),Er[a]=h}}}if(0<Mr.length){var c=e["directionalShadowMap[0]"];i.uniform1iv(c.location,Mr),Mr.length=0;var u=e["directionalShadowMatrix[0]"];i.uniformMatrix4fv(u.location,!1,t.directionalShadowMatrix)}if(0<Er.length){var l=e["directionalDepthMap[0]"];i.uniform1iv(l.location,Er),Er.length=0}for(a=0;a<t.pointsNum;a++){s=t.point[a];e["u_Point["+a+"].position"].set(s.position),e["u_Point["+a+"].intensity"].setValue(1),e["u_Point["+a+"].color"].set(s.color),e["u_Point["+a+"].distance"].setValue(s.distance),e["u_Point["+a+"].decay"].setValue(s.decay);o=s.shadow&&r;if(e["u_Point["+a+"].shadow"].setValue(o?1:0),o){e["u_Point["+a+"].shadowBias"].setValue(s.shadowBias),e["u_Point["+a+"].shadowRadius"].setValue(s.shadowRadius),e["u_Point["+a+"].shadowMapSize"].set(s.shadowMapSize),e["u_Point["+a+"].shadowCameraNear"].setValue(s.shadowCameraNear),e["u_Point["+a+"].shadowCameraFar"].setValue(s.shadowCameraFar);h=this.allocTexUnit();this.texture.setTextureCube(t.pointShadowMap[a],h),xr[a]=h}}if(0<xr.length){var d=e["pointShadowMap[0]"];i.uniform1iv(d.location,xr),xr.length=0}for(a=0;a<t.spotsNum;a++){s=t.spot[a];e["u_Spot["+a+"].position"].set(s.position),e["u_Spot["+a+"].direction"].set(s.direction),e["u_Spot["+a+"].intensity"].setValue(1),e["u_Spot["+a+"].color"].set(s.color),e["u_Spot["+a+"].distance"].setValue(s.distance),e["u_Spot["+a+"].decay"].setValue(s.decay),e["u_Spot["+a+"].coneCos"].setValue(s.coneCos),e["u_Spot["+a+"].penumbraCos"].setValue(s.penumbraCos);o=s.shadow&&r;if(e["u_Spot["+a+"].shadow"].setValue(o?1:0),o){e["u_Spot["+a+"].shadowBias"].setValue(s.shadowBias),e["u_Spot["+a+"].shadowRadius"].setValue(s.shadowRadius),e["u_Spot["+a+"].shadowMapSize"].set(s.shadowMapSize);h=this.allocTexUnit();if(this.texture.setTexture2D(t.spotShadowMap[a],h),Sr[a]=h,e["spotDepthMap[0]"]){h=this.allocTexUnit();this.texture.setTexture2D(t.spotDepthMap[a],h),wr[a]=h}}}if(0<Sr.length){var p=e["spotShadowMap[0]"];i.uniform1iv(p.location,Sr),Sr.length=0;var f=e["spotShadowMatrix[0]"];i.uniformMatrix4fv(f.location,!1,t.spotShadowMatrix)}if(0<wr.length){var _=e["spotDepthMap[0]"];i.uniform1iv(_.location,wr),wr.length=0}},allocTexUnit:function(){var e=this._usedTextureUnits;return e>=this.capabilities.maxTextures&&console.warn("trying to use "+e+" texture units while this GPU supports only "+this.capabilities.maxTextures),this._usedTextureUnits+=1,e},setupVertexAttributes:function(e,t){var r=this.gl,n=e.attributes,i=this.properties,a=this.capabilities;for(var s in n){var o=n[s],h=t.getAttribute(s);if(h){var c,u=h.normalized,l=h.size;o.count!==l&&console.warn("WebGLCore: attribute "+s+" size not match! "+o.count+" : "+l);var d=(c=h.isInterleavedBufferAttribute?i.get(h.data):i.get(h)).buffer,p=c.type;o.format;var f=c.bytesPerElement;if(h.isInterleavedBufferAttribute){var _=h.data,v=_.stride,m=h.offset;r.enableVertexAttribArray(o.location),_&&_.isInstancedInterleavedBuffer&&(2<=a.version?r.vertexAttribDivisor(o.location,_.meshPerAttribute):a.getExtension("ANGLE_instanced_arrays")?a.getExtension("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(o.location,_.meshPerAttribute):console.warn("vertexAttribDivisor not supported"),void 0===t.maxInstancedCount&&(t.maxInstancedCount=_.meshPerAttribute*_.count)),r.bindBuffer(r.ARRAY_BUFFER,d),r.vertexAttribPointer(o.location,o.count,p,u,f*v,f*m)}else r.enableVertexAttribArray(o.location),h&&h.isInstancedBufferAttribute&&(2<=a.version?r.vertexAttribDivisor(o.location,h.meshPerAttribute):a.getExtension("ANGLE_instanced_arrays")?a.getExtension("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(o.location,h.meshPerAttribute):console.warn("vertexAttribDivisor not supported"),void 0===t.maxInstancedCount&&(t.maxInstancedCount=h.meshPerAttribute*h.count)),r.bindBuffer(r.ARRAY_BUFFER,d),r.vertexAttribPointer(o.location,o.count,p,u,0,0)}else console.warn("WebGLCore: geometry attribute "+s+" not found!")}if(t.index){var g=i.get(t.index);r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,g.buffer)}}}),yr.prototype=Object.assign(Object.create(je.prototype),{constructor:yr,lookAt:(gr=new ge,function(e,t){gr.lookAtRH(this.position,e,t),this.quaternion.setFromRotationMatrix(gr)}),setOrtho:function(e,t,r,n,i,a){this.projectionMatrix.set(2/(t-e),0,0,-(t+e)/(t-e),0,2/(n-r),0,-(n+r)/(n-r),0,0,-2/(a-i),-(a+i)/(a-i),0,0,0,1)},setPerspective:function(e,t,r,n){this.projectionMatrix.set(1/(t*Math.tan(e/2)),0,0,0,0,1/Math.tan(e/2),0,0,0,0,-(n+r)/(n-r),-2*n*r/(n-r),0,0,-1,0)},getWorldDirection:(_r=new Me,vr=new Ce,mr=new Me,function(e){var t=e||new Me;return this.worldMatrix.decompose(_r,vr,mr),t.set(0,0,-1).applyQuaternion(vr),t}),updateMatrix:(fr=new ge,function(){je.prototype.updateMatrix.call(this),this.viewMatrix.getInverse(this.worldMatrix),fr.multiplyMatrices(this.projectionMatrix,this.viewMatrix),this.frustum.setFromMatrix(fr)}),copy:function(e,t){return je.prototype.copy.call(this,e,t),this.viewMatrix.copy(e.viewMatrix),this.projectionMatrix.copy(e.projectionMatrix),this}}),Tr.prototype=Object.assign(Object.create(me.prototype),{constructor:Tr,resize:function(e,t){return(this.width!==e||this.height!==t)&&(this.dispose(),this.width=e,this.height=t,!0)},dispose:function(){this.dispatchEvent({type:"dispose"})}}),((br.prototype=Object.create(Tr.prototype)).constructor=br).prototype=Object.assign(Object.create(Tr.prototype),{constructor:br,attach:function(e,t){for(var r=!1,n=0;n<6;n++)e.images[n]&&e.images[n].rtt?e.images[n].width===this.width&&e.images[n].height===this.height||(e.images[n].width=this.width,e.images[n].height=this.height,r=!0):(e.images[n]={rtt:!0,data:null,width:this.width,height:this.height},r=!0);r&&e.version++,this._textures[t||ve.COLOR_ATTACHMENT0]=e},detach:function(e){delete this._textures[e||ve.COLOR_ATTACHMENT0]},resize:function(e,t){if(Tr.prototype.resize.call(this,e,t))for(var r in this._textures){var n=this._textures[r];if(n){for(var i=0;i<6;i++)n.images[i]={rtt:!0,data:null,width:this.width,height:this.height};n.version++}}}}),Object.defineProperties(br.prototype,{texture:{set:function(e){e?this.attach(e,ve.COLOR_ATTACHMENT0):this.detach(ve.COLOR_ATTACHMENT0)},get:function(){return this._textures[ve.COLOR_ATTACHMENT0]}}}),Ar.prototype.render=function(e,t){this.camera.position.copy(this.position);for(var r=0;r<6;r++)this.lookTarget.set(this.targets[r].x+this.camera.position.x,this.targets[r].y+this.camera.position.y,this.targets[r].z+this.camera.position.z),this.camera.lookAt(this.lookTarget,this.ups[r]),this.camera.updateMatrix(),this.renderTarget.activeCubeFace=r,e.renderTarget.setRenderTarget(this.renderTarget),e.clear(!0,!0,!0),e.render(t,this.camera),e.renderTarget.updateRenderTargetMipmap(this.renderTarget)},Nr.prototype.render=function(e,t){var r=e.gl,n=e.state,i=n.states[r.STENCIL_TEST];i&&n.disable(r.STENCIL_TEST),this.oldClearColor.copy(n.currentClearColor),n.clearColor(1,1,1,1);for(var a=t.lights.shadows,s=0;s<a.length;s++){var o=a[s],h=o.shadow,c=h.camera,u=h.renderTarget,l=o.lightType==Z.POINT,d=l?6:1;2<=e.capabilities.version&&(l||Cr(h));for(var p=0;p<d;p++){l?(h.update(o,p),u.activeCubeFace=p):h.update(o);var f=t.updateRenderList(c);e.renderTarget.setRenderTarget(u),e.clear(!0,!0);var _=l?this.distanceMaterial:this.depthMaterial;_.uniforms=_.uniforms||{},_.uniforms.nearDistance=h.cameraNear,_.uniforms.farDistance=h.cameraFar,e.renderPass(f.opaque,c,{getMaterial:function(e){return _.side=e.material.side,_},ifRender:function(e){return e.object.castShadow}})}}i&&n.enable(r.STENCIL_TEST),n.clearColor(this.oldClearColor.x,this.oldClearColor.y,this.oldClearColor.z,this.oldClearColor.w)};var Rr=new Me,Pr={};function Lr(e){if(void 0!==Pr[e.uuid])return Pr[e.uuid];var t;switch(e.lightType){case Z.DIRECT:t={direction:new Float32Array(3),color:new Float32Array([0,0,0,1]),shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2)};break;case Z.POINT:t={position:new Float32Array(3),color:new Float32Array([0,0,0,1]),distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2),shadowCameraNear:1,shadowCameraFar:1e3};break;case Z.SPOT:t={position:new Float32Array(3),direction:new Float32Array(3),color:new Float32Array([0,0,0,1]),distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2)}}return Pr[e.uuid]=t}function Or(){this.ambient=new Float32Array([0,0,0,1]),this.directional=[],this.directionalShadowMap=[],this.directionalDepthMap=[],this.directionalShadowMatrix=[],this.point=[],this.pointShadowMap=[],this.pointShadowMatrix=[],this.spot=[],this.spotShadowMap=[],this.spotDepthMap=[],this.spotShadowMatrix=[],this.shadows=[],this.ambientsNum=0,this.directsNum=0,this.pointsNum=0,this.spotsNum=0,this.shadowsNum=0,this.totalNum=0}Object.assign(Or.prototype,{startCount:function(){for(var e=0;e<3;e++)this.ambient[e]=0;this.shadows.length=0,this.ambientsNum=0,this.directsNum=0,this.pointsNum=0,this.spotsNum=0,this.shadowsNum=0,this.totalNum=0},add:function(e){e.lightType==Z.AMBIENT?this._doAddAmbientLight(e):e.lightType==Z.DIRECT?this._doAddDirectLight(e):e.lightType==Z.POINT?this._doAddPointLight(e):e.lightType==Z.SPOT&&this._doAddSpotLight(e),e.castShadow&&e.lightType!==Z.AMBIENT&&(this.shadows.push(e),this.shadowsNum++),this.totalNum++},endCount:function(){},_doAddAmbientLight:function(e){var t=e.intensity,r=e.color;this.ambient[0]+=r.r*t,this.ambient[1]+=r.g*t,this.ambient[2]+=r.b*t,this.ambientsNum++},_doAddDirectLight:function(e){var t=e.intensity,r=e.color,n=Lr(e);n.color[0]=r.r*t,n.color[1]=r.g*t,n.color[2]=r.b*t;var i=Rr;if(e.getWorldDirection(i),n.direction[0]=i.x,n.direction[1]=i.y,n.direction[2]=i.z,e.castShadow?(n.shadow=!0,n.shadowBias=e.shadow.bias,n.shadowRadius=e.shadow.radius,n.shadowMapSize[0]=e.shadow.mapSize.x,n.shadowMapSize[1]=e.shadow.mapSize.y):n.shadow=!1,e.castShadow){var a=16*(this.directsNum+1);if(this.directionalShadowMatrix.length<a){var s=this.directionalShadowMatrix;this.directionalShadowMatrix=new Float32Array(a),this.directionalShadowMatrix.set(s)}this.directionalShadowMatrix.set(e.shadow.matrix.elements,16*this.directsNum),this.directionalShadowMap[this.directsNum]=e.shadow.depthMap||e.shadow.map,this.directionalDepthMap[this.directsNum]=e.shadow.map}this.directional[this.directsNum]=n,this.directsNum++},_doAddPointLight:function(e){var t=e.intensity,r=e.color,n=e.distance,i=e.decay,a=Lr(e);a.color[0]=r.r*t,a.color[1]=r.g*t,a.color[2]=r.b*t,a.distance=n,a.decay=i;var s=Rr.setFromMatrixPosition(e.worldMatrix);if(a.position[0]=s.x,a.position[1]=s.y,a.position[2]=s.z,e.castShadow?(a.shadow=!0,a.shadowBias=e.shadow.bias,a.shadowRadius=e.shadow.radius,a.shadowMapSize[0]=e.shadow.mapSize.x,a.shadowMapSize[1]=e.shadow.mapSize.y,a.shadowCameraNear=e.shadow.cameraNear,a.shadowCameraFar=e.shadow.cameraFar):a.shadow=!1,e.castShadow){var o=16*(this.pointsNum+1);if(this.pointShadowMatrix.length<o){var h=this.pointShadowMatrix;this.pointShadowMatrix=new Float32Array(o),this.pointShadowMatrix.set(h)}this.pointShadowMatrix.set(e.shadow.matrix.elements,16*this.pointsNum),this.pointShadowMap[this.pointsNum]=e.shadow.map}this.point[this.pointsNum]=a,this.pointsNum++},_doAddSpotLight:function(e){var t=e.intensity,r=e.color,n=e.distance,i=e.decay,a=Lr(e);a.color[0]=r.r*t,a.color[1]=r.g*t,a.color[2]=r.b*t,a.distance=n,a.decay=i;var s=Rr.setFromMatrixPosition(e.worldMatrix);a.position[0]=s.x,a.position[1]=s.y,a.position[2]=s.z;var o=Rr;e.getWorldDirection(Rr),a.direction[0]=o.x,a.direction[1]=o.y,a.direction[2]=o.z;var h=Math.cos(e.angle),c=Math.cos(e.angle*(1-e.penumbra));if(a.coneCos=h,a.penumbraCos=c,e.castShadow?(a.shadow=!0,a.shadowBias=e.shadow.bias,a.shadowRadius=e.shadow.radius,a.shadowMapSize[0]=e.shadow.mapSize.x,a.shadowMapSize[1]=e.shadow.mapSize.y):a.shadow=!1,e.castShadow){var u=16*(this.spotsNum+1);if(this.spotShadowMatrix.length<u){var l=this.spotShadowMatrix;this.spotShadowMatrix=new Float32Array(u),this.spotShadowMatrix.set(l)}this.spotShadowMatrix.set(e.shadow.matrix.elements,16*this.spotsNum),this.spotShadowMap[this.spotsNum]=e.shadow.depthMap||e.shadow.map,this.spotDepthMap[this.spotsNum]=e.shadow.map}this.spot[this.spotsNum]=a,this.spotsNum++}});var Fr=new Me,Dr=new Pe,Ur=function(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z-t.z},Ir=function(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:t.z-e.z};function zr(){var s=[],o=0,h=[],c=0,u=[],l=0;function d(e,t,r,n,i){var a=s[o];void 0===a?(a={object:e,geometry:t,material:r,z:n,renderOrder:e.renderOrder,group:i},s[o]=a):(a.object=e,a.geometry=t,a.material=r,a.z=n,a.renderOrder=e.renderOrder,a.group=i),r.transparent?(u[l]=a,l++):(h[c]=a,c++),o++}return{opaque:h,transparent:u,startCount:function(){l=c=o=0},add:function(e,t){if(e.frustumCulled&&t.frustumCulled&&(Dr.copy(e.geometry.boundingSphere).applyMatrix4(e.worldMatrix),!t.frustum.intersectsSphere(Dr)))return;if(Fr.setFromMatrixPosition(e.worldMatrix),Fr.applyMatrix4(t.viewMatrix).applyMatrix4(t.projectionMatrix),Array.isArray(e.material))for(var r=e.geometry.groups,n=0;n<r.length;n++){var i=r[n],a=e.material[i.materialIndex];a&&d(e,e.geometry,a,Fr.z,i)}else d(e,e.geometry,e.material,Fr.z)},endCount:function(){h.length=c,u.length=l},sort:function(){h.sort(Ur),u.sort(Ir)}}}function Br(){je.call(this),this.type=q.SCENE,this.overrideMaterial=null,this.fog=null,this.clippingPlanes=[],this.lights=new Or,this._renderLists={}}function Gr(e,t){je.call(this),this.geometry=e,this.material=t,this.type=q.MESH}function Hr(e){var t=new Br,r=this.camera=new yr;r.frustumCulled=!1,r.position.set(0,1,0),r.lookAt(new Me(0,0,0),new Me(0,0,-1)),r.setOrtho(-1,1,-1,1,.1,2),t.add(r);var n=new _t(2,2,1,1),i=this.material=new bt(e);this.uniforms=i.uniforms;var a=new Gr(n,i);a.frustumCulled=!1,t.add(a),t.updateMatrix(),this.renderList=t.updateRenderList(r),this.renderConfig={}}function kr(e){Tr.call(this,e.width,e.height),this.view=e}function Vr(){this._entities={},this.enableCounter=!1}function jr(e,t){var r={antialias:!0,alpha:!1,stencil:!0},n=e.getContext("webgl2",t||r)||e.getContext("webgl",t||r);this.glCore=new pr(n),console.info("ForwardRenderer use WebGL Version: "+this.glCore.capabilities.version),this.backRenderTarget=new kr(e),this.performance=new Vr,this.shadowMapPass=new Nr,this.shadowAutoUpdate=!0,this.shadowNeedsUpdate=!1,this.matrixAutoUpdate=!0,this.lightsAutoupdate=!0,this.autoClear=!0}function Xr(e,t){Tr.call(this,e,t),this._textures={},this.texture=new ke}function Wr(){je.call(this),this.type=q.GROUP}function Yr(){je.call(this),this.type=q.LIGHT,this.lightType="",this.color=new Fe(16777215),this.intensity=1}function qr(){Yr.call(this),this.lightType=Z.AMBIENT}function Zr(){this.camera=new yr,this.matrix=new ge,this.bias=3e-4,this.radius=2,this.cameraNear=1,this.cameraFar=500,this.mapSize=new Te(512,512),this.renderTarget=null,this.map=null}function Kr(){Zr.call(this),this.camera.frustumCulled=!1,this.renderTarget=new Xr(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=oe.LINEAR,this.map=e,this.windowSize=500,this._lookTarget=new Me,this._up=new Me(0,1,0)}function Qr(){Yr.call(this),this.lightType=Z.DIRECT,this.shadow=new Kr}function Jr(){Zr.call(this),this.renderTarget=new br(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=oe.LINEAR,this.map=e,this._targets=[new Me(1,0,0),new Me(-1,0,0),new Me(0,1,0),new Me(0,-1,0),new Me(0,0,1),new Me(0,0,-1)],this._ups=[new Me(0,-1,0),new Me(0,-1,0),new Me(0,0,1),new Me(0,0,-1),new Me(0,-1,0),new Me(0,-1,0)],this._lookTarget=new Me}function $r(){Yr.call(this),this.lightType=Z.POINT,this.decay=1,this.distance=200,this.shadow=new Jr}function en(){Zr.call(this),this.renderTarget=new Xr(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=oe.LINEAR,this.map=e,this._lookTarget=new Me,this._up=new Me(0,1,0)}function tn(){Yr.call(this),this.lightType=Z.SPOT,this.decay=1,this.distance=200,this.penumbra=0,this.angle=Math.PI/6,this.shadow=new en}function rn(e,t){Gr.call(this,e,t),this.type=q.SKINNED_MESH,this.skeleton=void 0,this.bindMode="attached",this.bindMatrix=new ge,this.bindMatrixInverse=new ge}Br.prototype=Object.assign(Object.create(je.prototype),{constructor:Br,updateRenderList:function(e){var t=e.uuid;this._renderLists[t]||(this._renderLists[t]=new zr);var r=this._renderLists[t];return r.startCount(),this._doUpdateRenderList(this,e,r),r.endCount(),r.sort(),r},getRenderList:function(e){return this._renderLists[e.uuid]},updateLights:function(){var e=this.lights;return e.startCount(),this._doUpdateLights(this),e.endCount(),e},_doUpdateRenderList:function(e,t,r){if(e.visible&&(e.geometry&&e.material&&r.add(e,t),q.CANVAS2D!==e.type))for(var n=e.children,i=0,a=n.length;i<a;i++)this._doUpdateRenderList(n[i],t,r)},_doUpdateLights:function(e){if(e.visible&&(q.LIGHT===e.type&&this.lights.add(e),q.CANVAS2D!==e.type))for(var t=e.children,r=0,n=t.length;r<n;r++)this._doUpdateLights(t[r])}}),Gr.prototype=Object.assign(Object.create(je.prototype),{constructor:Gr,raycast:function(){var _=new Pe,v=new Re,m=new ge,g=new Ee,M=new Me,E=new Me,x=new Me,S=new Me,w=new Te,y=new Te,T=new Te,b=new Me,h=new Me;function A(e,t,r,n,i,a,s){e.material;if(null===r.intersectTriangle(a,i,n,!0,s))return null;h.copy(s),h.applyMatrix4(e.worldMatrix);var o=t.ray.origin.distanceTo(h);return o<t.near||o>t.far?null:{distance:o,point:h.clone(),object:e}}return function(e,t){var r=this.geometry,n=this.worldMatrix;if(_.copy(r.boundingSphere),_.applyMatrix4(n),e.ray.intersectsSphere(_)&&(v.copy(r.boundingBox),v.applyMatrix4(n),e.ray.intersectsBox(v))){m.getInverse(n),g.copy(e.ray).applyMatrix4(m);for(var i,a,s,o,h,c,u=r.index.array,l=r.getAttribute("a_Position"),d=r.getAttribute("a_Uv"),p=0;p<u.length;p+=3){i=u[p],a=u[p+1],s=u[p+2],E.fromArray(l.array,3*i),x.fromArray(l.array,3*a),S.fromArray(l.array,3*s);var f=A(this,e,g,E,x,S,b);f&&(w.fromArray(d.array,2*i),y.fromArray(d.array,2*a),T.fromArray(d.array,2*s),f.uv=(o=w,h=y,c=T,De.barycoordFromPoint(b,E,x,S,M),o.multiplyScalar(M.x),h.multiplyScalar(M.y),c.multiplyScalar(M.z),o.add(h).add(c),o.clone()),f.face=[i,a,s],f.faceIndex=i,t.push(f))}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Hr.prototype.render=function(e){e.renderPass(this.renderList.opaque,this.camera,this.renderConfig)},kr.prototype=Object.assign(Object.create(Tr.prototype),{constructor:kr,resize:function(e,t){this.view.width=e,this.view.height=t,this.width=e,this.height=t},dispose:function(){}}),Object.assign(Vr.prototype,{getEntity:function(e){return this._entities[e]},getFps:function(){var e=this.getEntity("fps");return e&&e.averageDelta?Math.floor(1e3/e.averageDelta):0},updateFps:function(){this.enableCounter&&(this.endCounter("fps"),this.startCounter("fps",60))},getNow:function(){return window.performance?window.performance.now():(new Date).getTime()},startCounter:function(e,t){if(this.enableCounter){var r=this._entities[e];r||(r={start:0,end:0,delta:0,_cache:[],averageRange:1,averageDelta:0},this._entities[e]=r),r.start=this.getNow(),r.averageRange=t||1}},endCounter:function(e){if(this.enableCounter){var t=this._entities[e];if(t&&(t.end=this.getNow(),t.delta=t.end-t.start,1<t.averageRange)){t._cache.push(t.delta);var r=t._cache.length;if(r>=t.averageRange){r>t.averageRange&&(t._cache.shift(),r--);for(var n=0,i=0;i<r;i++)n+=t._cache[i];t.averageDelta=n/r}}}}}),jr.prototype.render=function(e,t,r,n){var i=this.performance;i.updateFps(),i.startCounter("render",60),this.matrixAutoUpdate&&e.updateMatrix(),this.lightsAutoupdate&&e.updateLights(),i.startCounter("renderShadow",60),(this.shadowAutoUpdate||this.shadowNeedsUpdate)&&(this.shadowMapPass.render(this.glCore,e),this.shadowNeedsUpdate=!1),i.endCounter("renderShadow"),void 0===r&&(r=this.backRenderTarget),this.glCore.renderTarget.setRenderTarget(r),(this.autoClear||n)&&this.glCore.clear(!0,!0,!0),i.startCounter("renderList",60),this.glCore.render(e,t),i.endCounter("renderList"),r.texture&&this.glCore.renderTarget.updateRenderTargetMipmap(r),this.performance.endCounter("render")},Xr.prototype=Object.assign(Object.create(Tr.prototype),{constructor:Xr,attach:function(e,t){e.image&&e.image.rtt?e.image.width===this.width&&e.image.height===this.height||(e.version++,e.image.width=this.width,e.image.height=this.height):(e.version++,e.image={rtt:!0,data:null,width:this.width,height:this.height}),this._textures[t||ve.COLOR_ATTACHMENT0]=e},detach:function(e){delete this._textures[e||ve.COLOR_ATTACHMENT0]},resize:function(e,t){var r=Tr.prototype.resize.call(this,e,t);if(r)for(var n in this._textures){var i=this._textures[n];i&&(i.image={rtt:!0,data:null,width:this.width,height:this.height},i.version++)}return r}}),Object.defineProperties(Xr.prototype,{texture:{set:function(e){e?this.attach(e,ve.COLOR_ATTACHMENT0):this.detach(ve.COLOR_ATTACHMENT0)},get:function(){return this._textures[ve.COLOR_ATTACHMENT0]}}}),(Wr.prototype=Object.create(je.prototype)).constructor=Wr,Yr.prototype=Object.assign(Object.create(je.prototype),{constructor:Yr,copy:function(e){return je.prototype.copy.call(this,e),this.type=e.type,this.lightType=e.lightType,this.color.copy(e.color),this.intensity=e.intensity,this}}),(qr.prototype=Object.create(Yr.prototype)).constructor=qr,Object.assign(Zr.prototype,{update:function(e,t){},copy:function(e){return this.camera.copy(e.camera),this.matrix.copy(e.matrix),this.bias=e.bias,this.radius=e.radius,this.cameraNear=e.cameraNear,this.cameraFar=e.cameraFar,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)}}),Kr.prototype=Object.assign(Object.create(Zr.prototype),{constructor:Kr,update:function(e){this._updateCamera(e),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e){var t=this.camera,r=this._lookTarget;e.getWorldDirection(this._lookTarget),t.position.setFromMatrixPosition(e.worldMatrix),r.set(r.x+t.position.x,r.y+t.position.y,r.z+t.position.z),t.lookAt(r,this._up),t.updateMatrix();var n=this.windowSize/2;t.setOrtho(-n,n,-n,n,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)},copy:function(e){return Zr.prototype.copy.call(this,e),this.windowSize=e.windowSize,this}}),Qr.prototype=Object.assign(Object.create(Yr.prototype),{constructor:Qr,copy:function(e){return Yr.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),Jr.prototype=Object.assign(Object.create(Zr.prototype),{constructor:Jr,update:function(e,t){this._updateCamera(e,t),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e,t){var r=this.camera,n=this._lookTarget,i=this._targets,a=this._ups;r.position.setFromMatrixPosition(e.worldMatrix),n.set(i[t].x+r.position.x,i[t].y+r.position.y,i[t].z+r.position.z),r.lookAt(n,a[t]),r.updateMatrix(),r.setPerspective(.5*Math.PI,1,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)}}),$r.prototype=Object.assign(Object.create(Yr.prototype),{constructor:$r,copy:function(e){return Yr.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),en.prototype=Object.assign(Object.create(Zr.prototype),{constructor:en,update:function(e){this._updateCamera(e),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e){var t=this.camera,r=this._lookTarget;e.getWorldDirection(this._lookTarget),t.position.setFromMatrixPosition(e.worldMatrix),r.set(r.x+t.position.x,r.y+t.position.y,r.z+t.position.z),t.lookAt(r,this._up),t.updateMatrix(),t.setPerspective(2*e.angle,1,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)}}),tn.prototype=Object.assign(Object.create(Yr.prototype),{constructor:tn,copy:function(e){return Yr.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),rn.prototype=Object.assign(Object.create(Gr.prototype),{constructor:rn,bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrix(),t=this.worldMatrix),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},updateMatrix:function(){Gr.prototype.updateMatrix.call(this),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.worldMatrix):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("zen3d.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),e.EventDispatcher=me,e.Raycaster=xe,e.Euler=ye,e.Vector2=Te,e.Vector3=Me,e.Vector4=be,e.Matrix3=Ae,e.Matrix4=ge,e.Quaternion=Ce,e.Box2=Ne,e.Box3=Re,e.Sphere=Pe,e.Plane=Le,e.Frustum=Oe,e.Color3=Fe,e.Ray=Ee,e.Triangle=De,e.Curve=Ue,e.Spherical=Ie,e.TextureBase=ze,e.Texture2D=ke,e.TextureCube=Ve,e.Bone=Xe,e.Skeleton=We,e.AnimationMixer=Qe,e.BooleanKeyframeTrack=$e,e.ColorKeyframeTrack=et,e.KeyframeClip=tt,e.KeyframeTrack=Je,e.NumberKeyframeTrack=rt,e.PropertyBindingMixer=Ke,e.QuaternionKeyframeTrack=nt,e.StringKeyframeTrack=it,e.VectorKeyframeTrack=at,e.BufferAttribute=st,e.CubeGeometry=ht,e.CylinderGeometry=ct,e.Geometry=ot,e.InstancedBufferAttribute=ut,e.InstancedGeometry=lt,e.InstancedInterleavedBuffer=pt,e.InterleavedBuffer=dt,e.InterleavedBufferAttribute=ft,e.PlaneGeometry=_t,e.SphereGeometry=vt,e.Material=mt,e.BasicMaterial=gt,e.LambertMaterial=Mt,e.PhongMaterial=Et,e.PBRMaterial=xt,e.PointsMaterial=St,e.LineMaterial=wt,e.LineLoopMaterial=yt,e.LineDashedMaterial=Tt,e.ShaderMaterial=bt,e.DepthMaterial=At,e.DistanceMaterial=Ct,e.WebGLCapabilities=Nt,e.WebGLState=Pt,e.WebGLProperties=Lt,e.WebGLTexture=zt,e.WebGLGeometry=Ht,e.WebGLUniform=kt,e.WebGLAttribute=Vt,e.WebGLProgram=Xt,e.WebGLCore=pr,e.ShaderChunk=Wt,e.ShaderLib=Yt,e.EnvironmentMapPass=Ar,e.ShadowMapPass=Nr,e.ShaderPostPass=Hr,e.Renderer=jr,e.LightCache=Or,e.RenderList=zr,e.RenderTargetBase=Tr,e.RenderTargetBack=kr,e.RenderTarget2D=Xr,e.RenderTargetCube=br,e.Object3D=je,e.Scene=Br,e.Fog=function(e,t,r){this.fogType=Q.NORMAL,this.color=new Fe(void 0!==e?e:0),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3},e.FogExp2=function(e,t){this.fogType=Q.EXP2,this.color=new Fe(void 0!==e?e:0),this.density=void 0!==t?t:25e-5},e.Group=Wr,e.Light=Yr,e.AmbientLight=qr,e.DirectionalLight=Qr,e.PointLight=$r,e.SpotLight=tn,e.LightShadow=Zr,e.DirectionalLightShadow=Kr,e.SpotLightShadow=en,e.PointLightShadow=Jr,e.Camera=yr,e.Mesh=Gr,e.SkinnedMesh=rn,e.FileLoader=Ge,e.ImageLoader=Be,e.TGALoader=He,e.generateUUID=c,e.isMobile=a,e.isWeb=s,e.createCheckerBoardPixels=function(e,t,r){var n=new Uint8Array(e*t*4),i=[[255,255,255,255],[0,0,0,255]];r=r||5;for(var a=0,s=0;s<t;s++)for(var o=0;o<e;o++){if(0==o?a=1:o%r==0&&(a=(a+1)%2),s%r==0&&0==o){var h=i[0];i[0]=i[1],i[1]=h}n[s*(4*e)+4*o+0]=i[a][0],n[s*(4*e)+4*o+1]=i[a][1],n[s*(4*e)+4*o+2]=i[a][2],n[s*(4*e)+4*o+3]=i[a][3]}return n},e.isPowerOfTwo=o,e.nearestPowerOfTwo=h,e.nextPowerOfTwo=l,e.cloneUniforms=u,e.halton=function(e,t){for(var r=0,n=1/t,i=e;0<i;)r+=n*(i%t),i=Math.floor(i/t),n/=t;return r},e.OBJECT_TYPE=q,e.LIGHT_TYPE=Z,e.MATERIAL_TYPE=K,e.FOG_TYPE=Q,e.BLEND_TYPE=J,e.BLEND_EQUATION=$,e.BLEND_FACTOR=ee,e.CULL_FACE_TYPE=te,e.DRAW_SIDE=re,e.SHADING_TYPE=ne,e.WEBGL_TEXTURE_TYPE=ie,e.WEBGL_PIXEL_FORMAT=ae,e.WEBGL_PIXEL_TYPE=se,e.WEBGL_TEXTURE_FILTER=oe,e.WEBGL_TEXTURE_WRAP=he,e.WEBGL_TEXTURE_COMPARE=ce,e.WEBGL_UNIFORM_TYPE=ue,e.WEBGL_ATTRIBUTE_TYPE=le,e.SHADOW_TYPE=de,e.TEXEL_ENCODING_TYPE=pe,e.ENVMAP_COMBINE_TYPE=fe,e.DRAW_MODE=_e,e.ATTACHMENT=ve,e.DRAW_BUFFER={DRAW_BUFFER0:34853,DRAW_BUFFER1:34854,DRAW_BUFFER2:34855,DRAW_BUFFER3:34856,DRAW_BUFFER4:34857,DRAW_BUFFER5:34858,DRAW_BUFFER6:34859,DRAW_BUFFER7:34860,DRAW_BUFFER8:34861,DRAW_BUFFER9:34862,DRAW_BUFFER10:34863,DRAW_BUFFER11:34864,DRAW_BUFFER12:34865,DRAW_BUFFER13:34866,DRAW_BUFFER14:34867,DRAW_BUFFER15:34868},Object.defineProperty(e,"__esModule",{value:!0})});