!function(t){var n,i,r,a,e=t.zen3d=t.zen3d||{};e.generateUUID=(i="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),r=new Array(36),a=0,function(){for(var e=0;e<36;e++)8===e||13===e||18===e||23===e?r[e]="-":14===e?r[e]="4":(a<=2&&(a=33554432+16777216*Math.random()|0),n=15&a,a>>=4,r[e]=i[19===e?3&n|8:n]);return r.join("")}),e.isMobile=function(){if(!t.navigator)return!0;var e=navigator.userAgent.toLowerCase();return-1!=e.indexOf("mobile")||-1!=e.indexOf("android")}(),e.isWeb=!!document,e.createCheckerBoardPixels=function(e,t,n){var i=new Uint8Array(e*t*4),r=[[255,255,255,255],[0,0,0,255]];n=n||5;for(var a=0,s=0;s<t;s++)for(var o=0;o<e;o++){if(0==o?a=1:o%n==0&&(a=(a+1)%2),s%n==0&&0==o){var u=r[0];r[0]=r[1],r[1]=u}i[s*(4*e)+4*o+0]=r[a][0],i[s*(4*e)+4*o+1]=r[a][1],i[s*(4*e)+4*o+2]=r[a][2],i[s*(4*e)+4*o+3]=r[a][3]}return i},e.isPowerOfTwo=function(e){return 0==(e&e-1)&&0!==e},e.nearestPowerOfTwo=function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))},e.nextPowerOfTwo=function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},e.cloneUniforms=function(e){var t={};for(var n in e){var i=e[n];Array.isArray(i)?t[n]=i.slice():t[n]=i}return t},e.halton=function(e,t){for(var n=0,i=1/t,r=e;0<r;)n+=i*(r%t),r=Math.floor(r/t),i/=t;return n}}(window),function(){zen3d.OBJECT_TYPE={MESH:"mesh",SKINNED_MESH:"skinned_mesh",LIGHT:"light",CAMERA:"camera",SCENE:"scene",GROUP:"group",POINT:"point",LINE:"line",LINE_LOOP:"line_loop",LINE_SEGMENTS:"line_segments",CANVAS2D:"canvas2d",SPRITE:"sprite",PARTICLE:"particle"};zen3d.LIGHT_TYPE={AMBIENT:"ambient",DIRECT:"direct",POINT:"point",SPOT:"spot"};zen3d.MATERIAL_TYPE={BASIC:"basic",LAMBERT:"lambert",PHONG:"phong",PBR:"pbr",CUBE:"cube",POINT:"point",LINE:"line",LINE_LOOP:"lineloop",LINE_DASHED:"linedashed",CANVAS2D:"canvas2d",SPRITE:"sprite",SHADER:"shader",DEPTH:"depth",DISTANCE:"distance",PARTICLE:"particle"};zen3d.FOG_TYPE={NORMAL:"normal",EXP2:"exp2"};zen3d.BLEND_TYPE={NONE:"none",NORMAL:"normal",ADD:"add",CUSTOM:"custom"};zen3d.BLEND_EQUATION={ADD:32774,SUBTRACT:32778,REVERSE_SUBTRACT:32779};zen3d.BLEND_FACTOR={ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775};zen3d.CULL_FACE_TYPE={NONE:"none",FRONT:"front",BACK:"back",FRONT_AND_BACK:"front_and_back"};zen3d.DRAW_SIDE={FRONT:"front",BACK:"back",DOUBLE:"double"};zen3d.SHADING_TYPE={SMOOTH_SHADING:"smooth_shading",FLAT_SHADING:"flat_shading"};zen3d.WEBGL_TEXTURE_TYPE={TEXTURE_2D:3553,TEXTURE_CUBE_MAP:34067};zen3d.WEBGL_PIXEL_FORMAT={DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410};zen3d.WEBGL_PIXEL_TYPE={BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,HALF_FLOAT:5131,UNSIGNED_INT_24_8:34042,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635};zen3d.WEBGL_TEXTURE_FILTER={NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987};zen3d.WEBGL_TEXTURE_WRAP={REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648};zen3d.WEBGL_UNIFORM_TYPE={FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,BYTE:65535,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126};zen3d.WEBGL_ATTRIBUTE_TYPE={FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,FLOAT:5126,BYTE:65535,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123};zen3d.WEBGL_BUFFER_USAGE={STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048};zen3d.SHADOW_TYPE={HARD:"hard",PCF_SOFT:"pcf_soft"};zen3d.TEXEL_ENCODING_TYPE={LINEAR:"linear",SRGB:"sRGB",RGBE:"RGBE",RGBM7:"RGBM7",RGBM16:"RGBM16",RGBD:"RGBD",GAMMA:"Gamma"};zen3d.ENVMAP_COMBINE_TYPE={MULTIPLY:"ENVMAP_BLENDING_MULTIPLY",MIX:"ENVMAP_BLENDING_MIX",ADD:"ENVMAP_BLENDING_ADD"};zen3d.DRAW_MODE={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6};var e={DEFAULT:"default",TRANSPARENT:"transparent",CANVAS2D:"canvas2d",SPRITE:"sprite",PARTICLE:"particle"},t=[(zen3d.RENDER_LAYER=e).DEFAULT,e.TRANSPARENT,e.CANVAS2D,e.SPRITE,e.PARTICLE];zen3d.LAYER_RENDER_LIST=t}(),function(){var i,e=zen3d.Matrix4;function r(e,t,n,i){this._x=e||0,this._y=t||0,this._z=n||0,this._order=i||r.DefaultOrder}r.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],r.DefaultOrder="XYZ",Object.defineProperties(r.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this.onChangeCallback()}}}),r.prototype=Object.assign(r.prototype,{copyFrom:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},set:function(e,t,n,i){return this._x=e||0,this._y=t||0,this._z=n||0,this._order=i||this._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,n){var i=function(e,t,n){return Math.max(t,Math.min(n,e))},r=e.elements,a=r[0],s=r[4],o=r[8],u=r[1],c=r[5],h=r[9],l=r[2],d=r[6],p=r[10];return"XYZ"===(t=t||this._order)?(this._y=Math.asin(i(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(d,c),this._z=0)):"YXZ"===t?(this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.99999?(this._y=Math.atan2(o,p),this._z=Math.atan2(u,c)):(this._y=Math.atan2(-l,a),this._z=0)):"ZXY"===t?(this._x=Math.asin(i(d,-1,1)),Math.abs(d)<.99999?(this._y=Math.atan2(-l,p),this._z=Math.atan2(-s,c)):(this._y=0,this._z=Math.atan2(u,a))):"ZYX"===t?(this._y=Math.asin(-i(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(d,p),this._z=Math.atan2(u,a)):(this._x=0,this._z=Math.atan2(-s,c))):"YZX"===t?(this._z=Math.asin(i(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-l,a)):(this._x=0,this._y=Math.atan2(o,p))):"XZY"===t?(this._z=Math.asin(-i(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(d,c),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-h,p),this._y=0)):console.warn("given unsupported order: "+t),this._order=t,!1!==n&&this.onChangeCallback(),this},setFromQuaternion:(i=new e,function(e,t,n){return e.toMatrix4(i),this.setFromRotationMatrix(i,t,n)}),onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),zen3d.Euler=r}(),function(){function n(e,t){this.x=e||0,this.y=t||0}n.prototype=Object.assign(n.prototype,{set:function(e,t){return this.x=e||0,this.y=t||0,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},getLength:function(){return Math.sqrt(this.getLengthSquared())},getLengthSquared:function(){return this.x*this.x+this.y*this.y},normalize:function(e){e=e||1;var t=this.getLength();if(0!=t){var n=e/t;return this.x*=n,this.y*=n,this}},subtract:function(e,t){return t||(t=new n),t.set(this.x-e.x,this.y-e.y),t},copy:function(e){return this.x=e.x,this.y=e.y,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},add:function(e){return this.x+=e.x,this.y+=e.y,this},clone:function(){return new n(this.x,this.y)}}),zen3d.Vector2=n}(),function(){var t,n=zen3d.Matrix4;function i(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0}i.prototype=Object.assign(i.prototype,{lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},set:function(e,t,n){return this.x=e||0,this.y=t||0,this.z=n||0,this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},getLength:function(){return Math.sqrt(this.getLengthSquared())},getLengthSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z},normalize:function(e){e=e||1;var t=this.getLength();if(0!=t){var n=e/t;return this.x*=n,this.y*=n,this.z*=n,this}},subtract:function(e,t){return t||(t=new i),t.set(this.x-e.x,this.y-e.y,this.z-e.z),t},multiply:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this},crossVectors:function(e,t){var n=e.x,i=e.y,r=e.z,a=t.x,s=t.y,o=t.z;return this.x=i*o-r*s,this.y=r*a-n*o,this.z=n*s-i*a,this},cross:function(e){var t=this.x,n=this.y,i=this.z;return this.x=n*e.z-i*e.y,this.y=i*e.x-t*e.z,this.z=t*e.y-n*e.x,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},applyQuaternion:function(e){var t=this.x,n=this.y,i=this.z,r=e._x,a=e._y,s=e._z,o=e._w,u=o*t+a*i-s*n,c=o*n+s*t-r*i,h=o*i+r*n-a*t,l=-r*t-a*n-s*i;return this.x=u*o+l*-r+c*-s-h*-a,this.y=c*o+l*-a+h*-r-u*-s,this.z=h*o+l*-s+u*-a-c*-r,this},applyMatrix4:function(e){var t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i+r[12],this.y=r[1]*t+r[5]*n+r[9]*i+r[13],this.z=r[2]*t+r[6]*n+r[10]*i+r[14],this},applyMatrix3:function(e){var t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this},transformDirection:function(e){var t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()},setFromMatrixPosition:function(e){return this.setFromMatrixColumn(e,3)},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},add:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},sub:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},setFromSpherical:function(e){var t=Math.sin(e.phi)*e.radius;return this.x=t*Math.sin(e.theta),this.y=Math.cos(e.phi)*e.radius,this.z=t*Math.cos(e.theta),this},unproject:function(e){return void 0===t&&(t=new n),t.multiplyMatrices(e.worldMatrix,t.getInverse(e.projectionMatrix)),this.applyProjection(t)},applyProjection:function(e){var t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},clone:function(){return new i(this.x,this.y,this.z)}}),zen3d.Vector3=i}(),function(){function e(e,t,n,i){this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==i?i:1}e.prototype=Object.assign(e.prototype,{lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},set:function(e,t,n,i){return this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==i?i:1,this},normalize:function(){return this.multiplyScalar(1/(this.getLength()||1))},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},getLengthSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},getLength:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},applyMatrix4:function(e){var t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},add:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}}),zen3d.Vector4=e}(),function(){function e(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1])}e.prototype=Object.assign(e.prototype,{identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},inverse:function(){return this.getInverse(this)},getInverse:function(e){var t=e.elements,n=this.elements,i=t[0],r=t[1],a=t[2],s=t[3],o=t[4],u=t[5],c=t[6],h=t[7],l=t[8],d=l*o-u*h,p=u*c-l*s,f=h*s-o*c,_=i*d+r*p+a*f;if(0===_){return console.warn("zen3d.Matrix3: .getInverse() can't invert matrix, determinant is 0"),this.identity()}var v=1/_;return n[0]=d*v,n[1]=(a*h-l*r)*v,n[2]=(u*r-a*o)*v,n[3]=p*v,n[4]=(l*i-a*c)*v,n[5]=(a*s-u*i)*v,n[6]=f*v,n[7]=(r*c-h*i)*v,n[8]=(o*i-r*s)*v,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},set:function(e,t,n,i,r,a,s,o,u){var c=this.elements;return c[0]=e,c[3]=t,c[6]=n,c[1]=i,c[4]=r,c[7]=a,c[2]=s,c[5]=o,c[8]=u,this},copy:function(e){return this.elements.set(e.elements),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,i=t.elements,r=this.elements,a=n[0],s=n[3],o=n[6],u=n[1],c=n[4],h=n[7],l=n[2],d=n[5],p=n[8],f=i[0],_=i[3],v=i[6],m=i[1],g=i[4],E=i[7],y=i[2],T=i[5],x=i[8];return r[0]=a*f+s*m+o*y,r[3]=a*_+s*g+o*T,r[6]=a*v+s*E+o*x,r[1]=u*f+c*m+h*y,r[4]=u*_+c*g+h*T,r[7]=u*v+c*E+h*x,r[2]=l*f+d*m+p*y,r[5]=l*_+d*g+p*T,r[8]=l*v+d*E+p*x,this},transform:function(e,t,n,i,r,a,s){var o=this.elements,u=1,c=0;if(r%360){var h=r;u=Math.cos(h),c=Math.sin(h)}return o[0]=u*n,o[3]=-c*i,o[6]=e,o[1]=c*n,o[4]=u*i,o[7]=t,o[2]=0,o[5]=0,o[8]=1,(a||s)&&(o[6]-=a*o[0]+s*o[3],o[7]-=a*o[1]+s*o[4]),this},setUvTransform:function(e,t,n,i,r,a,s){var o=Math.cos(r),u=Math.sin(r);this.set(n*o,n*u,-n*(o*a+u*s)+a+e,-i*u,i*o,-i*(-u*a+o*s)+s+t,0,0,1)},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}}),zen3d.Matrix3=e}(),function(){var h,l,r,a,s,o,e=zen3d.Vector3;function t(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}t.prototype=Object.assign(t.prototype,{identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},set:function(e,t,n,i,r,a,s,o,u,c,h,l,d,p,f,_){var v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=r,v[5]=a,v[9]=s,v[13]=o,v[2]=u,v[6]=c,v[10]=h,v[14]=l,v[3]=d,v[7]=p,v[11]=f,v[15]=_,this},copy:function(e){return this.elements.set(e.elements),this},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,i=t.elements,r=this.elements,a=n[0],s=n[4],o=n[8],u=n[12],c=n[1],h=n[5],l=n[9],d=n[13],p=n[2],f=n[6],_=n[10],v=n[14],m=n[3],g=n[7],E=n[11],y=n[15],T=i[0],x=i[4],M=i[8],S=i[12],b=i[1],w=i[5],A=i[9],z=i[13],P=i[2],L=i[6],R=i[10],C=i[14],N=i[3],I=i[7],D=i[11],U=i[15];return r[0]=a*T+s*b+o*P+u*N,r[4]=a*x+s*w+o*L+u*I,r[8]=a*M+s*A+o*R+u*D,r[12]=a*S+s*z+o*C+u*U,r[1]=c*T+h*b+l*P+d*N,r[5]=c*x+h*w+l*L+d*I,r[9]=c*M+h*A+l*R+d*D,r[13]=c*S+h*z+l*C+d*U,r[2]=p*T+f*b+_*P+v*N,r[6]=p*x+f*w+_*L+v*I,r[10]=p*M+f*A+_*R+v*D,r[14]=p*S+f*z+_*C+v*U,r[3]=m*T+g*b+E*P+y*N,r[7]=m*x+g*w+E*L+y*I,r[11]=m*M+g*A+E*R+y*D,r[15]=m*S+g*z+E*C+y*U,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},inverse:function(){return this.getInverse(this)},getInverse:function(e){var t=this.elements,n=e.elements,i=n[0],r=n[1],a=n[2],s=n[3],o=n[4],u=n[5],c=n[6],h=n[7],l=n[8],d=n[9],p=n[10],f=n[11],_=n[12],v=n[13],m=n[14],g=n[15],E=d*m*h-v*p*h+v*c*f-u*m*f-d*c*g+u*p*g,y=_*p*h-l*m*h-_*c*f+o*m*f+l*c*g-o*p*g,T=l*v*h-_*d*h+_*u*f-o*v*f-l*u*g+o*d*g,x=_*d*c-l*v*c-_*u*p+o*v*p+l*u*m-o*d*m,M=i*E+r*y+a*T+s*x;if(0===M)return console.warn("can't invert matrix, determinant is 0"),this.identity();var S=1/M;return t[0]=E*S,t[1]=(v*p*s-d*m*s-v*a*f+r*m*f+d*a*g-r*p*g)*S,t[2]=(u*m*s-v*c*s+v*a*h-r*m*h-u*a*g+r*c*g)*S,t[3]=(d*c*s-u*p*s-d*a*h+r*p*h+u*a*f-r*c*f)*S,t[4]=y*S,t[5]=(l*m*s-_*p*s+_*a*f-i*m*f-l*a*g+i*p*g)*S,t[6]=(_*c*s-o*m*s-_*a*h+i*m*h+o*a*g-i*c*g)*S,t[7]=(o*p*s-l*c*s+l*a*h-i*p*h-o*a*f+i*c*f)*S,t[8]=T*S,t[9]=(_*d*s-l*v*s-_*r*f+i*v*f+l*r*g-i*d*g)*S,t[10]=(o*v*s-_*u*s+_*r*h-i*v*h-o*r*g+i*u*g)*S,t[11]=(l*u*s-o*d*s-l*r*h+i*d*h+o*r*f-i*u*f)*S,t[12]=x*S,t[13]=(l*v*a-_*d*a+_*r*p-i*v*p-l*r*m+i*d*m)*S,t[14]=(_*u*a-o*v*a-_*r*c+i*v*c+o*r*m-i*u*m)*S,t[15]=(o*d*a-l*u*a+l*r*c-i*d*c-o*r*p+i*u*p)*S,this},transform:(o=new t,function(e,t,n){var i=n.toMatrix4(o).elements,r=this.elements;return r[0]=i[0]*t.x,r[1]=i[1]*t.x,r[2]=i[2]*t.x,r[3]=0,r[4]=i[4]*t.y,r[5]=i[5]*t.y,r[6]=i[6]*t.y,r[7]=0,r[8]=i[8]*t.z,r[9]=i[9]*t.z,r[10]=i[10]*t.z,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}),makeRotationFromQuaternion:function(e){var t=this.elements,n=e.x,i=e.y,r=e.z,a=e.w,s=n+n,o=i+i,u=r+r,c=n*s,h=n*o,l=n*u,d=i*o,p=i*u,f=r*u,_=a*s,v=a*o,m=a*u;return t[0]=1-(d+f),t[4]=h-m,t[8]=l+v,t[1]=h+m,t[5]=1-(c+f),t[9]=p-_,t[2]=l-v,t[6]=p+_,t[10]=1-(c+d),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAtRH:(r=new e,a=new e,s=new e,function(e,t,n){var i=this.elements;return s.subVectors(e,t),0===s.getLengthSquared()&&(s.z=1),s.normalize(),r.crossVectors(n,s),0===r.getLengthSquared()&&(1===Math.abs(n.z)?s.x+=1e-4:s.z+=1e-4,s.normalize(),r.crossVectors(n,s)),r.normalize(),a.crossVectors(s,r),i[0]=r.x,i[4]=a.x,i[8]=s.x,i[1]=r.y,i[5]=a.y,i[9]=s.y,i[2]=r.z,i[6]=a.z,i[10]=s.z,this}),decompose:(h=new e,l=new t,function(e,t,n){var i=this.elements,r=h.set(i[0],i[1],i[2]).getLength(),a=h.set(i[4],i[5],i[6]).getLength(),s=h.set(i[8],i[9],i[10]).getLength();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],l.elements.set(this.elements);var o=1/r,u=1/a,c=1/s;return l.elements[0]*=o,l.elements[1]*=o,l.elements[2]*=o,l.elements[4]*=u,l.elements[5]*=u,l.elements[6]*=u,l.elements[8]*=c,l.elements[9]*=c,l.elements[10]*=c,t.setFromRotationMatrix(l),n.x=r,n.y=a,n.z=s,this}),determinant:function(){var e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],s=e[5],o=e[9],u=e[13],c=e[2],h=e[6],l=e[10],d=e[14];return e[3]*(+r*o*h-i*u*h-r*s*l+n*u*l+i*s*d-n*o*d)+e[7]*(+t*o*d-t*u*l+r*a*l-i*a*d+i*u*c-r*o*c)+e[11]*(+t*u*h-t*s*d-r*a*h+n*a*d+r*s*c-n*u*c)+e[15]*(-i*s*c-t*o*h+t*s*l+i*a*h-n*a*l+n*o*c)},fromArray:function(e,t){void 0===t&&(t=0);for(var n=0;n<16;n++)this.elements[n]=e[n+t];return this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}),zen3d.Matrix4=t}(),function(){var n,i,r=zen3d.Vector3,d=zen3d.Matrix4;function e(e,t,n,i){this._x=e||0,this._y=t||0,this._z=n||0,this._w=void 0!==i?i:1}Object.defineProperties(e.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this.onChangeCallback()}}}),e.prototype=Object.assign(e.prototype,{normalize:function(e){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},lerpQuaternions:function(e,t,n){var i=e._w,r=e._x,a=e._y,s=e._z,o=t._w,u=t._x,c=t._y,h=t._z,l=i*o+r*u+a*c+s*h;l<0&&(l=-l,o=-o,u=-u,c=-c,h=-h),this._w=i+n*(o-i),this._x=r+n*(u-r),this._y=a+n*(c-a),this._z=s+n*(h-s);var d=1/Math.sqrt(this._w*this._w+this._x*this._x+this._y*this._y+this._z*this._z);return this._w*=d,this._x*=d,this._y*=d,this._z*=d,this.onChangeCallback(),this},slerpQuaternions:function(e,t,n){var i=e._w,r=e._x,a=e._y,s=e._z,o=t._w,u=t._x,c=t._y,h=t._z,l=i*o+r*u+a*c+s*h;if(l<0&&(l=-l,o=-o,u=-u,c=-c,h=-h),l<.95){var d=Math.acos(l),p=1/Math.sin(d),f=Math.sin(d*(1-n))*p,_=Math.sin(d*n)*p;this._w=i*f+o*_,this._x=r*f+u*_,this._y=a*f+c*_,this._z=s*f+h*_}else{this._w=i+n*(o-i),this._x=r+n*(u-r),this._y=a+n*(c-a),this._z=s+n*(h-s);var v=1/Math.sqrt(this._w*this._w+this._x*this._x+this._y*this._y+this._z*this._z);this._w*=v,this._x*=v,this._y*=v,this._z*=v}return this.onChangeCallback(),this},set:function(e,t,n,i){return this._x=e||0,this._y=t||0,this._z=n||0,this._w=void 0!==i?i:1,this.onChangeCallback(),this},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=void 0!==e.w?e.w:1,this.onChangeCallback(),this},setFromEuler:function(e,t){var n=Math.cos(e._x/2),i=Math.cos(e._y/2),r=Math.cos(e._z/2),a=Math.sin(e._x/2),s=Math.sin(e._y/2),o=Math.sin(e._z/2),u=e._order;return"XYZ"===u?(this._x=a*i*r+n*s*o,this._y=n*s*r-a*i*o,this._z=n*i*o+a*s*r,this._w=n*i*r-a*s*o):"YXZ"===u?(this._x=a*i*r+n*s*o,this._y=n*s*r-a*i*o,this._z=n*i*o-a*s*r,this._w=n*i*r+a*s*o):"ZXY"===u?(this._x=a*i*r-n*s*o,this._y=n*s*r+a*i*o,this._z=n*i*o+a*s*r,this._w=n*i*r-a*s*o):"ZYX"===u?(this._x=a*i*r-n*s*o,this._y=n*s*r+a*i*o,this._z=n*i*o-a*s*r,this._w=n*i*r+a*s*o):"YZX"===u?(this._x=a*i*r+n*s*o,this._y=n*s*r+a*i*o,this._z=n*i*o-a*s*r,this._w=n*i*r-a*s*o):"XZY"===u&&(this._x=a*i*r-n*s*o,this._y=n*s*r-a*i*o,this._z=n*i*o+a*s*r,this._w=n*i*r+a*s*o),!1!==t&&this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,n=e.elements,i=n[0],r=n[4],a=n[8],s=n[1],o=n[5],u=n[9],c=n[2],h=n[6],l=n[10],d=i+o+l;return 0<d?(t=.5/Math.sqrt(d+1),this._w=.25/t,this._x=(h-u)*t,this._y=(a-c)*t,this._z=(s-r)*t):o<i&&l<i?(t=2*Math.sqrt(1+i-o-l),this._w=(h-u)/t,this._x=.25*t,this._y=(r+s)/t,this._z=(a+c)/t):l<o?(t=2*Math.sqrt(1+o-i-l),this._w=(a-c)/t,this._x=(r+s)/t,this._y=.25*t,this._z=(u+h)/t):(t=2*Math.sqrt(1+l-i-o),this._w=(s-r)/t,this._x=(a+c)/t,this._y=(u+h)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:(i=new r,function(e,t){return void 0===i&&(i=new r),(n=e.dot(t)+1)<1e-6?(n=0,Math.abs(e.x)>Math.abs(e.z)?i.set(-e.y,e.x,0):i.set(0,-e.z,e.y)):i.crossVectors(e,t),this._x=i.x,this._y=i.y,this._z=i.z,this._w=n,this.normalize()}),multiply:function(e){return this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var n=e._x,i=e._y,r=e._z,a=e._w,s=t._x,o=t._y,u=t._z,c=t._w;return this._x=n*c+a*s+i*u-r*o,this._y=i*c+a*o+r*s-n*u,this._z=r*c+a*u+n*o-i*s,this._w=a*c-n*s-i*o-r*u,this.onChangeCallback(),this},toMatrix4:function(e){e||(e=new d);var t=e.elements,n=2*this._x*this._y,i=2*this._x*this._z,r=2*this._x*this._w,a=2*this._y*this._z,s=2*this._y*this._w,o=2*this._z*this._w,u=this._x*this._x,c=this._y*this._y,h=this._z*this._z,l=this._w*this._w;return t[0]=u-c-h+l,t[4]=n-o,t[8]=i+s,t[12]=0,t[1]=n+o,t[5]=-u+c-h+l,t[9]=a-r,t[13]=0,t[2]=i-s,t[6]=a+r,t[10]=-u-c+h+l,t[14]=0,t[3]=0,t[7]=0,t[11]=0,t[15]=1,e},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},setFromAxisAngle:function(e,t){var n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this.onChangeCallback(),this},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}}),zen3d.Quaternion=e}(),function(){var n=zen3d.Vector2;function e(e,t){this.min=void 0!==e?e:new n(1/0,1/0),this.max=void 0!==t?t:new n(-1/0,-1/0)}e.prototype=Object.assign(e.prototype,{set:function(e,t,n,i){this.min.set(e,t),this.max.set(n,i)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}}),zen3d.Box2=e}(),function(){var t,n=zen3d.Vector3;function e(e,t){this.min=void 0!==e?e:new n(1/0,1/0,1/0),this.max=void 0!==t?t:new n(-1/0,-1/0,-1/0)}e.prototype=Object.assign(e.prototypes,{set:function(e,t){this.min.copy(e),this.max.copy(t)},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},setFromArray:function(e,t){for(var n=1/0,i=1/0,r=1/0,a=-1/0,s=-1/0,o=-1/0,u=void 0!==t?t:3,c=0,h=e.length;c<h;c+=u){var l=e[c],d=e[c+1],p=e[c+2];l<n&&(n=l),d<i&&(i=d),p<r&&(r=p),a<l&&(a=l),s<d&&(s=d),o<p&&(o=p)}return this.min.set(n,i,r),this.max.set(a,s,o),this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},getCenter:function(e){var t=e||new n;return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},applyMatrix4:(t=[new n,new n,new n,new n,new n,new n,new n,new n],function(e){return this.isEmpty()||(t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(t)),this}),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}}),zen3d.Box3=e}(),function(){var h,l,n=zen3d.Vector3,i=zen3d.Box3;function e(e,t){this.center=void 0!==e?e:new n,this.radius=void 0!==t?t:0}e.prototype=Object.assign(e.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromArray:(h=new i,l=new n,function(e,t){var n=void 0!==t?t:3,i=this.center;h.setFromArray(e,n).getCenter(i);for(var r=0,a=0,s=e.length;a<s;a+=n){var o=e[a],u=e[a+1],c=e[a+2];l.set(o,u,c),r=Math.max(r,i.distanceToSquared(l))}return this.radius=Math.sqrt(r),this}),applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},getBoundingBox:function(e){var t=e||new i;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},clone:function(){return(new e).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this}}),zen3d.Sphere=e}(),function(){var a,s,n=zen3d.Vector3,e=zen3d.Matrix3;function t(e,t){this.normal=void 0!==e?e:new n(1,0,0),this.constant=void 0!==t?t:0}t.prototype=Object.assign(t.prototype,{set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this},normalize:function(){var e=1/this.normal.getLength();return this.normal.multiplyScalar(e),this.constant*=e,this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},coplanarPoint:function(e){return(e||new n).copy(this.normal).multiplyScalar(-this.constant)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},applyMatrix4:(a=new n,s=new e,function(e,t){var n=t||s.setFromMatrix4(e).inverse().transpose(),i=this.coplanarPoint(a).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this})}),zen3d.Plane=t}(),function(){var s,o,u=zen3d.Plane,e=zen3d.Vector3;function t(e,t,n,i,r,a){this.planes=[void 0!==e?e:new u,void 0!==t?t:new u,void 0!==n?n:new u,void 0!==i?i:new u,void 0!==r?r:new u,void 0!==a?a:new u]}t.prototype=Object.assign(t.prototype,{set:function(e,t,n,i,r,a){var s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this},setFromMatrix:function(e){var t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],s=n[3],o=n[4],u=n[5],c=n[6],h=n[7],l=n[8],d=n[9],p=n[10],f=n[11],_=n[12],v=n[13],m=n[14],g=n[15];return t[0].setComponents(s-i,h-o,f-l,g-_).normalize(),t[1].setComponents(s+i,h+o,f+l,g+_).normalize(),t[2].setComponents(s+r,h+u,f+d,g+v).normalize(),t[3].setComponents(s-r,h-u,f-d,g-v).normalize(),t[4].setComponents(s-a,h-c,f-p,g-m).normalize(),t[5].setComponents(s+a,h+c,f+p,g+m).normalize(),this},intersectsSphere:function(e){for(var t=this.planes,n=e.center,i=-e.radius,r=0;r<6;r++){if(t[r].distanceToPoint(n)<i)return!1}return!0},intersectsBox:(s=new e,o=new e,function(e){for(var t=this.planes,n=0;n<6;n++){var i=t[n];s.x=0<i.normal.x?e.min.x:e.max.x,o.x=0<i.normal.x?e.max.x:e.min.x,s.y=0<i.normal.y?e.min.y:e.max.y,o.y=0<i.normal.y?e.max.y:e.min.y,s.z=0<i.normal.z?e.min.z:e.max.z,o.z=0<i.normal.z?e.max.z:e.min.z;var r=i.distanceToPoint(s),a=i.distanceToPoint(o);if(r<0&&a<0)return!1}return!0})}),zen3d.Frustum=t}(),function(){function e(e,t,n){return this.r=0,this.g=0,void(this.b=0)===t&&void 0===n?this.setHex(e):this.setRGB(e,t,n)}e.prototype=Object.assign(e.prototype,{lerpColors:function(e,t,n){this.r=n*(t.r-e.r)+e.r,this.g=n*(t.g-e.g)+e.g,this.b=n*(t.b-e.b)+e.b,this.r=this.r,this.g=this.g,this.b=this.b},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this},setHSL:function(){function s(e,t,n){return n<0&&(n+=1),1<n&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}return function(e,t,n){var i;if(e=(e%(i=1)+i)%i,t=Math.max(0,Math.min(1,t)),n=Math.max(0,Math.min(1,n)),0===t)this.r=this.g=this.b=n;else{var r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=s(a,r,e+1/3),this.g=s(a,r,e),this.b=s(a,r,e-1/3)}return this}}(),fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}}),zen3d.Color3=e}(),function(){var h,l,d,p,u,n=zen3d.Vector3;function e(e,t){this.origin=void 0!==e?e:new n,this.direction=void 0!==t?t:new n}e.prototype=Object.assign(e.prototype,{set:function(e,t){this.origin.copy(e),this.direction.copy(t)},at:function(e,t){return(t||new n).copy(this.direction).multiplyScalar(e).add(this.origin)},intersectsSphere:(u=new n,function(e,t){u.subVectors(e.center,this.origin);var n=u.dot(this.direction),i=u.dot(u)-n*n,r=e.radius*e.radius;if(r<i)return null;var a=Math.sqrt(r-i),s=n-a,o=n+a;return s<0&&o<0?null:s<0?this.at(o,t):this.at(s,t)}),intersectsBox:function(e,t){var n,i,r,a,s,o,u=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,l=this.origin;return 0<=u?(n=(e.min.x-l.x)*u,i=(e.max.x-l.x)*u):(n=(e.max.x-l.x)*u,i=(e.min.x-l.x)*u),0<=c?(r=(e.min.y-l.y)*c,a=(e.max.y-l.y)*c):(r=(e.max.y-l.y)*c,a=(e.min.y-l.y)*c),a<n||i<r?null:((n<r||n!=n)&&(n=r),(a<i||i!=i)&&(i=a),0<=h?(s=(e.min.z-l.z)*h,o=(e.max.z-l.z)*h):(s=(e.max.z-l.z)*h,o=(e.min.z-l.z)*h),o<n||i<s?null:((n<s||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),i<0?null:this.at(0<=n?n:i,t)))},intersectTriangle:(h=new n,l=new n,d=new n,p=new n,function(e,t,n,i,r){l.subVectors(t,e),d.subVectors(n,e),p.crossVectors(l,d);var a,s=this.direction.dot(p);if(0<s){if(i)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}h.subVectors(this.origin,e);var o=a*this.direction.dot(d.crossVectors(h,d));if(o<0)return null;var u=a*this.direction.dot(l.cross(h));if(u<0)return null;if(s<o+u)return null;var c=-a*h.dot(p);return c<0?null:this.at(c/s,r)}),copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this}}),zen3d.Ray=e}(),function(){var s,_,v,m,a,g=zen3d.Vector3;function o(e,t,n){this.a=void 0!==e?e:new g,this.b=void 0!==t?t:new g,this.c=void 0!==n?n:new g}o.prototype=Object.assign(o.prototype,{set:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}}),o.normal=(s=new g,function(e,t,n,i){var r=i||new g;r.subVectors(n,t),s.subVectors(e,t),r.cross(s);var a=r.getLengthSquared();return 0<a?r.multiplyScalar(1/Math.sqrt(a)):r.set(0,0,0)}),o.barycoordFromPoint=(_=new g,v=new g,m=new g,function(e,t,n,i,r){_.subVectors(i,t),v.subVectors(n,t),m.subVectors(e,t);var a=_.dot(_),s=_.dot(v),o=_.dot(m),u=v.dot(v),c=v.dot(m),h=a*u-s*s,l=r||new g;if(0===h)return l.set(-2,-1,-1);var d=1/h,p=(u*o-s*c)*d,f=(a*c-s*o)*d;return l.set(1-p-f,f,p)}),o.containsPoint=(a=new g,function(e,t,n,i){var r=o.barycoordFromPoint(e,t,n,i,a);return 0<=r.x&&0<=r.y&&r.x+r.y<=1}),zen3d.Triangle=o}(),function(){var n,i,r,a,e=zen3d.Vector2;function t(e,t){this.posPoints=void 0,this.ctrlPoints=void 0,this.segCount=0,this.set(e,t)}t.prototype=Object.assign(t.prototype,{set:function(e,t){this.posPoints=e,this.ctrlPoints=t,e.length!==t.length&&console.warn("Curve: posPoints and ctrlPoints's length not equal!"),this.segCount=e.length-1},calc:(n=new e,i=new e,r=new e,a=new e,function(e){for(var t=0;t<this.segCount;t++)if(e>=this.posPoints[t].x&&e<=this.posPoints[t+1].x){n.copy(this.posPoints[t]),r.copy(this.posPoints[t+1]),i.copy(this.ctrlPoints[t]),a.copy(this.ctrlPoints[t+1]);break}return n||n.copy(this.posPoints[this.posPoints.length-1]),i||i.copy(this.ctrlPoints[this.ctrlPoints.length-1]),r.copy(r||n),a.copy(a||i),e=(e-n.x)/(r.x-n.x),this._cubic_bezier(n.y,i.y,a.y,r.y,e)}),averageXSampler:function(e){e<2&&console.warn("Curve: sampler num less than 2!");for(var t=[],n=this.posPoints[0].x,i=this.posPoints[this.posPoints.length-1].x,r=(i-n)/(e-1),a=0,s=0;s<e;s++)a=s===e-1?i:n+s*r,t.push(a,this.calc(a));return t},_cubic_bezier:function(e,t,n,i,r){return e=this._mix(e,t,r),t=this._mix(t,n,r),n=this._mix(n,i,r),e=this._mix(e,t,r),t=this._mix(t,n,r),e=this._mix(e,t,r)},_mix:function(e,t,n){return e*(1-n)+t*n}}),zen3d.Curve=t}(),function(){function e(e,t,n){this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==n?n:0}e.prototype=Object.assign(e.prototype,{set:function(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},clone:function(){return(new this.constructor).copy(this)},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(e){return this.radius=e.getLength(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e.x,e.z),this.phi=Math.acos(Math.min(1,Math.max(-1,e.y/this.radius)))),this}}),zen3d.Spherical=e}(),function(){function e(){this.eventMap={}}e.prototype=Object.assign(e.prototype,{addEventListener:function(e,t,n){var i=this.eventMap[e];i||(i=this.eventMap[e]=[]),i.push({listener:t,thisObject:n||this})},removeEventListener:function(e,t,n){var i=this.eventMap[e];if(i)for(var r=0,a=i.length;r<a;r++){var s=i[r];if(s.listener==t&&s.thisObject==(n||this)){i.splice(r,1);break}}},dispatchEvent:function(e){(e.target=this).notifyListener(e)},notifyListener:function(e){var t=this.eventMap[e.type];if(t)for(var n=0,i=t.length;n<i;n++){var r=t[n];r.listener.call(r.thisObject,e)}}}),zen3d.EventDispatcher=e}(),function(){var r=zen3d.Ray;function e(e,t,n,i){this.ray=new r(e,t),this.near=n||0,this.far=i||1/0}function a(e,t){return e.distance-t.distance}function o(e,t,n,i){if(e.raycast(t,n),!0===i)for(var r=e.children,a=0,s=r.length;a<s;a++)o(r[a],t,n,!0)}e.prototype=Object.assign(e.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){this.ray.origin.setFromMatrixPosition(t.worldMatrix),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize()},intersectObject:function(e,t){var n=[];return o(e,this,n,t),n.sort(a),n},intersectObjects:function(e,t){var n=[];if(!1===Array.isArray(e))return console.warn("Raycaster.intersectObjects: objects is not an Array."),n;for(var i=0,r=e.length;i<r;i++)o(e[i],this,n,t);return n.sort(a),n}}),zen3d.Raycaster=e}(),function(){var t=function(e,t){var n=["","WEBKIT_","MOZ_"],i=null;for(var r in n)if(i=e.getExtension(n[r]+t))break;return i};zen3d.WebGLCapabilities=function(e){this.version=parseFloat(/^WebGL\ ([0-9])/.exec(e.getParameter(e.VERSION))[1]),this.precision="highp",this.maxPrecision=function(e,t){if("highp"===t){if(0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision)return"highp";t="mediump"}return"mediump"===t&&0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision?"mediump":"lowp"}(e,this.precision),this.maxTextures=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxCubemapSize=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxVertexUniformVectors=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),this.floatTextures=!!t(e,"OES_texture_float"),this.anisotropyExt=t(e,"EXT_texture_filter_anisotropic"),this.shaderTextureLOD=t(e,"EXT_shader_texture_lod"),this.angleInstancedArraysExt=t(e,"ANGLE_instanced_arrays"),this.maxAnisotropy=null!==this.anisotropyExt?e.getParameter(this.anisotropyExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,t(e,"OES_standard_derivatives"),t(e,"GL_OES_standard_derivatives"),t(e,"WEBGL_depth_texture")}}(),function(){var c=zen3d.BLEND_TYPE,n=zen3d.CULL_FACE_TYPE,i=zen3d.Vector4;function r(e,t,n,i){var r=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var s=0;s<i;s++)e.texImage2D(n+s,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,r);return a}function e(e,t){this.gl=e,this.capabilities=t,this.states={},this.currentBlending=null,this.currentBlendEquation=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendEquationAlpha=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipliedAlpha=null,this.currentCullFace=null,this.currentViewport=new i,this.currentColorMask=null,this.currentClearColor=new i,this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBuffers={},this.emptyTextures={},this.emptyTextures[e.TEXTURE_2D]=r(e,e.TEXTURE_2D,e.TEXTURE_2D,1),this.emptyTextures[e.TEXTURE_CUBE_MAP]=r(e,e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),this.currentFlipSided=!1,this.currentDepthMask=!0,this.currentLineWidth=null,this.currentProgram=null,this.currentStencilMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilClear=null,this.currentRenderTarget=null}e.prototype=Object.assign(e.prototype,{setBlend:function(e,t,n,i,r,a,s,o){var u=this.gl;e!==c.NONE?this.enable(u.BLEND):this.disable(u.BLEND),e!==c.CUSTOM?(e===this.currentBlending&&o===this.currentPremultipliedAlpha||(e===c.NORMAL&&(o?(u.blendEquationSeparate(u.FUNC_ADD,u.FUNC_ADD),u.blendFuncSeparate(u.ONE,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA)):(u.blendEquationSeparate(u.FUNC_ADD,u.FUNC_ADD),u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA))),e===c.ADD&&(o?(u.blendEquationSeparate(u.FUNC_ADD,u.FUNC_ADD),u.blendFuncSeparate(u.ONE,u.ONE,u.ONE,u.ONE)):(u.blendEquation(u.FUNC_ADD),u.blendFunc(u.SRC_ALPHA,u.ONE)))),this.currentBlendEquation=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendEquationAlpha=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null):(r=r||t,a=a||n,s=s||i,t===this.currentBlendEquation&&r===this.currentBlendEquationAlpha||(u.blendEquationSeparate(t,r),this.currentBlendEquation=t,this.currentBlendEquationAlpha=r),n===this.currentBlendSrc&&i===this.currentBlendDst&&a===this.currentBlendSrcAlpha&&s===this.currentBlendDstAlpha||(u.blendFuncSeparate(n,i,a,s),this.currentBlendSrc=n,this.currentBlendDst=i,this.currentBlendSrcAlpha=a,this.currentBlendDstAlpha=s)),this.currentBlending=e,this.currentPremultipliedAlpha=o},setFlipSided:function(e){var t=this.gl;this.currentFlipSided!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e)},setCullFace:function(e){var t=this.gl;e!==n.NONE?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===n.BACK?t.cullFace(t.BACK):e===n.FRONT?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e},viewport:function(e,t,n,i){var r=this.currentViewport;r.x===e&&r.y===t&&r.z===n&&r.w===i||(this.gl.viewport(e,t,n,i),r.set(e,t,n,i))},colorMask:function(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)},clearColor:function(e,t,n,i){var r=this.currentClearColor;r.x===e&&r.y===t&&r.z===n&&r.w===i||(this.gl.clearColor(e,t,n,i),r.set(e,t,n,i))},activeTexture:function(e){var t=this.gl;void 0===e&&(e=t.TEXTURE0+this.capabilities.maxTextures-1),this.currentTextureSlot!==e&&(t.activeTexture(e),this.currentTextureSlot=e)},bindTexture:function(e,t){var n=this.gl;null===this.currentTextureSlot&&this.activeTexture();var i=this.currentBoundTextures[this.currentTextureSlot];void 0===i&&(i={type:void 0,texture:void 0},this.currentBoundTextures[this.currentTextureSlot]=i),i.type===e&&i.texture===t||(n.bindTexture(e,t||this.emptyTextures[e]),i.type=e,i.texture=t)},bindBuffer:function(e,t){var n=this.gl;this.currentBoundBuffers[e]!==t&&(n.bindBuffer(e,t),this.currentBoundBuffers[e]=t)},enable:function(e){!0!==this.states[e]&&(this.gl.enable(e),this.states[e]=!0)},disable:function(e){!1!==this.states[e]&&(this.gl.disable(e),this.states[e]=!1)},depthMask:function(e){e!==this.currentDepthMask&&(this.gl.depthMask(e),this.currentDepthMask=e)},setLineWidth:function(e){e!==this.currentLineWidth&&(1<=this.capabilities.version&&this.gl.lineWidth(e),this.currentLineWidth=e)},setProgram:function(e){this.currentProgram!==e&&(this.gl.useProgram(e.id),this.currentProgram=e)},stencilMask:function(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)},stencilFunc:function(e,t,n){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===n||(this.gl.stencilFunc(e,t,n),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=n)},stencilOp:function(e,t,n){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===n||(this.gl.stencilOp(e,t,n),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=n)},clearStencil:function(e){this.currentStencilClear!==e&&(this.gl.clearStencil(e),this.currentStencilClear=e)}}),zen3d.WebGLState=e}(),function(){function e(){this.properties={}}e.prototype=Object.assign(e.prototype,{get:function(e){var t=e.uuid,n=this.properties[t];return void 0===n&&(n={},this.properties[t]=n),n},delete:function(e){delete this.properties[e.uuid]},clear:function(){this.properties={}}}),zen3d.WebGLProperties=e}(),function(){var f=zen3d.WEBGL_TEXTURE_FILTER,_=zen3d.WEBGL_TEXTURE_WRAP,l=zen3d.WEBGL_PIXEL_TYPE,v=zen3d.isWeb,t=zen3d.isPowerOfTwo,m=zen3d.nearestPowerOfTwo;function a(e){return e===f.NEAREST||e===f.NEAREST_MIPMAP_LINEAR||e===f.NEAREST_MIPMAP_NEAREST?f.NEAREST:f.LINEAR}function g(e){return t(e.width)&&t(e.height)}function E(e,t){if(e.width>t||e.height>t){if(!v)return console.warn("image is too big ("+e.width+"x"+e.height+"). max size is "+t+"x"+t,e),e;var n=t/Math.max(e.width,e.height),i=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return i.width=Math.floor(e.width*n),i.height=Math.floor(e.height*n),i.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,i.width,i.height),console.warn("image is too big ("+e.width+"x"+e.height+"). Resized to "+i.width+"x"+i.height,e),i}return e}function e(e,t,n,i){this.gl=e,this.state=t,this.properties=n,this.capabilities=i}e.prototype.setTexture2D=function(e,t){var n,i=this.gl,r=this.state,a=this.properties.get(e);if(0<e.version&&a.__version!==e.version){void 0===a.__webglTexture&&(e.addEventListener("dispose",this.onTextureDispose,this),a.__webglTexture=i.createTexture()),r.activeTexture(i.TEXTURE0+t),r.bindTexture(i.TEXTURE_2D,a.__webglTexture);var s=E(e.image,this.capabilities.maxTextureSize);((n=e).wrapS!==_.CLAMP_TO_EDGE||n.wrapT!==_.CLAMP_TO_EDGE||n.minFilter!==f.NEAREST&&n.minFilter!==f.LINEAR)&&!1===g(s)&&(s=function(e){if(v&&(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement)){var t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.width=m(e.width),t.height=m(e.height),t.getContext("2d").drawImage(e,0,0,t.width,t.height),console.warn("image is not power of two ("+e.width+"x"+e.height+"). Resized to "+t.width+"x"+t.height,e),t}return e}(s));var o=g(s);i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,e.flipY),this.setTextureParameters(e,o);var u,c=e.mipmaps,h=e.pixelFormat,l=e.pixelType;if(e.isDataTexture)if(0<c.length&&o){for(var d=0,p=c.length;d<p;d++)u=c[d],i.texImage2D(i.TEXTURE_2D,d,h,u.width,u.height,e.border,h,l,u.data);e.generateMipmaps=!1}else i.texImage2D(i.TEXTURE_2D,0,h,s.width,s.height,e.border,h,l,s.data);else if(0<c.length&&o){for(d=0,p=c.length;d<p;d++)u=c[d],i.texImage2D(i.TEXTURE_2D,d,h,h,l,u);e.generateMipmaps=!1}else i.texImage2D(i.TEXTURE_2D,0,h,h,l,s);return e.generateMipmaps&&o&&i.generateMipmap(i.TEXTURE_2D),void(a.__version=e.version)}r.activeTexture(i.TEXTURE0+t),r.bindTexture(i.TEXTURE_2D,a.__webglTexture)},e.prototype.setTextureCube=function(e,t){var n=this.gl,i=this.state,r=this.properties.get(e);if(0<e.version&&r.__version!==e.version){void 0===r.__webglTexture&&(e.addEventListener("dispose",this.onTextureDispose,this),r.__webglTexture=n.createTexture()),i.activeTexture(n.TEXTURE0+t),i.bindTexture(n.TEXTURE_CUBE_MAP,r.__webglTexture);for(var a=[],s=0;s<6;s++)a[s]=E(e.images[s],this.capabilities.maxCubemapSize);var o=g(a[0]);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,e.flipY),this.setTextureParameters(e,o);var u=e.pixelFormat,c=e.pixelType;for(s=0;s<6;s++)n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,u,u,c,a[s]);return e.generateMipmaps&&o&&n.generateMipmap(n.TEXTURE_CUBE_MAP),void(r.__version=e.version)}i.activeTexture(n.TEXTURE0+t),i.bindTexture(n.TEXTURE_CUBE_MAP,r.__webglTexture)},e.prototype.setTextureParameters=function(e,t){var n=this.gl,i=e.textureType;t?(n.texParameteri(i,n.TEXTURE_WRAP_S,e.wrapS),n.texParameteri(i,n.TEXTURE_WRAP_T,e.wrapT),n.texParameteri(i,n.TEXTURE_MAG_FILTER,e.magFilter),n.texParameteri(i,n.TEXTURE_MIN_FILTER,e.minFilter)):(n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),e.wrapS===n.CLAMP_TO_EDGE&&e.wrapT===n.CLAMP_TO_EDGE||console.warn("Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to zen3d.TEXTURE_WRAP.CLAMP_TO_EDGE.",e),n.texParameteri(i,n.TEXTURE_MAG_FILTER,a(e.magFilter)),n.texParameteri(i,n.TEXTURE_MIN_FILTER,a(e.minFilter)),(e.minFilter!==n.NEAREST&&e.minFilter!==n.LINEAR||e.magFilter!==n.NEAREST&&e.magFilter!==n.LINEAR)&&console.warn("Texture is not power of two. Texture.minFilter and Texture.magFilter should be set to zen3d.TEXTURE_FILTER.NEAREST or zen3d.TEXTURE_FILTER.LINEAR.",e));var r=this.capabilities.anisotropyExt;r&&1<e.anisotropy&&n.texParameterf(i,r.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,this.capabilities.maxAnisotropy))},e.prototype.setRenderTarget2D=function(e){var t=this.gl,n=this.state,i=this.properties.get(e),r=this.properties.get(e.texture);if(void 0!==r.__webglTexture&&void 0!==i.__webglFramebuffer)t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer);else{e.addEventListener("dispose",this.onRenderTargetDispose,this),r.__webglTexture=t.createTexture(),i.__webglFramebuffer=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer),n.bindTexture(t.TEXTURE_2D,r.__webglTexture);var a=g(e);this.setTextureParameters(e.texture,a);var s=e.texture.pixelFormat,o=e.texture.pixelType;if(t.texImage2D(t.TEXTURE_2D,0,s,e.width,e.height,0,s,o,null),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r.__webglTexture,0),e.texture.generateMipmaps&&a&&t.generateMipmap(t.TEXTURE_2D),n.bindTexture(t.TEXTURE_2D,null),e.depthBuffer)if(e.depthTexture){var u=this.properties.get(e.depthTexture);if(u.__webglTexture=t.createTexture(),n.bindTexture(t.TEXTURE_2D,u.__webglTexture),this.setTextureParameters(e.depthTexture,a),s=e.depthTexture.pixelFormat,o=e.depthTexture.pixelType,t.texImage2D(t.TEXTURE_2D,0,s,e.width,e.height,0,s,o,null),o===l.UNSIGNED_SHORT||o===l.UNSIGNED_INT)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,u.__webglTexture,0);else{if(o!==l.UNSIGNED_INT_24_8)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,u.__webglTexture,0)}n.bindTexture(t.TEXTURE_2D,null)}else{i.__webglDepthbuffer=t.createRenderbuffer();var c=i.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,c),e.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,c)):(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,c)),t.bindRenderbuffer(t.RENDERBUFFER,null)}var h=t.checkFramebufferStatus(t.FRAMEBUFFER);h!==t.FRAMEBUFFER_COMPLETE&&(h===t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_ATTACHMENT"):h===t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"):h===t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS?console.warn("framebuffer not complete: FRAMEBUFFER_INCOMPLETE_DIMENSIONS"):h===t.FRAMEBUFFER_UNSUPPORTED?console.warn("framebuffer not complete: FRAMEBUFFER_UNSUPPORTED"):console.warn("framebuffer not complete."))}},e.prototype.setRenderTargetCube=function(e){var t=this.gl,n=this.state,i=this.properties.get(e),r=this.properties.get(e.texture);if(void 0!==r.__webglTexture&&void 0!==i.__webglFramebuffer)t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,r.__webglTexture,0);else{e.addEventListener("dispose",this.onRenderTargetDispose,this),r.__webglTexture=t.createTexture(),i.__webglFramebuffer=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer),n.bindTexture(t.TEXTURE_CUBE_MAP,r.__webglTexture);var a=g(e);this.setTextureParameters(e.texture,a);for(var s=e.texture.pixelFormat,o=e.texture.pixelType,u=0;u<6;u++)t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,s,e.width,e.height,0,s,o,null);if(t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,r.__webglTexture,0),e.texture.generateMipmaps&&a&&t.generateMipmap(t.TEXTURE_CUBE_MAP),n.bindTexture(t.TEXTURE_CUBE_MAP,null),e.depthBuffer){i.__webglDepthbuffer=t.createRenderbuffer();var c=i.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,c),e.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,c)):(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,c)),t.bindRenderbuffer(t.RENDERBUFFER,null)}}},e.prototype.updateRenderTargetMipmap=function(e){var t=this.gl,n=this.state,i=e.texture;if(i.generateMipmaps&&g(e)&&i.minFilter!==t.NEAREST&&i.minFilter!==t.LINEAR){var r=i.textureType,a=this.properties.get(i).__webglTexture;n.bindTexture(r,a),t.generateMipmap(r),n.bindTexture(r,null)}},e.prototype.onTextureDispose=function(e){var t=this.gl,n=e.target,i=this.properties.get(n);n.removeEventListener("dispose",this.onTextureDispose,this),i.__webglTexture&&t.deleteTexture(i.__webglTexture),this.properties.delete(n)},e.prototype.onRenderTargetDispose=function(e){var t=this.gl,n=e.target,i=this.properties.get(n);n.removeEventListener("dispose",this.onRenderTargetDispose,this),i.__webglTexture&&t.deleteTexture(textureProperties.__webglTexture),i.__webglFramebuffer&&t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer),this.properties.delete(n)},e.prototype.setRenderTarget=function(e){var t=this.gl,n=this.state;if(e.texture){var i=void 0!==e.activeCubeFace;if(n.currentRenderTarget!==e)i?this.setRenderTargetCube(e):this.setRenderTarget2D(e),n.currentRenderTarget=e;else if(i){var r=this.properties.get(e.texture);t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,r.__webglTexture,0)}}else n.currentRenderTarget===e||(t.bindFramebuffer(t.FRAMEBUFFER,null),n.currentRenderTarget=e)},zen3d.WebGLTexture=e}(),function(){function a(e,t,n,i){n.isInterleavedBufferAttribute&&(n=n.data);var r,a,s,o,u,c,h=t.get(n);void 0===h.buffer?function(e,t,n,i){var r=n.array,a=n.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW,s=e.createBuffer();e.bindBuffer(i,s),e.bufferData(i,r,a);var o=e.FLOAT;r instanceof Float32Array?o=e.FLOAT:r instanceof Float64Array?console.warn("Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?o=e.UNSIGNED_SHORT:r instanceof Int16Array?o=e.SHORT:r instanceof Uint32Array?o=e.UNSIGNED_INT:r instanceof Int32Array?o=e.INT:r instanceof Int8Array?o=e.BYTE:r instanceof Uint8Array&&(o=e.UNSIGNED_BYTE),t.buffer=s,t.type=o,t.bytesPerElement=r.BYTES_PER_ELEMENT,t.version=n.version}(e,h,n,i):h.version<n.version&&(r=e,a=h.buffer,o=i,u=(s=n).array,c=s.updateRange,r.bindBuffer(o,a),!1===s.dynamic?r.bufferData(o,u,r.STATIC_DRAW):-1===c.count?r.bufferSubData(o,0,u):0===c.count?console.error("updateBuffer: dynamic BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(r.bufferSubData(o,c.offset*u.BYTES_PER_ELEMENT,u.subarray(c.offset,c.offset+c.count)),c.count=-1),h.version=n.version)}function r(e,t,n){n.isInterleavedBufferAttribute&&(n=n.data);var i=t.get(n);i.buffer&&e.deleteBuffer(i.buffer),buffers.delete(n)}function e(e,t,n,i){this.gl=e,this.state=t,this.properties=n,this.capabilities=i}e.prototype=Object.assign(e.prototype,{setGeometry:function(e){var t=this.gl,n=(this.state,this.properties),i=this.properties.get(e);for(var r in i.created||(e.addEventListener("dispose",this.onGeometryDispose2,this),i.created=!0),null!==e.index&&a(t,n,e.index,t.ELEMENT_ARRAY_BUFFER),e.attributes)a(t,n,e.attributes[r],t.ARRAY_BUFFER)},onGeometryDispose:function(e){var t=this.gl,n=e.target;this.properties.get(n);for(var i in n.removeEventListener("dispose",this.onGeometryDispose,this),null!==n.index&&r(t,properties,n.index),n.attributes)r(t,properties,n.attributes[i]);this.properties.delete(n)}}),zen3d.WebGLGeometry=e}(),function(){var t=zen3d.WEBGL_UNIFORM_TYPE;function e(e,t,n){this.gl=e,this.name=n.name,this.type=n.type,this.size=n.size,this.location=e.getUniformLocation(t,this.name),this.setValue=void 0,this.set=void 0,this._generateSetValue()}e.prototype=Object.assign(e.prototype,{_generateSetValue:function(){var r=this.gl,e=this.type,a=this.location;switch(e){case t.FLOAT:1<this.size?this.setValue=this.set=function(e){r.uniform1fv(a,e)}:this.setValue=this.set=function(e){r.uniform1f(a,e)};break;case t.SAMPLER_2D:case t.SAMPLER_CUBE:case t.BOOL:case t.INT:this.setValue=this.set=function(e){r.uniform1i(a,e)};break;case t.FLOAT_VEC2:this.setValue=function(e,t){r.uniform2f(a,e,t)},this.set=function(e){r.uniform2fv(a,e)};break;case t.BOOL_VEC2:case t.INT_VEC2:this.setValue=function(e,t){r.uniform2i(a,e,t)},this.set=function(e){r.uniform2iv(a,e)};break;case t.FLOAT_VEC3:this.setValue=function(e,t,n){r.uniform3f(a,e,t,n)},this.set=function(e){r.uniform3fv(a,e)};break;case t.BOOL_VEC3:case t.INT_VEC3:this.setValue=function(e,t,n){r.uniform3i(a,e,t,n)},this.set=function(e){r.uniform3iv(a,e)};break;case t.FLOAT_VEC4:this.setValue=function(e,t,n,i){r.uniform4f(a,e,t,n,i)},this.set=function(e){r.uniform4fv(a,e)};break;case t.BOOL_VEC4:case t.INT_VEC4:this.setValue=function(e,t,n,i){r.uniform4i(a,e,t,n,i)},this.set=function(e){r.uniform4iv(a,e)};break;case t.FLOAT_MAT2:this.setValue=this.set=function(e){r.uniformMatrix2fv(a,!1,e)};break;case t.FLOAT_MAT3:this.setValue=this.set=function(e){r.uniformMatrix3fv(a,!1,e)};break;case t.FLOAT_MAT4:this.setValue=this.set=function(e){r.uniformMatrix4fv(a,!1,e)}}}}),zen3d.WebGLUniform=e}(),function(){var t=zen3d.WEBGL_ATTRIBUTE_TYPE;function e(e,t,n){this.gl=e,this.name=n.name,this.type=n.type,this.size=n.size,this.location=e.getAttribLocation(t,this.name),this.count=0,this.initCount(e),this.format=e.FLOAT,this.initFormat(e)}e.prototype=Object.assign(e.prototype,{initCount:function(e){switch(this.type){case t.FLOAT:case t.BYTE:case t.UNSIGNED_BYTE:case t.UNSIGNED_SHORT:this.count=1;break;case t.FLOAT_VEC2:this.count=2;break;case t.FLOAT_VEC3:this.count=3;break;case t.FLOAT_VEC4:this.count=4}},initFormat:function(e){switch(this.type){case t.FLOAT:case t.FLOAT_VEC2:case t.FLOAT_VEC3:case t.FLOAT_VEC4:this.format=e.FLOAT;break;case t.UNSIGNED_BYTE:this.format=e.UNSIGNED_BYTE;break;case t.UNSIGNED_SHORT:this.format=e.UNSIGNED_SHORT;break;case t.BYTE:this.format=e.BYTE}}}),zen3d.WebGLAttribute=e}(),function(){var c=zen3d.WebGLUniform,h=zen3d.WebGLAttribute,l=zen3d.generateUUID;function d(e,t,n){var i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),e.getShaderParameter(i,e.COMPILE_STATUS)||console.warn("shader not compiled!",e.getShaderInfoLog(i),function(e){for(var t=e.split("\n"),n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join("\n")}(n)),i}function e(e,t,n){this.uuid=l(),this.vshaderSource=t,this.fshaderSource=n;var i,r,a,s,o=d(e,e.VERTEX_SHADER,this.vshaderSource),u=d(e,e.FRAGMENT_SHADER,this.fshaderSource);this.id=(r=o,a=u,s=(i=e).createProgram(),i.attachShader(s,r),i.attachShader(s,a),i.linkProgram(s),i.getProgramParameter(s,i.LINK_STATUS)||console.warn("program not linked!",i.getProgramInfoLog(s)),s),this.uniforms=function(e,t){for(var n={},i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),r=0;r<i;r++){var a=e.getActiveUniform(t,r),s=a.name,o=new c(e,t,a);n[s]=o}return n}(e,this.id),this.attributes=function(e,t){for(var n={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),r=0;r<i;r++){var a=e.getActiveAttrib(t,r),s=a.name,o=new h(e,t,a);n[s]=o}return n}(e,this.id),e.deleteShader(o),e.deleteShader(u)}e.prototype.dispose=function(e){e.deleteProgram(this.id)},zen3d.WebGLProgram=e}(),function(){var i,r,a=zen3d.CULL_FACE_TYPE,s=zen3d.BLEND_TYPE,o=zen3d.DRAW_SIDE,I=zen3d.WEBGL_UNIFORM_TYPE,D=zen3d.OBJECT_TYPE,u=zen3d.FOG_TYPE,e=zen3d.Vector3,t=zen3d.Vector4,n=zen3d.Plane,c=zen3d.WebGLProperties,h=zen3d.WebGLCapabilities,l=zen3d.WebGLState,d=zen3d.WebGLTexture,p=zen3d.WebGLGeometry,f=zen3d.nextPowerOfTwo,_=zen3d.TextureData,v=zen3d.Quaternion,U=zen3d.getProgram,O=new e,F=new t,B=function(e){return e.material},G=(r=new n,function(e,t){(!i||i.length<4*e.length)&&(i=new Float32Array(4*e.length));for(var n=0;n<e.length;n++)r.copy(e[n]),i[4*n+0]=r.normal.x,i[4*n+1]=r.normal.y,i[4*n+2]=r.normal.z,i[4*n+3]=r.constant;return i});function m(e){this.gl=e;var t=new c;this.properties=t;var n=new h(e);this.capabilities=n;var i=new l(e,n);i.enable(e.STENCIL_TEST),i.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),i.setCullFace(a.BACK),i.setFlipSided(!1),i.clearColor(0,0,0,0),this.state=i,this.texture=new d(e,i,t,n),this.geometry=new p(e,i,t,n),this._usedTextureUnits=0,this._currentGeometryProgram=""}m.prototype.clear=function(e,t,n){var i=this.gl,r=0;(void 0===e||e)&&(r|=i.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=i.DEPTH_BUFFER_BIT),(void 0===n||n)&&(r|=i.STENCIL_BUFFER_BIT),i.clear(r)},m.prototype.render=function(t,e,n,i){var r;r=(i=void 0===i||i)?t.updateRenderList(e):t.getRenderList(e),this.renderPass(r.opaque,e,{scene:t,getMaterial:function(e){return t.overrideMaterial||e.material}}),this.renderPass(r.transparent,e,{scene:t,getMaterial:function(e){return t.overrideMaterial||e.material}}),n&&this.renderPass(r.ui,e,{scene:t,getMaterial:function(e){return t.overrideMaterial||e.material}})},m.prototype.renderPass=function(e,t,n){n=n||{};for(var i=this.gl,r=this.state,a=n.getMaterial||B,s=n.scene||{},o=(r.currentRenderTarget.width,r.currentRenderTarget.height),u=0,c=e.length;u<c;u++){var h=e[u];if(!n.ifRender||n.ifRender(h)){var l=h.object,d=a.call(this,h),p=h.geometry,f=h.group,_=U(this,t,d,l,s);r.setProgram(_),this.geometry.setGeometry(p);var v=_.uuid+"_"+p.uuid;v!==this._currentGeometryProgram&&(this.setupVertexAttributes(_,p),this._currentGeometryProgram=v);var m=_.uniforms;for(var g in m){var E=m[g];switch(g){case"u_Projection":if(l.type===D.CANVAS2D&&l.isScreenCanvas)var y=l.orthoCamera.projectionMatrix.elements;else y=t.projectionMatrix.elements;E.setValue(y);break;case"u_View":if(l.type===D.CANVAS2D&&l.isScreenCanvas)var T=l.orthoCamera.viewMatrix.elements;else T=t.viewMatrix.elements;E.setValue(T);break;case"u_Model":var x=l.worldMatrix.elements;E.setValue(x);break;case"u_Color":var M=d.diffuse;E.setValue(M.r,M.g,M.b);break;case"u_Opacity":E.setValue(d.opacity);break;case"texture":var S=this.allocTexUnit();this.texture.setTexture2D(d.diffuseMap,S),E.setValue(S);break;case"normalMap":S=this.allocTexUnit();this.texture.setTexture2D(d.normalMap,S),E.setValue(S);break;case"bumpMap":S=this.allocTexUnit();this.texture.setTexture2D(d.bumpMap,S),E.setValue(S);break;case"bumpScale":E.setValue(d.bumpScale);break;case"envMap":S=this.allocTexUnit();this.texture.setTextureCube(d.envMap,S),E.setValue(S);break;case"cubeMap":S=this.allocTexUnit();this.texture.setTextureCube(d.cubeMap,S),E.setValue(S);break;case"u_EnvMap_Intensity":E.setValue(d.envMapIntensity);break;case"u_Specular":E.setValue(d.shininess);break;case"u_SpecularColor":M=d.specular;E.setValue(M.r,M.g,M.b,1);break;case"specularMap":S=this.allocTexUnit();this.texture.setTexture2D(d.specularMap,S),E.setValue(S);break;case"aoMap":S=this.allocTexUnit();this.texture.setTexture2D(d.aoMap,S),E.setValue(S);break;case"aoMapIntensity":E.setValue(d.aoMapIntensity);break;case"u_Roughness":E.setValue(d.roughness);break;case"roughnessMap":S=this.allocTexUnit();this.texture.setTexture2D(d.roughnessMap,S),E.setValue(S);break;case"u_Metalness":E.setValue(d.metalness);break;case"metalnessMap":S=this.allocTexUnit();this.texture.setTexture2D(d.metalnessMap,S),E.setValue(S);break;case"emissive":M=d.emissive;var b=d.emissiveIntensity;E.setValue(M.r*b,M.g*b,M.b*b);break;case"emissiveMap":S=this.allocTexUnit();this.texture.setTexture2D(d.emissiveMap,S),E.setValue(S);break;case"u_CameraPosition":O.setFromMatrixPosition(t.worldMatrix),E.setValue(O.x,O.y,O.z);break;case"u_FogColor":M=s.fog.color;E.setValue(M.r,M.g,M.b);break;case"u_FogDensity":E.setValue(s.fog.density);break;case"u_FogNear":E.setValue(s.fog.near);break;case"u_FogFar":E.setValue(s.fog.far);break;case"u_PointSize":E.setValue(d.size);break;case"u_PointScale":var w=.5*o;E.setValue(w);break;case"dashSize":E.setValue(d.dashSize);break;case"totalSize":E.setValue(d.dashSize+d.gapSize);break;case"scale":E.setValue(d.scale);break;case"clippingPlanes[0]":var A=G(s.clippingPlanes||[],t);i.uniform4fv(E.location,A);break;case"uvTransform":var z;(z=d.diffuseMap||d.specularMap||d.normalMap||d.bumpMap||d.roughnessMap||d.metalnessMap||d.emissiveMap)&&(z.matrixAutoUpdate&&z.updateMatrix(),E.setValue(z.matrix.elements));break;default:if(d.uniforms&&void 0!==d.uniforms[g])if(E.type===I.SAMPLER_2D){S=this.allocTexUnit();this.texture.setTexture2D(d.uniforms[g],S),E.setValue(S)}else if(E.type===I.SAMPLER_CUBE){S=this.allocTexUnit();this.texture.setTextureCube(d.uniforms[g],S),E.setValue(S)}else E.set(d.uniforms[g])}}l.type===D.SKINNED_MESH&&this.uploadSkeleton(m,l,_.id),l.type===D.SPRITE&&this.uploadSpriteUniform(m,l,t,s.fog),l.type===D.PARTICLE&&this.uploadParticlesUniform(m,l,t),d.acceptLight&&s.lights&&this.uploadLights(m,s.lights,l.receiveShadow,t);var P=l.worldMatrix.determinant()<0;this.setStates(d,P);var L=F.set(r.currentRenderTarget.width,r.currentRenderTarget.height,r.currentRenderTarget.width,r.currentRenderTarget.height).multiply(t.rect);if(L.z-=L.x,L.w-=L.y,L.x=Math.floor(L.x),L.y=Math.floor(L.y),L.z=Math.floor(L.z),L.w=Math.floor(L.w),l.type===D.CANVAS2D){l.isScreenCanvas&&(l.setRenderViewport(L.x,L.y,L.z,L.w),r.viewport(l.viewport.x,l.viewport.y,l.viewport.z,l.viewport.w));for(var R=0,C=0;C<l.drawArray.length;C++){var N=l.drawArray[C];S=this.allocTexUnit();this.texture.setTexture2D(N.texture,S),m.spriteTexture.setValue(S),i.drawElements(i.TRIANGLES,6*N.count,i.UNSIGNED_SHORT,2*R),R+=6*N.count,this._usedTextureUnits=0}}else r.viewport(L.x,L.y,L.z,L.w),this.draw(p,d,f);this._usedTextureUnits=0}}},m.prototype.setStates=function(e,t){var n=this.gl,i=this.state;e.transparent?i.setBlend(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):i.setBlend(s.NONE),e.depthTest?(i.enable(n.DEPTH_TEST),i.depthMask(e.depthWrite)):i.disable(n.DEPTH_TEST),i.setCullFace(e.side===o.DOUBLE?a.NONE:a.BACK);var r=e.side===o.BACK;t&&(r=!r),i.setFlipSided(r),void 0!==e.lineWidth&&i.setLineWidth(e.lineWidth)},m.prototype.draw=function(e,t,n){var i=this.gl,r=null!==e.index,a=0,s=r?e.index.count:e.getAttribute("a_Position").count,o=n?n.start:0,u=n?n.count:1/0;a=Math.max(a,o),s=Math.min(s,u);var c=this.capabilities.angleInstancedArraysExt;r?e.isInstancedGeometry?0<e.maxInstancedCount&&c.drawElementsInstancedANGLE(t.drawMode,s,i.UNSIGNED_SHORT,2*a,e.maxInstancedCount):i.drawElements(t.drawMode,s,i.UNSIGNED_SHORT,2*a):e.isInstancedGeometry?0<e.maxInstancedCount&&c.drawArraysInstancedANGLE(t.drawMode,a,s,e.maxInstancedCount):i.drawArrays(t.drawMode,a,s)},m.prototype.uploadSkeleton=function(e,t,n){if(t.skeleton&&0<t.skeleton.bones.length){var i=t.skeleton,r=this.gl;if(0<this.capabilities.maxVertexTextures&&this.capabilities.floatTextures){if(void 0===i.boneTexture){var a=Math.sqrt(4*i.bones.length);a=f(Math.ceil(a)),a=Math.max(4,a);var s=new Float32Array(a*a*4);s.set(i.boneMatrices);var o=new _(s,a,a);i.boneMatrices=s,i.boneTexture=o,i.boneTextureSize=a}var u=this.allocTexUnit();this.texture.setTexture2D(i.boneTexture,u),e.boneTexture&&e.boneTexture.setValue(u),e.boneTextureSize&&e.boneTextureSize.setValue(i.boneTextureSize)}else{var c=r.getUniformLocation(n,"boneMatrices");r.uniformMatrix4fv(c,!1,i.boneMatrices)}}};var g=[],E=[],y=[];m.prototype.uploadLights=function(e,t,n,i){var r=this.gl;0<t.ambientsNum&&e.u_AmbientLightColor.set(t.ambient);for(var a=0;a<t.directsNum;a++){var s=t.directional[a];e["u_Directional["+a+"].direction"].set(s.direction),e["u_Directional["+a+"].intensity"].setValue(1),e["u_Directional["+a+"].color"].set(s.color);var o=s.shadow&&n;if(e["u_Directional["+a+"].shadow"].setValue(o?1:0),o){e["u_Directional["+a+"].shadowBias"].setValue(s.shadowBias),e["u_Directional["+a+"].shadowRadius"].setValue(s.shadowRadius),e["u_Directional["+a+"].shadowMapSize"].set(s.shadowMapSize);var u=this.allocTexUnit();this.texture.setTexture2D(t.directionalShadowMap[a],u),g[a]=u}}if(0<g.length){var c=e["directionalShadowMap[0]"];r.uniform1iv(c.location,g),g.length=0;var h=e["directionalShadowMatrix[0]"];r.uniformMatrix4fv(h.location,!1,t.directionalShadowMatrix)}for(a=0;a<t.pointsNum;a++){s=t.point[a];e["u_Point["+a+"].position"].set(s.position),e["u_Point["+a+"].intensity"].setValue(1),e["u_Point["+a+"].color"].set(s.color),e["u_Point["+a+"].distance"].setValue(s.distance),e["u_Point["+a+"].decay"].setValue(s.decay);o=s.shadow&&n;if(e["u_Point["+a+"].shadow"].setValue(o?1:0),o){e["u_Point["+a+"].shadowBias"].setValue(s.shadowBias),e["u_Point["+a+"].shadowRadius"].setValue(s.shadowRadius),e["u_Point["+a+"].shadowMapSize"].set(s.shadowMapSize),e["u_Point["+a+"].shadowCameraNear"].setValue(s.shadowCameraNear),e["u_Point["+a+"].shadowCameraFar"].setValue(s.shadowCameraFar);u=this.allocTexUnit();this.texture.setTextureCube(t.pointShadowMap[a],u),E[a]=u}}if(0<E.length){var l=e["pointShadowMap[0]"];r.uniform1iv(l.location,E),E.length=0}for(a=0;a<t.spotsNum;a++){s=t.spot[a];e["u_Spot["+a+"].position"].set(s.position),e["u_Spot["+a+"].direction"].set(s.direction),e["u_Spot["+a+"].intensity"].setValue(1),e["u_Spot["+a+"].color"].set(s.color),e["u_Spot["+a+"].distance"].setValue(s.distance),e["u_Spot["+a+"].decay"].setValue(s.decay),e["u_Spot["+a+"].coneCos"].setValue(s.coneCos),e["u_Spot["+a+"].penumbraCos"].setValue(s.penumbraCos);o=s.shadow&&n;if(e["u_Spot["+a+"].shadow"].setValue(o?1:0),o){e["u_Spot["+a+"].shadowBias"].setValue(s.shadowBias),e["u_Spot["+a+"].shadowRadius"].setValue(s.shadowRadius),e["u_Spot["+a+"].shadowMapSize"].set(s.shadowMapSize);u=this.allocTexUnit();this.texture.setTexture2D(t.spotShadowMap[a],u),y[a]=u}}if(0<y.length){var d=e["spotShadowMap[0]"];r.uniform1iv(d.location,y),y.length=0;var p=e["spotShadowMatrix[0]"];r.uniformMatrix4fv(p.location,!1,t.spotShadowMatrix)}};var T=[],x=new e,M=new v,S=new e;m.prototype.uploadSpriteUniform=function(e,t,n,i){this.gl,this.state,t.geometry;var r=t.material;e.projectionMatrix.setValue(n.projectionMatrix.elements);var a=0;i?(e.fogColor.setValue(i.color.r,i.color.g,i.color.b),i.fogType===u.NORMAL?(e.fogNear.setValue(i.near),e.fogFar.setValue(i.far),e.fogType.setValue(1),a=1):i.fogType===u.EXP2&&(e.fogDensity.setValue(i.density),e.fogType.setValue(2),a=2)):(e.fogType.setValue(0),a=0),e.alphaTest.setValue(0),e.viewMatrix.setValue(n.viewMatrix.elements),e.modelMatrix.setValue(t.worldMatrix.elements),t.worldMatrix.decompose(x,M,S),T[0]=S.x,T[1]=S.y;var s=0;i&&r.fog&&(s=a),e.fogType.setValue(s),r.diffuseMap,e.uvOffset.setValue(0,0),e.uvScale.setValue(1,1),e.opacity.setValue(r.opacity),e.color.setValue(r.diffuse.r,r.diffuse.g,r.diffuse.b),e.rotation.setValue(r.rotation),e.scale.setValue(T[0],T[1]);var o=this.allocTexUnit();this.texture.setTexture2D(r.diffuseMap,o),e.map.setValue(o)},m.prototype.uploadParticlesUniform=function(e,t,n){this.gl,this.state,t.geometry,t.material;e.uTime.setValue(t.time),e.uScale.setValue(1),e.u_Projection.setValue(n.projectionMatrix.elements),e.u_View.setValue(n.viewMatrix.elements),e.u_Model.setValue(t.worldMatrix.elements);var i=this.allocTexUnit();this.texture.setTexture2D(t.particleNoiseTex,i),e.tNoise.setValue(i);i=this.allocTexUnit();this.texture.setTexture2D(t.particleSpriteTex,i),e.tSprite.setValue(i)},m.prototype.allocTexUnit=function(){var e=this._usedTextureUnits;return e>=this.capabilities.maxTextures&&console.warn("trying to use "+e+" texture units while this GPU supports only "+this.capabilities.maxTextures),this._usedTextureUnits+=1,e},m.prototype.setupVertexAttributes=function(e,t){var n=this.gl,i=e.attributes,r=this.properties,a=this.capabilities.angleInstancedArraysExt;for(var s in i){var o=i[s],u=t.getAttribute(s);if(u){var c,h=u.normalized,l=u.size;o.count!==l&&console.warn("WebGLCore: attribute "+s+" size not match! "+o.count+" : "+l);var d=(c=u.isInterleavedBufferAttribute?r.get(u.data):r.get(u)).buffer,p=c.type;o.format!==p&&console.warn("WebGLCore: attribute "+s+" type not match! "+o.format+" : "+p);var f=c.bytesPerElement;if(u.isInterleavedBufferAttribute){var _=u.data,v=_.stride,m=u.offset;n.enableVertexAttribArray(o.location),_&&_.isInstancedInterleavedBuffer&&(a||console.warn("ANGLE_instanced_arrays not supported"),a.vertexAttribDivisorANGLE(o.location,_.meshPerAttribute),void 0===t.maxInstancedCount&&(t.maxInstancedCount=_.meshPerAttribute*_.count)),n.bindBuffer(n.ARRAY_BUFFER,d),n.vertexAttribPointer(o.location,o.count,o.format,h,f*v,f*m)}else n.enableVertexAttribArray(o.location),u&&u.isInstancedBufferAttribute&&(a||console.warn("ANGLE_instanced_arrays not supported"),a.vertexAttribDivisorANGLE(o.location,u.meshPerAttribute),void 0===t.maxInstancedCount&&(t.maxInstancedCount=u.meshPerAttribute*u.count)),n.bindBuffer(n.ARRAY_BUFFER,d),n.vertexAttribPointer(o.location,o.count,o.format,h,0,0)}else console.warn("WebGLCore: geometry attribute "+s+" not found!")}if(t.index){var g=r.get(t.index);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,g.buffer)}},zen3d.WebGLCore=m}(),zen3d.ShaderChunk={alphaTest_frag:"#ifdef ALPHATEST\n\tif ( outColor.a < ALPHATEST ) discard;\n#endif",ambientlight_pars_frag:"uniform vec4 u_AmbientLightColor;",aoMap_pars_frag:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_frag:"vec4 outColor = vec4(u_Color, u_Opacity);",begin_vert:"vec3 transformed = vec3(a_Position);\n#if defined(USE_NORMAL) || defined(USE_ENV_MAP)\n    vec3 objectNormal = vec3(a_Normal);\n#endif",bsdfs:"\nvec4 BRDF_Diffuse_Lambert(vec4 diffuseColor) {\n    return RECIPROCAL_PI * diffuseColor;\n}\nvec4 F_Schlick( const in vec4 specularColor, const in float dotLH ) {\n\tfloat fresnel = pow( 1.0 - dotLH, 5.0 );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nvec4 BRDF_Specular_BlinnPhong(vec4 specularColor, vec3 N, vec3 L, vec3 V, float shininess) {\n    vec3 H = normalize(L + V);\n    float dotNH = saturate(dot(N, H));\n    float dotLH = saturate(dot(L, H));\n    vec4 F = F_Schlick(specularColor, dotLH);\n    float G = G_BlinnPhong_Implicit( );\n    float D = D_BlinnPhong(shininess, dotNH);\n    return F * G * D;\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nvec4 BRDF_Specular_GGX(vec4 specularColor, vec3 N, vec3 L, vec3 V, float roughness) {\n\tfloat alpha = pow2( roughness );\n\tvec3 H = normalize(L + V);\n\tfloat dotNL = saturate( dot(N, L) );\n\tfloat dotNV = saturate( dot(N, V) );\n\tfloat dotNH = saturate( dot(N, H) );\n\tfloat dotLH = saturate( dot(L, H) );\n\tvec4 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * G * D;\n}\nvec4 BRDF_Specular_GGX_Environment( const in vec3 N, const in vec3 V, const in vec4 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( N, V ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}",bumpMap_pars_frag:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd(vec2 uv) {\n\t\tvec2 dSTdx = dFdx( uv );\n\t\tvec2 dSTdy = dFdy( uv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, uv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, uv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, uv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",clippingPlanes_frag:"#ifdef NUM_CLIPPING_PLANES\n    vec4 plane;\n    for ( int i = 0; i < NUM_CLIPPING_PLANES; i ++ ) {\n        plane = clippingPlanes[ i ];\n        if ( dot( -v_modelPos, plane.xyz ) > plane.w ) discard;\n    }\n#endif",clippingPlanes_pars_frag:"#ifdef NUM_CLIPPING_PLANES\n    uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",color_frag:"#ifdef USE_VCOLOR\n    outColor *= v_Color;\n#endif",color_pars_frag:"#ifdef USE_VCOLOR\n    varying vec4 v_Color;\n#endif",color_pars_vert:"#ifdef USE_VCOLOR\n    attribute vec4 a_Color;\n    varying vec4 v_Color;\n#endif",color_vert:"#ifdef USE_VCOLOR\n    v_Color = a_Color;\n#endif",common_frag:"uniform mat4 u_View;\nuniform float u_Opacity;\nuniform vec3 u_Color;\nuniform vec3 u_CameraPosition;",common_vert:"attribute vec3 a_Position;\nattribute vec3 a_Normal;\n#include <transpose>\n#include <inverse>\nuniform mat4 u_Projection;\nuniform mat4 u_View;\nuniform mat4 u_Model;\nuniform vec3 u_CameraPosition;",diffuseMap_frag:"#ifdef USE_DIFFUSE_MAP\n    vec4 texelColor = texture2D( texture, v_Uv );\n    texelColor = mapTexelToLinear( texelColor );\n    outColor *= texelColor;\n#endif",diffuseMap_pars_frag:"#ifdef USE_DIFFUSE_MAP\n    uniform sampler2D texture;\n#endif",directlight_pars_frag:"struct DirectLight\n{\n    vec3 direction;\n    vec4 color;\n    float intensity;\n    int shadow;\n    float shadowBias;\n    float shadowRadius;\n    vec2 shadowMapSize;\n};\nuniform DirectLight u_Directional[USE_DIRECT_LIGHT];",emissiveMap_frag:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D(emissiveMap, v_Uv);\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissiveMap_pars_frag:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_frag:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_frag:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",end_frag:"gl_FragColor = outColor;",envMap_frag:"#ifdef USE_ENV_MAP\n    vec3 envDir;\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        envDir = reflect(normalize(v_worldPos - u_CameraPosition), N);\n    #else\n        envDir = v_EnvPos;\n    #endif\n    vec4 envColor = textureCube(envMap, envDir);\n    envColor = envMapTexelToLinear( envColor );\n    #ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutColor = mix(outColor, envColor * outColor, u_EnvMap_Intensity);\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutColor = mix(outColor, envColor, u_EnvMap_Intensity);\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutColor += envColor * u_EnvMap_Intensity;\n\t#endif\n#endif",envMap_pars_frag:"#ifdef USE_ENV_MAP\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        varying vec3 v_worldPos;\n    #else\n        varying vec3 v_EnvPos;\n    #endif\n    uniform samplerCube envMap;\n    uniform float u_EnvMap_Intensity;\n#endif",envMap_pars_vert:"#ifdef USE_ENV_MAP\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        varying vec3 v_worldPos;\n    #else\n        varying vec3 v_EnvPos;\n    #endif\n#endif",envMap_vert:"#ifdef USE_ENV_MAP\n    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n        v_worldPos = (u_Model * vec4(transformed, 1.0)).xyz;\n    #else\n        v_EnvPos = reflect(normalize((u_Model * vec4(transformed, 1.0)).xyz - u_CameraPosition), (transpose(inverse(u_Model)) * vec4(objectNormal, 1.0)).xyz);\n    #endif\n#endif",fog_frag:"#ifdef USE_FOG\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\n    #ifdef USE_EXP2_FOG\n        float fogFactor = whiteCompliment( exp2( - u_FogDensity * u_FogDensity * depth * depth * LOG2 ) );\n    #else\n        float fogFactor = smoothstep( u_FogNear, u_FogFar, depth );\n    #endif\n    gl_FragColor.rgb = mix( gl_FragColor.rgb, u_FogColor, fogFactor );\n#endif",fog_pars_frag:"#ifdef USE_FOG\n    uniform vec3 u_FogColor;\n    #ifdef USE_EXP2_FOG\n        uniform float u_FogDensity;\n    #else\n        uniform float u_FogNear;\n        uniform float u_FogFar;\n    #endif\n#endif",inverse:"mat4 inverse(mat4 m) {\n    float\n    a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\n    a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\n    a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\n    a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\n    b00 = a00 * a11 - a01 * a10,\n    b01 = a00 * a12 - a02 * a10,\n    b02 = a00 * a13 - a03 * a10,\n    b03 = a01 * a12 - a02 * a11,\n    b04 = a01 * a13 - a03 * a11,\n    b05 = a02 * a13 - a03 * a12,\n    b06 = a20 * a31 - a21 * a30,\n    b07 = a20 * a32 - a22 * a30,\n    b08 = a20 * a33 - a23 * a30,\n    b09 = a21 * a32 - a22 * a31,\n    b10 = a21 * a33 - a23 * a31,\n    b11 = a22 * a33 - a23 * a32,\n    det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    return mat4(\n        a11 * b11 - a12 * b10 + a13 * b09,\n        a02 * b10 - a01 * b11 - a03 * b09,\n        a31 * b05 - a32 * b04 + a33 * b03,\n        a22 * b04 - a21 * b05 - a23 * b03,\n        a12 * b08 - a10 * b11 - a13 * b07,\n        a00 * b11 - a02 * b08 + a03 * b07,\n        a32 * b02 - a30 * b05 - a33 * b01,\n        a20 * b05 - a22 * b02 + a23 * b01,\n        a10 * b10 - a11 * b08 + a13 * b06,\n        a01 * b08 - a00 * b10 - a03 * b06,\n        a30 * b04 - a31 * b02 + a33 * b00,\n        a21 * b02 - a20 * b04 - a23 * b00,\n        a11 * b07 - a10 * b09 - a12 * b06,\n        a00 * b09 - a01 * b07 + a02 * b06,\n        a31 * b01 - a30 * b03 - a32 * b00,\n        a20 * b03 - a21 * b01 + a22 * b00) / det;\n}",light_frag:"#ifdef USE_LIGHT\n    vec4 light;\n    vec3 L;\n    vec4 totalReflect = vec4(0., 0., 0., 0.);    vec4 indirectIrradiance = vec4(0., 0., 0., 0.);    vec4 indirectRadiance = vec4(0., 0., 0., 0.);\n    #ifdef USE_PBR\n        vec4 diffuseColor = outColor.xyzw * (1.0 - metalnessFactor);\n        vec4 specularColor = mix(vec4(0.04), outColor.xyzw, metalnessFactor);\n        float roughness = clamp(roughnessFactor, 0.04, 1.0);\n    #else\n        vec4 diffuseColor = outColor.xyzw;\n        #ifdef USE_PHONG\n            vec4 specularColor = u_SpecularColor;\n            float shininess = u_Specular;\n        #endif\n    #endif\n    #ifdef USE_AMBIENT_LIGHT\n        #ifdef USE_PBR\n            indirectIrradiance += PI * diffuseColor * u_AmbientLightColor;\n        #else\n            indirectIrradiance += diffuseColor * u_AmbientLightColor;\n        #endif\n    #endif\n    #ifdef USE_PBR\n        #ifdef USE_ENV_MAP\n    \t\tvec3 envDir;\n    \t    #if defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP)\n    \t        envDir = reflect(normalize(v_worldPos - u_CameraPosition), N);\n    \t    #else\n    \t        envDir = v_EnvPos;\n    \t    #endif\n            indirectIrradiance += getLightProbeIndirectIrradiance(8, envDir);\n            indirectRadiance += getLightProbeIndirectRadiance(GGXRoughnessToBlinnExponent(roughness), 8, envDir);\n    \t#endif\n    #endif\n    #if (defined(USE_PHONG) || defined(USE_PBR))\n        vec3 V = normalize( u_CameraPosition - v_modelPos );\n    #endif\n    #ifdef USE_DIRECT_LIGHT\n    for(int i = 0; i < USE_DIRECT_LIGHT; i++) {\n        L = -u_Directional[i].direction;\n        light = u_Directional[i].color * u_Directional[i].intensity;\n        L = normalize(L);\n        float dotNL = saturate( dot(N, L) );\n        vec4 irradiance = light * dotNL;\n        #ifdef USE_SHADOW\n            irradiance *= bool( u_Directional[i].shadow ) ? getShadow( directionalShadowMap[ i ], vDirectionalShadowCoord[ i ], u_Directional[i].shadowBias, u_Directional[i].shadowRadius, u_Directional[i].shadowMapSize ) : 1.0;\n        #endif\n        #ifdef USE_PBR\n            irradiance *= PI;\n        #endif\n        vec4 reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\n        #ifdef USE_PHONG\n            reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\n        #endif\n        #ifdef USE_PBR\n            reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\n        #endif\n        totalReflect += reflectLight;\n    }\n    #endif\n    #ifdef USE_POINT_LIGHT\n    for(int i = 0; i < USE_POINT_LIGHT; i++) {\n        L = u_Point[i].position - v_modelPos;\n        float dist = pow(clamp(1. - length(L) / u_Point[i].distance, 0.0, 1.0), u_Point[i].decay);\n        light = u_Point[i].color * u_Point[i].intensity * dist;\n        L = normalize(L);\n        float dotNL = saturate( dot(N, L) );\n        vec4 irradiance = light * dotNL;\n        #ifdef USE_PBR\n            irradiance *= PI;\n        #endif\n        #ifdef USE_SHADOW\n            vec3 worldV = v_modelPos - u_Point[i].position;\n            irradiance *= bool( u_Point[i].shadow ) ? getPointShadow( pointShadowMap[ i ], worldV, u_Point[i].shadowBias, u_Point[i].shadowRadius, u_Point[i].shadowMapSize, u_Point[i].shadowCameraNear, u_Point[i].shadowCameraFar ) : 1.0;\n        #endif\n        vec4 reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\n        #ifdef USE_PHONG\n            reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\n        #endif\n        #ifdef USE_PBR\n            reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\n        #endif\n        totalReflect += reflectLight;\n    }\n    #endif\n    #ifdef USE_SPOT_LIGHT\n    for(int i = 0; i < USE_SPOT_LIGHT; i++) {\n        L = u_Spot[i].position - v_modelPos;\n        float lightDistance = length(L);\n        L = normalize(L);\n        float angleCos = dot( L, -normalize(u_Spot[i].direction) );\n        if( all( bvec2(angleCos > u_Spot[i].coneCos, lightDistance < u_Spot[i].distance) ) ) {\n            float spotEffect = smoothstep( u_Spot[i].coneCos, u_Spot[i].penumbraCos, angleCos );\n            float dist = pow(clamp(1. - lightDistance / u_Spot[i].distance, 0.0, 1.0), u_Spot[i].decay);\n            light = u_Spot[i].color * u_Spot[i].intensity * dist * spotEffect;\n            float dotNL = saturate( dot(N, L) );\n            vec4 irradiance = light * dotNL;\n            #ifdef USE_PBR\n                irradiance *= PI;\n            #endif\n            #ifdef USE_SHADOW\n                irradiance *= bool( u_Spot[i].shadow ) ? getShadow( spotShadowMap[ i ], vSpotShadowCoord[ i ], u_Spot[i].shadowBias, u_Spot[i].shadowRadius, u_Spot[i].shadowMapSize ) : 1.0;\n            #endif\n            vec4 reflectLight = irradiance * BRDF_Diffuse_Lambert(diffuseColor);\n            #ifdef USE_PHONG\n                reflectLight += irradiance * BRDF_Specular_BlinnPhong(specularColor, N, L, V, shininess) * specularStrength;\n            #endif\n            #ifdef USE_PBR\n                reflectLight += irradiance * BRDF_Specular_GGX(specularColor, N, L, V, roughness) * specularStrength;\n            #endif\n            totalReflect += reflectLight;\n        }\n    }\n    #endif\n    vec4 indirectDiffuse = indirectIrradiance * BRDF_Diffuse_Lambert(diffuseColor);\n    vec4 indirectSpecular = vec4(0., 0., 0., 0.);\n    #if defined( USE_ENV_MAP ) && defined( USE_PBR )\n        indirectSpecular += indirectRadiance * BRDF_Specular_GGX_Environment(N, V, specularColor, roughness) * specularStrength;\n    #endif\n    #ifdef USE_AOMAP\n    \tfloat ambientOcclusion = ( texture2D( aoMap, v_Uv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n    \tindirectDiffuse *= ambientOcclusion;\n    \t#if defined( USE_ENV_MAP ) && defined( USE_PBR )\n    \t\tfloat dotNV = saturate( dot( N, V ) );\n    \t\tindirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, GGXRoughnessToBlinnExponent(roughness) );\n    \t#endif\n    #endif\n    outColor.xyz = totalReflect.xyz + indirectDiffuse.xyz + indirectSpecular.xyz;\n#endif",light_pars_frag:"#ifdef USE_AMBIENT_LIGHT\n    #include <ambientlight_pars_frag>\n#endif\n#ifdef USE_DIRECT_LIGHT\n    #include <directlight_pars_frag>\n#endif\n#ifdef USE_POINT_LIGHT\n    #include <pointlight_pars_frag>\n#endif\n#ifdef USE_SPOT_LIGHT\n    #include <spotlight_pars_frag>\n#endif\n#if defined(USE_PBR) && defined(USE_ENV_MAP)\n    vec4 getLightProbeIndirectIrradiance(const in int maxMIPLevel, const in vec3 envDir) {\n    \t#ifdef TEXTURE_LOD_EXT\n    \t\tvec4 envMapColor = textureCubeLodEXT( envMap, envDir, float( maxMIPLevel ) );\n    \t#else\n    \t\tvec4 envMapColor = textureCube( envMap, envDir, float( maxMIPLevel ) );\n    \t#endif\n        envMapColor = envMapTexelToLinear( envMapColor );\n        return PI * envMapColor * u_EnvMap_Intensity;\n    }\n    float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n    \tfloat maxMIPLevelScalar = float( maxMIPLevel );\n    \tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n    \treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n    }\n    vec4 getLightProbeIndirectRadiance(const in float blinnShininessExponent, const in int maxMIPLevel, const in vec3 envDir) {\n        float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n        #ifdef TEXTURE_LOD_EXT\n    \t\tvec4 envMapColor = textureCubeLodEXT( envMap, envDir, specularMIPLevel );\n    \t#else\n    \t\tvec4 envMapColor = textureCube( envMap, envDir, specularMIPLevel );\n    \t#endif\n        envMapColor = envMapTexelToLinear( envMapColor );\n        return envMapColor * u_EnvMap_Intensity;\n    }\n    float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n    \treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n    }\n#endif",normalMap_pars_frag:"#include <tbn>\n#include <tsn>\nuniform sampler2D normalMap;",normal_frag:"#ifdef USE_NORMAL\n    #ifdef DOUBLE_SIDED\n    \tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n    #else\n    \tfloat flipNormal = 1.0;\n    #endif\n    #ifdef FLAT_SHADED\n    \tvec3 fdx = vec3( dFdx( v_modelPos.x ), dFdx( v_modelPos.y ), dFdx( v_modelPos.z ) );\n    \tvec3 fdy = vec3( dFdy( v_modelPos.x ), dFdy( v_modelPos.y ), dFdy( v_modelPos.z ) );\n    \tvec3 N = normalize( cross( fdx, fdy ) );\n    #else\n        vec3 N = normalize(v_Normal) * flipNormal;\n    #endif\n    #ifdef USE_NORMAL_MAP\n        vec3 normalMapColor = texture2D(normalMap, v_Uv).rgb;\n        mat3 tspace = tsn(N, -v_modelPos, vec2(v_Uv.x, 1.0 - v_Uv.y));\n        N = normalize(tspace * (normalMapColor * 2.0 - 1.0));\n    #elif defined(USE_BUMPMAP)\n        N = perturbNormalArb(-v_modelPos, N, dHdxy_fwd(v_Uv));\n    #endif\n#endif",normal_pars_frag:"#ifdef USE_NORMAL\n    varying vec3 v_Normal;\n#endif",normal_pars_vert:"#ifdef USE_NORMAL\n    varying vec3 v_Normal;\n#endif",normal_vert:"#ifdef USE_NORMAL\n    v_Normal = (transpose(inverse(u_Model)) * vec4(objectNormal, 1.0)).xyz;\n    #ifdef FLIP_SIDED\n    \tv_Normal = - v_Normal;\n    #endif\n#endif",packing:"const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n    vec4 r = vec4( fract( v * PackFactors ), v );\n    r.yzw -= r.xyz * ShiftRight8;    return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n    return dot( v, UnpackFactors );\n}",pointlight_pars_frag:"struct PointLight\n{\n    vec3 position;\n    vec4 color;\n    float intensity;\n    float distance;\n    float decay;\n    int shadow;\n    float shadowBias;\n    float shadowRadius;\n    vec2 shadowMapSize;\n    float shadowCameraNear;\n    float shadowCameraFar;\n};\nuniform PointLight u_Point[USE_POINT_LIGHT];",premultipliedAlpha_frag:"#ifdef USE_PREMULTIPLIED_ALPHA\n    gl_FragColor.rgb = gl_FragColor.rgb * gl_FragColor.a;\n#endif",pvm_vert:"gl_Position = u_Projection * u_View * u_Model * vec4(transformed, 1.0);",shadowMap_frag:"#ifdef USE_SHADOW\n#endif",shadowMap_pars_frag:"#ifdef USE_SHADOW\n    #include <packing>\n    #ifdef USE_DIRECT_LIGHT\n        uniform sampler2D directionalShadowMap[ USE_DIRECT_LIGHT ];\n        varying vec4 vDirectionalShadowCoord[ USE_DIRECT_LIGHT ];\n    #endif\n    #ifdef USE_POINT_LIGHT\n        uniform samplerCube pointShadowMap[ USE_POINT_LIGHT ];\n    #endif\n    #ifdef USE_SPOT_LIGHT\n        uniform sampler2D spotShadowMap[ USE_SPOT_LIGHT ];\n        varying vec4 vSpotShadowCoord[ USE_SPOT_LIGHT ];\n    #endif\n    float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n        return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n    }\n    float textureCubeCompare( samplerCube depths, vec3 uv, float compare ) {\n        return step( compare, unpackRGBAToDepth( textureCube( depths, uv ) ) );\n    }\n    float getShadow( sampler2D shadowMap, vec4 shadowCoord, float shadowBias, float shadowRadius, vec2 shadowMapSize ) {\n        shadowCoord.xyz /= shadowCoord.w;\n        float depth = shadowCoord.z + shadowBias;\n        bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n        bool inFrustum = all( inFrustumVec );\n        bvec2 frustumTestVec = bvec2( inFrustum, depth <= 1.0 );\n        bool frustumTest = all( frustumTestVec );\n        if ( frustumTest ) {\n            #ifdef USE_PCF_SOFT_SHADOW\n                float texelSize = shadowRadius / shadowMapSize.x;\n                vec2 poissonDisk[4];\n                poissonDisk[0] = vec2(-0.94201624, -0.39906216);\n                poissonDisk[1] = vec2(0.94558609, -0.76890725);\n                poissonDisk[2] = vec2(-0.094184101, -0.92938870);\n                poissonDisk[3] = vec2(0.34495938, 0.29387760);\n                return texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[0] * texelSize, depth ) * 0.25 +\n                    texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[1] * texelSize, depth ) * 0.25 +\n                    texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[2] * texelSize, depth ) * 0.25 +\n                    texture2DCompare( shadowMap, shadowCoord.xy + poissonDisk[3] * texelSize, depth ) * 0.25;\n            #else\n                return texture2DCompare( shadowMap, shadowCoord.xy, depth );\n            #endif\n        }\n        return 1.0;\n    }\n    float getPointShadow( samplerCube shadowMap, vec3 V, float shadowBias, float shadowRadius, vec2 shadowMapSize, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat depth = ( length( V ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdepth += shadowBias;\n        #ifdef USE_PCF_SOFT_SHADOW\n            float texelSize = shadowRadius / shadowMapSize.x;\n            vec3 poissonDisk[4];\n    \t\tpoissonDisk[0] = vec3(-1.0, 1.0, -1.0);\n    \t\tpoissonDisk[1] = vec3(1.0, -1.0, -1.0);\n    \t\tpoissonDisk[2] = vec3(-1.0, -1.0, -1.0);\n    \t\tpoissonDisk[3] = vec3(1.0, -1.0, 1.0);\n            return textureCubeCompare( shadowMap, normalize(V) + poissonDisk[0] * texelSize, depth ) * 0.25 +\n                textureCubeCompare( shadowMap, normalize(V) + poissonDisk[1] * texelSize, depth ) * 0.25 +\n                textureCubeCompare( shadowMap, normalize(V) + poissonDisk[2] * texelSize, depth ) * 0.25 +\n                textureCubeCompare( shadowMap, normalize(V) + poissonDisk[3] * texelSize, depth ) * 0.25;\n        #else\n            return textureCubeCompare( shadowMap, normalize(V), depth);\n        #endif\n    }\n#endif",shadowMap_pars_vert:"#ifdef USE_SHADOW\n    #ifdef USE_DIRECT_LIGHT\n        uniform mat4 directionalShadowMatrix[ USE_DIRECT_LIGHT ];\n        varying vec4 vDirectionalShadowCoord[ USE_DIRECT_LIGHT ];\n    #endif\n    #ifdef USE_POINT_LIGHT\n    #endif\n    #ifdef USE_SPOT_LIGHT\n        uniform mat4 spotShadowMatrix[ USE_SPOT_LIGHT ];\n        varying vec4 vSpotShadowCoord[ USE_SPOT_LIGHT ];\n    #endif\n#endif",shadowMap_vert:"#ifdef USE_SHADOW\n    vec4 worldPosition = u_Model * vec4(transformed, 1.0);\n    #ifdef USE_DIRECT_LIGHT\n        for ( int i = 0; i < USE_DIRECT_LIGHT; i ++ ) {\n            vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n        }\n    #endif\n    #ifdef USE_POINT_LIGHT\n    #endif\n    #ifdef USE_SPOT_LIGHT\n        for ( int i = 0; i < USE_SPOT_LIGHT; i ++ ) {\n            vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n        }\n    #endif\n#endif",skinning_pars_vert:"#ifdef USE_SKINNING\n    attribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n    #ifdef BONE_TEXTURE\n        uniform sampler2D boneTexture;\n        uniform int boneTextureSize;\n        mat4 getBoneMatrix( const in float i ) {\n            float j = i * 4.0;\n            float x = mod( j, float( boneTextureSize ) );\n            float y = floor( j / float( boneTextureSize ) );\n            float dx = 1.0 / float( boneTextureSize );\n            float dy = 1.0 / float( boneTextureSize );\n            y = dy * ( y + 0.5 );\n            vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n            vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n            vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n            vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n            mat4 bone = mat4( v1, v2, v3, v4 );\n            return bone;\n        }\n    #else\n        uniform mat4 boneMatrices[MAX_BONES];\n        mat4 getBoneMatrix(const in float i) {\n            mat4 bone = boneMatrices[int(i)];\n            return bone;\n        }\n    #endif\n#endif",skinning_vert:"#ifdef USE_SKINNING\n    mat4 boneMatX = getBoneMatrix( skinIndex.x );\n    mat4 boneMatY = getBoneMatrix( skinIndex.y );\n    mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n    mat4 boneMatW = getBoneMatrix( skinIndex.w );\n    vec4 skinVertex = vec4(transformed, 1.0);\n    vec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n    transformed = vec3(skinned.xyz / skinned.w);\n    #if defined(USE_NORMAL) || defined(USE_ENV_MAP)\n        mat4 skinMatrix = mat4( 0.0 );\n        skinMatrix += skinWeight.x * boneMatX;\n        skinMatrix += skinWeight.y * boneMatY;\n        skinMatrix += skinWeight.z * boneMatZ;\n        skinMatrix += skinWeight.w * boneMatW;\n        objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n    #endif\n#endif",specularMap_frag:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, v_Uv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularMap_pars_frag:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",spotlight_pars_frag:"struct SpotLight\n{\n    vec3 position;\n    vec4 color;\n    float intensity;\n    float distance;\n    float decay;\n    float coneCos;\n    float penumbraCos;\n    vec3 direction;\n    int shadow;\n    float shadowBias;\n    float shadowRadius;\n    vec2 shadowMapSize;\n};\nuniform SpotLight u_Spot[USE_SPOT_LIGHT];",tbn:"mat3 tbn(vec3 N, vec3 p, vec2 uv) {\n    vec3 dp1 = dFdx(p.xyz);\n    vec3 dp2 = dFdy(p.xyz);\n    vec2 duv1 = dFdx(uv.st);\n    vec2 duv2 = dFdy(uv.st);\n    vec3 dp2perp = cross(dp2, N);\n    vec3 dp1perp = cross(N, dp1);\n    vec3 T = dp2perp * duv1.x + dp1perp * duv2.x;\n    vec3 B = dp2perp * duv1.y + dp1perp * duv2.y;\n    float invmax = 1.0 / sqrt(max(dot(T,T), dot(B,B)));\n    return mat3(T * invmax, B * invmax, N);\n}",transpose:"mat4 transpose(mat4 inMatrix) {\n    vec4 i0 = inMatrix[0];\n    vec4 i1 = inMatrix[1];\n    vec4 i2 = inMatrix[2];\n    vec4 i3 = inMatrix[3];\n    mat4 outMatrix = mat4(\n        vec4(i0.x, i1.x, i2.x, i3.x),\n        vec4(i0.y, i1.y, i2.y, i3.y),\n        vec4(i0.z, i1.z, i2.z, i3.z),\n        vec4(i0.w, i1.w, i2.w, i3.w)\n    );\n    return outMatrix;\n}",tsn:"mat3 tsn(vec3 N, vec3 V, vec2 uv) {\n    vec3 q0 = dFdx( V.xyz );\n    vec3 q1 = dFdy( V.xyz );\n    vec2 st0 = dFdx( uv.st );\n    vec2 st1 = dFdy( uv.st );\n    vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n    vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n    mat3 tsn = mat3( S, T, N );\n    return tsn;\n}",uv_pars_frag:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\n    varying vec2 v_Uv;\n#endif\n#ifdef USE_AOMAP\n    varying vec2 v_Uv2;\n#endif",uv_pars_vert:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\n    attribute vec2 a_Uv;\n    varying vec2 v_Uv;\n    uniform mat3 uvTransform;\n#endif\n#ifdef USE_AOMAP\n    attribute vec2 a_Uv2;\n    varying vec2 v_Uv2;\n#endif\n",uv_vert:"#if defined(USE_DIFFUSE_MAP) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(USE_SPECULARMAP) || defined(USE_EMISSIVEMAP) || defined(USE_ROUGHNESSMAP) || defined(USE_METALNESSMAP)\n    v_Uv = (uvTransform * vec3(a_Uv, 1)).xy;\n#endif\n#ifdef USE_AOMAP\n    v_Uv2 = a_Uv2;\n#endif",viewModelPos_pars_frag:"#if defined(USE_POINT_LIGHT) || defined(USE_SPOT_LIGHT) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR) || defined(NUM_CLIPPING_PLANES) \n    varying vec3 v_modelPos;\n#endif",viewModelPos_pars_vert:"#if defined(USE_POINT_LIGHT) || defined(USE_SPOT_LIGHT) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR)|| defined(NUM_CLIPPING_PLANES)\n    varying vec3 v_modelPos;\n#endif",viewModelPos_vert:"#if defined(USE_POINT_LIGHT) || defined(USE_SPOT_LIGHT) || defined(USE_NORMAL_MAP) || defined(USE_BUMPMAP) || defined(FLAT_SHADED) || defined(USE_PHONG) || defined(USE_PBR) || defined(NUM_CLIPPING_PLANES)\n    v_modelPos = (u_Model * vec4(transformed, 1.0)).xyz;\n#endif"},zen3d.ShaderLib={basic_frag:"#include <common_frag>\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <fog_pars_frag>\nvoid main() {\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphaTest_frag>\n    #include <envMap_frag>\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",basic_vert:"#include <common_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <envMap_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <envMap_vert>\n}",canvas2d_frag:"#include <common_frag>\nvarying vec2 v_Uv;\nuniform sampler2D spriteTexture;\nvoid main() {\n    #include <begin_frag>\n    outColor *= texture2D(spriteTexture, v_Uv);\n    #include <end_frag>\n    #include <premultipliedAlpha_frag>\n}",canvas2d_vert:"#include <common_vert>\nattribute vec2 a_Uv;\nvarying vec2 v_Uv;\nvoid main() {\n    #include <begin_vert>\n    #include <pvm_vert>\n    v_Uv = a_Uv;\n}",cube_frag:"#include <common_frag>\nuniform samplerCube cubeMap;\nvarying vec3 v_ModelPos;\nvoid main() {\n    #include <begin_frag>\n    outColor *= textureCube(cubeMap, v_ModelPos);\n    #include <end_frag>\n}",cube_vert:"#include <common_vert>\nvarying vec3 v_ModelPos;\nvoid main() {\n    #include <begin_vert>\n    #include <pvm_vert>\n    v_ModelPos = (u_Model * vec4(transformed, 1.0)).xyz;\n}",depth_frag:"#include <common_frag>\n#include <diffuseMap_pars_frag>\n#include <uv_pars_frag>\n#include <packing>\nvoid main() {\n    #if defined(USE_DIFFUSE_MAP) && defined(ALPHATEST)\n        vec4 texelColor = texture2D( texture, v_Uv );\n        float alpha = texelColor.a * u_Opacity;\n        if(alpha < ALPHATEST) discard;\n    #endif\n    \n    #ifdef DEPTH_PACKING_RGBA\n        gl_FragColor = packDepthToRGBA(gl_FragCoord.z);\n    #else\n        gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), u_Opacity );\n    #endif\n}",depth_vert:"#include <common_vert>\n#include <skinning_pars_vert>\n#include <uv_pars_vert>\nvoid main() {\n    #include <uv_vert>\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n}",distance_frag:"#include <common_frag>\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 v_ModelPos;\n#include <packing>\nvoid main() {\n    float dist = length( v_ModelPos - u_CameraPosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n    gl_FragColor = packDepthToRGBA(dist);\n}",distance_vert:"#include <common_vert>\nvarying vec3 v_ModelPos;\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    v_ModelPos = (u_Model * vec4(transformed, 1.0)).xyz;\n}",lambert_frag:"#include <common_frag>\nuniform vec3 emissive;\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <normalMap_pars_frag>\n#include <bumpMap_pars_frag>\n#include <light_pars_frag>\n#include <normal_pars_frag>\n#include <viewModelPos_pars_frag>\n#include <bsdfs>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <shadowMap_pars_frag>\n#include <fog_pars_frag>\n#include <emissiveMap_pars_frag>\n#include <clippingPlanes_pars_frag>\nvoid main() {\n    #include <clippingPlanes_frag>\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphaTest_frag>\n    #include <normal_frag>\n    #include <light_frag>\n    #include <envMap_frag>\n    #include <shadowMap_frag>\n    vec3 totalEmissiveRadiance = emissive;\n    #include <emissiveMap_frag>\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",lambert_vert:"#include <common_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <viewModelPos_pars_vert>\n#include <envMap_pars_vert>\n#include <shadowMap_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <normal_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <viewModelPos_vert>\n    #include <envMap_vert>\n    #include <shadowMap_vert>\n}",linedashed_frag:"#include <common_frag>\n#include <fog_pars_frag>\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\nvoid main() {\n    if ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n    #include <begin_frag>\n    #include <end_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",linedashed_vert:"#include <common_vert>\nuniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\nvoid main() {\n    vLineDistance = scale * lineDistance;\n    vec3 transformed = vec3(a_Position);\n    #include <pvm_vert>\n}",normaldepth_frag:"#include <common_frag>\n#include <diffuseMap_pars_frag>\n#include <uv_pars_frag>\n#define USE_NORMAL\n#include <packing>\n#include <normal_pars_frag>\nvoid main() {\n    #if defined(USE_DIFFUSE_MAP) && defined(ALPHATEST)\n        vec4 texelColor = texture2D( texture, v_Uv );\n        float alpha = texelColor.a * u_Opacity;\n        if(alpha < ALPHATEST) discard;\n    #endif\n    vec4 packedNormalDepth;\n    packedNormalDepth.xyz = normalize(v_Normal) * 0.5 + 0.5;\n    packedNormalDepth.w = gl_FragCoord.z;\n    gl_FragColor = packedNormalDepth;\n}",normaldepth_vert:"#include <common_vert>\n#define USE_NORMAL\n#include <skinning_pars_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\nvoid main() {\n    #include <uv_vert>\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <normal_vert>\n    #include <pvm_vert>\n}",particle_frag:"float scaleLinear(float value, vec2 valueDomain) {\n    return (value - valueDomain.x) / (valueDomain.y - valueDomain.x);\n}\nfloat scaleLinear(float value, vec2 valueDomain, vec2 valueRange) {\n    return mix(valueRange.x, valueRange.y, scaleLinear(value, valueDomain));\n}\nvarying vec4 vColor;\nvarying float lifeLeft;\nuniform sampler2D tSprite;\nvoid main() {\n    float alpha = 0.;\n    if( lifeLeft > .995 ) {\n        alpha = scaleLinear( lifeLeft, vec2(1., .995), vec2(0., 1.));\n    } else {\n        alpha = lifeLeft * .75;\n    }\n    vec4 tex = texture2D( tSprite, gl_PointCoord );\n    gl_FragColor = vec4( vColor.rgb * tex.a, alpha * tex.a );\n}",particle_vert:"const vec4 bitSh = vec4(256. * 256. * 256., 256. * 256., 256., 1.);\nconst vec4 bitMsk = vec4(0.,vec3(1./256.0));\nconst vec4 bitShifts = vec4(1.) / bitSh;\n#define FLOAT_MAX\t1.70141184e38\n#define FLOAT_MIN\t1.17549435e-38\nlowp vec4 encode_float(highp float v) {\n    highp float av = abs(v);\n    if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n        return vec4(127.0, 128.0, 0.0, 0.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n        return vec4(255.0, 128.0, 0.0, 0.0) / 255.0;\n    }\n    highp vec4 c = vec4(0,0,0,0);\n    highp float e = floor(log2(av));\n    highp float m = av * pow(2.0, -e) - 1.0;\n    c[1] = floor(128.0 * m);\n    m -= c[1] / 128.0;\n    c[2] = floor(32768.0 * m);\n    m -= c[2] / 32768.0;\n    c[3] = floor(8388608.0 * m);\n    highp float ebias = e + 127.0;\n    c[0] = floor(ebias / 2.0);\n    ebias -= c[0] * 2.0;\n    c[1] += floor(ebias) * 128.0;\n    c[0] += 128.0 * step(0.0, -v);\n    return c / 255.0;\n}\nvec4 pack(const in float depth)\n{\n    const vec4 bit_shift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\n    const vec4 bit_mask\t= vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\n    vec4 res = mod(depth*bit_shift*vec4(255), vec4(256))/vec4(255);\n    res -= res.xxyz * bit_mask;\n    return res;\n}\nfloat unpack(const in vec4 rgba_depth)\n{\n    const vec4 bit_shift = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\n    float depth = dot(rgba_depth, bit_shift);\n    return depth;\n}\nuniform float uTime;\nuniform float uScale;\nuniform sampler2D tNoise;\nuniform mat4 u_Projection;\nuniform mat4 u_View;\nuniform mat4 u_Model;\nattribute vec4 particlePositionsStartTime;\nattribute vec4 particleVelColSizeLife;\nvarying vec4 vColor;\nvarying float lifeLeft;\nvoid main() {\n    vColor = encode_float( particleVelColSizeLife.y );\n    vec4 velTurb = encode_float( particleVelColSizeLife.x );\n    vec3 velocity = vec3( velTurb.xyz );\n    float turbulence = velTurb.w;\n    vec3 newPosition;\n    float timeElapsed = uTime - particlePositionsStartTime.a;\n    lifeLeft = 1. - (timeElapsed / particleVelColSizeLife.w);\n    gl_PointSize = ( uScale * particleVelColSizeLife.z ) * lifeLeft;\n    velocity.x = ( velocity.x - .5 ) * 3.;\n    velocity.y = ( velocity.y - .5 ) * 3.;\n    velocity.z = ( velocity.z - .5 ) * 3.;\n    newPosition = particlePositionsStartTime.xyz + ( velocity * 10. ) * ( uTime - particlePositionsStartTime.a );\n    vec3 noise = texture2D( tNoise, vec2( newPosition.x * .015 + (uTime * .05), newPosition.y * .02 + (uTime * .015) )).rgb;\n    vec3 noiseVel = ( noise.rgb - .5 ) * 30.;\n    newPosition = mix(newPosition, newPosition + vec3(noiseVel * ( turbulence * 5. ) ), (timeElapsed / particleVelColSizeLife.a) );\n    if( velocity.y > 0. && velocity.y < .05 ) {\n        lifeLeft = 0.;\n    }\n    if( velocity.x < -1.45 ) {\n        lifeLeft = 0.;\n    }\n    if( timeElapsed > 0. ) {\n        gl_Position = u_Projection * u_View * u_Model * vec4( newPosition, 1.0 );\n    } else {\n        gl_Position = u_Projection * u_View * u_Model * vec4( particlePositionsStartTime.xyz, 1.0 );\n        lifeLeft = 0.;\n        gl_PointSize = 0.;\n    }\n}",pbr_frag:"#include <common_frag>\nuniform float u_Metalness;\n#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif\nuniform float u_Roughness;\n#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif\nuniform vec3 emissive;\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <normalMap_pars_frag>\n#include <bumpMap_pars_frag>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <light_pars_frag>\n#include <normal_pars_frag>\n#include <viewModelPos_pars_frag>\n#include <bsdfs>\n#include <shadowMap_pars_frag>\n#include <fog_pars_frag>\n#include <emissiveMap_pars_frag>\n#include <clippingPlanes_pars_frag>\nvoid main() {\n    #include <clippingPlanes_frag>\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphaTest_frag>\n    #include <normal_frag>\n    #include <specularMap_frag>\n    float roughnessFactor = u_Roughness;\n    #ifdef USE_ROUGHNESSMAP\n    \tvec4 texelRoughness = texture2D( roughnessMap, v_Uv );\n    \troughnessFactor *= texelRoughness.g;\n    #endif\n    float metalnessFactor = u_Metalness;\n    #ifdef USE_METALNESSMAP\n    \tvec4 texelMetalness = texture2D( metalnessMap, v_Uv );\n    \tmetalnessFactor *= texelMetalness.b;\n    #endif\n    #include <light_frag>\n    #include <shadowMap_frag>\n    vec3 totalEmissiveRadiance = emissive;\n    #include <emissiveMap_frag>\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",pbr_vert:"#include <common_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <viewModelPos_pars_vert>\n#include <envMap_pars_vert>\n#include <shadowMap_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <normal_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <viewModelPos_vert>\n    #include <envMap_vert>\n    #include <shadowMap_vert>\n}",phong_frag:"#include <common_frag>\nuniform float u_Specular;\nuniform vec4 u_SpecularColor;\n#include <specularMap_pars_frag>\nuniform vec3 emissive;\n#include <uv_pars_frag>\n#include <color_pars_frag>\n#include <diffuseMap_pars_frag>\n#include <normalMap_pars_frag>\n#include <bumpMap_pars_frag>\n#include <light_pars_frag>\n#include <normal_pars_frag>\n#include <viewModelPos_pars_frag>\n#include <bsdfs>\n#include <envMap_pars_frag>\n#include <aoMap_pars_frag>\n#include <shadowMap_pars_frag>\n#include <fog_pars_frag>\n#include <emissiveMap_pars_frag>\n#include <clippingPlanes_pars_frag>\nvoid main() {\n    #include <clippingPlanes_frag>\n    #include <begin_frag>\n    #include <color_frag>\n    #include <diffuseMap_frag>\n    #include <alphaTest_frag>\n    #include <normal_frag>\n    #include <specularMap_frag>\n    #include <light_frag>\n    #include <envMap_frag>\n    #include <shadowMap_frag>\n    vec3 totalEmissiveRadiance = emissive;\n    #include <emissiveMap_frag>\n    outColor += vec4(totalEmissiveRadiance.rgb, 0.0);\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",phong_vert:"#include <common_vert>\n#include <normal_pars_vert>\n#include <uv_pars_vert>\n#include <color_pars_vert>\n#include <viewModelPos_pars_vert>\n#include <envMap_pars_vert>\n#include <shadowMap_pars_vert>\n#include <skinning_pars_vert>\nvoid main() {\n    #include <begin_vert>\n    #include <skinning_vert>\n    #include <pvm_vert>\n    #include <normal_vert>\n    #include <uv_vert>\n    #include <color_vert>\n    #include <viewModelPos_vert>\n    #include <envMap_vert>\n    #include <shadowMap_vert>\n}",point_frag:"#include <common_frag>\n#include <diffuseMap_pars_frag>\n#include <fog_pars_frag>\nvoid main() {\n    #include <begin_frag>\n    #ifdef USE_DIFFUSE_MAP\n        outColor *= texture2D(texture, vec2(gl_PointCoord.x, 1.0 - gl_PointCoord.y));\n    #endif\n    #include <end_frag>\n    #include <encodings_frag>\n    #include <premultipliedAlpha_frag>\n    #include <fog_frag>\n}",point_vert:"#include <common_vert>\nuniform float u_PointSize;\nuniform float u_PointScale;\nvoid main() {\n    #include <begin_vert>\n    #include <pvm_vert>\n    vec4 mvPosition = u_View * u_Model * vec4(transformed, 1.0);\n    #ifdef USE_SIZEATTENUATION\n        gl_PointSize = u_PointSize * ( u_PointScale / - mvPosition.z );\n    #else\n        gl_PointSize = u_PointSize;\n    #endif\n}",sprite_frag:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\n    vec4 texture = texture2D( map, vUV );\n    if ( texture.a < alphaTest ) discard;\n    gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n    if ( fogType > 0 ) {\n        float depth = gl_FragCoord.z / gl_FragCoord.w;\n        float fogFactor = 0.0;\n        if ( fogType == 1 ) {\n            fogFactor = smoothstep( fogNear, fogFar, depth );\n        } else {\n            \n            fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n            fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n        }\n        gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n    }\n}",sprite_vert:"uniform mat4 modelMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\n    vUV = uvOffset + uv * uvScale;\n    vec2 alignedPosition = position * scale;\n    vec2 rotatedPosition;\n    rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n    rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n    vec4 finalPosition;\n    finalPosition = viewMatrix * modelMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n    finalPosition.xy += rotatedPosition;\n    finalPosition = projectionMatrix * finalPosition;\n    gl_Position = finalPosition;\n}"},function(){var f=zen3d.MATERIAL_TYPE,i=zen3d.TEXEL_ENCODING_TYPE,_=zen3d.SHADOW_TYPE,v=zen3d.SHADING_TYPE,m=zen3d.FOG_TYPE,g=zen3d.DRAW_SIDE,E=zen3d.OBJECT_TYPE,d=zen3d.WebGLProgram,p=zen3d.ShaderChunk,y=zen3d.ShaderLib,l={};function T(e,t){var n;return e?e.encoding&&(n=e.encoding):n=i.LINEAR,n===i.LINEAR&&t&&(n=i.GAMMA),n}function x(e){switch(e){case i.LINEAR:return["Linear","( value )"];case i.SRGB:return["sRGB","( value )"];case i.RGBE:return["RGBE","( value )"];case i.RGBM7:return["RGBM","( value, 7.0 )"];case i.RGBM16:return["RGBM","( value, 16.0 )"];case i.RGBD:return["RGBD","( value, 256.0 )"];case i.GAMMA:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:console.error("unsupported encoding: "+e)}}function M(e,t){var n=x(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function S(e,t,n){var i,r,a,s=["precision "+t.precision+" float;","precision "+t.precision+" int;","#define SHADER_NAME "+t.materialType,n,0<t.pointLightNum?"#define USE_POINT_LIGHT "+t.pointLightNum:"",0<t.spotLightNum?"#define USE_SPOT_LIGHT "+t.spotLightNum:"",0<t.directLightNum?"#define USE_DIRECT_LIGHT "+t.directLightNum:"",0<t.ambientLightNum?"#define USE_AMBIENT_LIGHT "+t.ambientLightNum:"",0<t.pointLightNum||0<t.directLightNum||0<t.ambientLightNum||0<t.spotLightNum?"#define USE_LIGHT":"",0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum?"#define USE_NORMAL":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useNormalMap?"#define USE_NORMAL_MAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useBumpMap?"#define USE_BUMPMAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useSpecularMap?"#define USE_SPECULARMAP":"",t.useEmissiveMap?"#define USE_EMISSIVEMAP":"",t.useShadow?"#define USE_SHADOW":"",t.materialType==f.LAMBERT?"#define USE_LAMBERT":"",t.materialType==f.PHONG?"#define USE_PHONG":"",t.materialType==f.PBR?"#define USE_PBR":"",t.flipSided?"#define FLIP_SIDED":"",0<t.numClippingPlanes?"#define NUM_CLIPPING_PLANES "+t.numClippingPlanes:"",t.useDiffuseMap?"#define USE_DIFFUSE_MAP":"",t.useEnvMap?"#define USE_ENV_MAP":"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useAOMap?"#define USE_AOMAP":"",t.useVertexColors?"#define USE_VCOLOR":"",t.useSkinning?"#define USE_SKINNING":"",0<t.bonesNum?"#define MAX_BONES "+t.bonesNum:"",t.useVertexTexture?"#define BONE_TEXTURE":""].join("\n"),o=["#extension GL_OES_standard_derivatives : enable",t.useShaderTextureLOD&&t.useEnvMap?"#extension GL_EXT_shader_texture_lod : enable":"","precision "+t.precision+" float;","precision "+t.precision+" int;","#define SHADER_NAME "+t.materialType,"#define PI 3.14159265359","#define EPSILON 1e-6","float pow2( const in float x ) { return x*x; }","#define LOG2 1.442695","#define RECIPROCAL_PI 0.31830988618","#define saturate(a) clamp( a, 0.0, 1.0 )","#define whiteCompliment(a) ( 1.0 - saturate( a ) )",n,t.useRoughnessMap?"#define USE_ROUGHNESSMAP":"",t.useMetalnessMap?"#define USE_METALNESSMAP":"",0<t.pointLightNum?"#define USE_POINT_LIGHT "+t.pointLightNum:"",0<t.spotLightNum?"#define USE_SPOT_LIGHT "+t.spotLightNum:"",0<t.directLightNum?"#define USE_DIRECT_LIGHT "+t.directLightNum:"",0<t.ambientLightNum?"#define USE_AMBIENT_LIGHT "+t.ambientLightNum:"",0<t.pointLightNum||0<t.directLightNum||0<t.ambientLightNum||0<t.spotLightNum?"#define USE_LIGHT":"",0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum?"#define USE_NORMAL":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useNormalMap?"#define USE_NORMAL_MAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useBumpMap?"#define USE_BUMPMAP":"",(0<t.pointLightNum||0<t.directLightNum||0<t.spotLightNum)&&t.useSpecularMap?"#define USE_SPECULARMAP":"",t.useEmissiveMap?"#define USE_EMISSIVEMAP":"",t.useShadow?"#define USE_SHADOW":"",t.usePCFSoftShadow?"#define USE_PCF_SOFT_SHADOW":"",t.flatShading?"#define FLAT_SHADED":"",t.materialType==f.LAMBERT?"#define USE_LAMBERT":"",t.materialType==f.PHONG?"#define USE_PHONG":"",t.materialType==f.PBR?"#define USE_PBR":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.envMap&&t.useShaderTextureLOD?"#define TEXTURE_LOD_EXT":"",0<t.numClippingPlanes?"#define NUM_CLIPPING_PLANES "+t.numClippingPlanes:"",t.useDiffuseMap?"#define USE_DIFFUSE_MAP":"",t.useEnvMap?"#define USE_ENV_MAP":"",t.useAOMap?"#define USE_AOMAP":"",t.useVertexColors?"#define USE_VCOLOR":"",t.premultipliedAlpha?"#define USE_PREMULTIPLIED_ALPHA":"",t.fog?"#define USE_FOG":"",t.fogExp2?"#define USE_EXP2_FOG":"",t.alphaTest?"#define ALPHATEST "+t.alphaTest:"",t.useEnvMap?"#define "+t.envMapCombine:"","#define GAMMA_FACTOR "+t.gammaFactor,t.diffuseMapEncoding||t.envMapEncoding||t.emissiveMapEncoding||t.outputEncoding?p.encodings_pars_frag:"",t.diffuseMapEncoding?M("mapTexelToLinear",t.diffuseMapEncoding):"",t.envMapEncoding?M("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMapEncoding?M("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.outputEncoding?(i="linearToOutputTexel",r=t.outputEncoding,a=x(r),"vec4 "+i+"( vec4 value ) { return LinearTo"+a[0]+a[1]+"; }"):"",t.packDepthToRGBA?"#define DEPTH_PACKING_RGBA":""].join("\n"),u=y[t.materialType+"_vert"]||t.vertexShader||y.basic_vert,c=y[t.materialType+"_frag"]||t.fragmentShader||y.basic_frag,h=[s,u].join("\n"),l=[o,c].join("\n");return h=b(h),l=b(l),new d(e,h,l)}var b=function(e){return e.replace(/#include +<([\w\d.]+)>/g,function(e,t){var n=p[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return b(n)})};zen3d.getProgram=function(e,t,n,i,r){var a,s=e.gl,o=function(e,t,n,i,r,a,s){var o={};o.materialType=n.type;var u=e.capabilities;o.precision=u.maxPrecision,o.useShaderTextureLOD=!!u.shaderTextureLOD,o.useDiffuseMap=!!n.diffuseMap,o.useNormalMap=!!n.normalMap,o.useBumpMap=!!n.bumpMap,o.useSpecularMap=!!n.specularMap,o.useEnvMap=!!n.envMap,o.envMapCombine=n.envMapCombine,o.useEmissiveMap=!!n.emissiveMap,o.useRoughnessMap=!!n.roughnessMap,o.useMetalnessMap=!!n.metalnessMap,o.useAOMap=!!n.aoMap,o.ambientLightNum=r?r.ambientsNum:0,o.directLightNum=r?r.directsNum:0,o.pointLightNum=r?r.pointsNum:0,o.spotLightNum=r?r.spotsNum:0,o.useShadow=i.receiveShadow,o.usePCFSoftShadow=i.shadowType===_.PCF_SOFT;var c=e.state.currentRenderTarget;o.gammaFactor=t.gammaFactor,o.outputEncoding=T(c.texture||null,t.gammaOutput),o.diffuseMapEncoding=T(n.diffuseMap,t.gammaInput),o.envMapEncoding=T(n.envMap,t.gammaInput),o.emissiveMapEncoding=T(n.emissiveMap,t.gammaInput),o.alphaTest=n.alphaTest,o.premultipliedAlpha=n.premultipliedAlpha,o.useVertexColors=n.vertexColors,o.numClippingPlanes=s?s.length:0,o.flatShading=n.shading===v.FLAT_SHADING,o.fog=!!a,o.fogExp2=!!a&&a.fogType===m.EXP2,o.sizeAttenuation=n.sizeAttenuation,o.doubleSided=n.side===g.DOUBLE,o.flipSided=n.side===g.BACK,o.packDepthToRGBA=n.packToRGBA;var h=i.type===E.SKINNED_MESH&&i.skeleton,l=u.maxVertexUniformVectors,d=0<u.maxVertexTextures&&u.floatTextures,p=0;return d?p=1024:l<16*(p=i.skeleton?i.skeleton.bones.length:0)&&(console.warn("Program: too many bones ("+p+"), current cpu only support "+Math.floor(l/16)+" bones!!"),p=Math.floor(l/16)),o.useSkinning=h,o.bonesNum=p,o.useVertexTexture=d,n.type===f.SHADER&&(o.vertexShader=n.vertexShader,o.fragmentShader=n.fragmentShader),o}(e,t,n=n||i.material,i,r&&n.acceptLight?r.lights:null,r?r.fog:null,r?r.clippingPlanes:null),u=function(e,t){var n="";for(var i in e)n+=e[i]+"_";if(void 0!==t.defines)for(var r in t.defines)n+=r+"_"+t.defines[r]+"_";return n}(o,n),c=l;if(c[u])a=c[u];else{var h="";void 0!==n.defines&&(h=function(e){var t=[];for(var n in e){var i=e[n];!1!==i&&t.push("#define "+n+" "+i)}return t.join("\n")}(n.defines)),a=S(s,o,h),c[u]=a}return a}}(),function(){var t=zen3d.Camera,n=zen3d.Vector3,i=zen3d.RenderTargetCube,r=zen3d.WEBGL_TEXTURE_FILTER;function e(e){this.camera=new t,this.targets=[new n(1,0,0),new n(-1,0,0),new n(0,1,0),new n(0,-1,0),new n(0,0,1),new n(0,0,-1)],this.ups=[new n(0,-1,0),new n(0,-1,0),new n(0,0,1),new n(0,0,-1),new n(0,-1,0),new n(0,-1,0)],this.camera.setPerspective(.5*Math.PI,1,1,1e3),this.position=new n,this.lookTarget=new n,this.renderTarget=e||new i(512,512),this.renderTexture=this.renderTarget.texture,this.renderTexture.minFilter=r.LINEAR_MIPMAP_LINEAR}e.prototype.render=function(e,t){this.camera.position.copy(this.position);for(var n=0;n<6;n++)this.lookTarget.set(this.targets[n].x+this.camera.position.x,this.targets[n].y+this.camera.position.y,this.targets[n].z+this.camera.position.z),this.camera.lookAt(this.lookTarget,this.ups[n]),this.camera.updateMatrix(),this.renderTarget.activeCubeFace=n,e.texture.setRenderTarget(this.renderTarget),e.state.clearColor(0,0,0,0),e.clear(!0,!0,!0),e.render(t,this.camera),e.texture.updateRenderTargetMipmap(this.renderTarget)},zen3d.EnvironmentMapPass=e}(),function(){var e=zen3d.DepthMaterial,t=zen3d.DistanceMaterial,v=zen3d.LIGHT_TYPE;function n(){this.depthMaterial=new e,this.depthMaterial.packToRGBA=!0,this.distanceMaterial=new t}n.prototype=Object.assign(n.prototype,{render:function(e,t){var n=e.gl,i=e.state,r=i.states[n.STENCIL_TEST];r&&i.disable(n.STENCIL_TEST);for(var a=t.lights.shadows,s=0;s<a.length;s++)for(var o=a[s],u=o.shadow,c=u.camera,h=u.renderTarget,l=o.lightType==v.POINT,d=l?6:1,p=0;p<d;p++){l?(u.update(o,p),h.activeCubeFace=p):u.update(o);var f=t.updateRenderList(c);e.texture.setRenderTarget(h),i.clearColor(1,1,1,1),e.clear(!0,!0);var _=l?this.distanceMaterial:this.depthMaterial;_.uniforms=_.uniforms||{},_.uniforms.nearDistance=u.cameraNear,_.uniforms.farDistance=u.cameraFar,e.renderPass(f.opaque,c,{getMaterial:function(e){return _.side=e.material.side,_},ifRender:function(e){return e.object.castShadow}})}r&&i.enable(n.STENCIL_TEST)}}),zen3d.ShadowMapPass=n}(),function(){var s=zen3d.Scene,o=zen3d.Camera,u=zen3d.Vector3,c=zen3d.PlaneGeometry,h=zen3d.ShaderMaterial,l=zen3d.Mesh;function e(e){var t=new s,n=this.camera=new o;n.frustumCulled=!1,n.position.set(0,1,0),n.lookAt(new u(0,0,0),new u(0,0,-1)),n.setOrtho(-1,1,-1,1,.1,2),t.add(n);var i=new c(2,2,1,1);this.uniforms=function(e){var t={};for(var n in e){var i=e[n];Array.isArray(i)?t[n]=i.slice():t[n]=i}return t}(e.uniforms);var r=this.material=new h(e.vertexShader,e.fragmentShader,this.uniforms);Object.assign(r.defines,e.defines);var a=new l(i,r);a.frustumCulled=!1,t.add(a),t.updateMatrix(),this.renderList=t.updateRenderList(n),this.renderConfig={}}e.prototype=Object.assign(e.prototype,{render:function(e){e.renderPass(this.renderList.opaque,this.camera,this.renderConfig)}}),zen3d.ShaderPostPass=e}(),function(){var i=zen3d.RenderTargetBack,r=zen3d.WebGLCore,a=zen3d.Performance,s=zen3d.ShadowMapPass;function e(e,t){this.backRenderTarget=new i(e);var n=e.getContext("webgl",t||{antialias:!0,alpha:!1,stencil:!0});this.glCore=new r(n),this.autoClear=!0,this.performance=new a,this.shadowMapPass=new s,this.shadowAutoUpdate=!0,this.shadowNeedsUpdate=!1,this.matrixAutoUpdate=!0,this.lightsAutoupdate=!0}e.prototype.render=function(e,t,n,i){var r=this.performance;r.updateFps(),r.startCounter("render",60),this.matrixAutoUpdate&&e.updateMatrix(),this.lightsAutoupdate&&e.updateLights(),r.startCounter("renderShadow",60),(this.shadowAutoUpdate||this.shadowNeedsUpdate)&&(this.shadowMapPass.render(this.glCore,e),this.shadowNeedsUpdate=!1),r.endCounter("renderShadow"),void 0===n&&(n=this.backRenderTarget),this.glCore.texture.setRenderTarget(n),(this.autoClear||i)&&(this.glCore.state.clearColor(0,0,0,0),this.glCore.clear(!0,!0,!0)),r.startCounter("renderList",60),this.glCore.render(e,t,!0),r.endCounter("renderList"),n.texture&&this.glCore.texture.updateRenderTargetMipmap(n),this.performance.endCounter("render")},zen3d.Renderer=e}(),function(){var n=zen3d.LIGHT_TYPE,d=new(0,zen3d.Vector3),i={};function p(e){if(void 0!==i[e.uuid])return i[e.uuid];var t;switch(e.lightType){case n.DIRECT:t={direction:new Float32Array(3),color:new Float32Array([0,0,0,1]),shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2)};break;case n.POINT:t={position:new Float32Array(3),color:new Float32Array([0,0,0,1]),distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2),shadowCameraNear:1,shadowCameraFar:1e3};break;case n.SPOT:t={position:new Float32Array(3),direction:new Float32Array(3),color:new Float32Array([0,0,0,1]),distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Float32Array(2)}}return i[e.uuid]=t}function e(){this.ambient=new Float32Array([0,0,0,1]),this.directional=[],this.directionalShadowMap=[],this.directionalShadowMatrix=[],this.point=[],this.pointShadowMap=[],this.pointShadowMatrix=[],this.spot=[],this.spotShadowMap=[],this.spotShadowMatrix=[],this.shadows=[],this.ambientsNum=0,this.directsNum=0,this.pointsNum=0,this.spotsNum=0,this.shadowsNum=0,this.totalNum=0}e.prototype=Object.assign(e.prototype,{startCount:function(){for(var e=0;e<3;e++)this.ambient[e]=0;this.shadows.length=0,this.ambientsNum=0,this.directsNum=0,this.pointsNum=0,this.spotsNum=0,this.shadowsNum=0,this.totalNum=0},add:function(e){e.lightType==n.AMBIENT?this._doAddAmbientLight(e):e.lightType==n.DIRECT?this._doAddDirectLight(e):e.lightType==n.POINT?this._doAddPointLight(e):e.lightType==n.SPOT&&this._doAddSpotLight(e),e.castShadow&&e.lightType!==n.AMBIENT&&(this.shadows.push(e),this.shadowsNum++),this.totalNum++},endCount:function(){},_doAddAmbientLight:function(e){var t=e.intensity,n=e.color;this.ambient[0]+=n.r*t,this.ambient[1]+=n.g*t,this.ambient[2]+=n.b*t,this.ambientsNum++},_doAddDirectLight:function(e){var t=e.intensity,n=e.color,i=p(e);i.color[0]=n.r*t,i.color[1]=n.g*t,i.color[2]=n.b*t;var r=d;if(e.getWorldDirection(r),i.direction[0]=r.x,i.direction[1]=r.y,i.direction[2]=r.z,e.castShadow?(i.shadow=!0,i.shadowBias=e.shadow.bias,i.shadowRadius=e.shadow.radius,i.shadowMapSize[0]=e.shadow.mapSize.x,i.shadowMapSize[1]=e.shadow.mapSize.y):i.shadow=!1,e.castShadow){var a=16*(this.directsNum+1);if(this.directionalShadowMatrix.length<a){var s=this.directionalShadowMatrix;this.directionalShadowMatrix=new Float32Array(a),this.directionalShadowMatrix.set(s)}this.directionalShadowMatrix.set(e.shadow.matrix.elements,16*this.directsNum),this.directionalShadowMap[this.directsNum]=e.shadow.map}this.directional[this.directsNum]=i,this.directsNum++},_doAddPointLight:function(e){var t=e.intensity,n=e.color,i=e.distance,r=e.decay,a=p(e);a.color[0]=n.r*t,a.color[1]=n.g*t,a.color[2]=n.b*t,a.distance=i,a.decay=r;var s=d.setFromMatrixPosition(e.worldMatrix);if(a.position[0]=s.x,a.position[1]=s.y,a.position[2]=s.z,e.castShadow?(a.shadow=!0,a.shadowBias=e.shadow.bias,a.shadowRadius=e.shadow.radius,a.shadowMapSize[0]=e.shadow.mapSize.x,a.shadowMapSize[1]=e.shadow.mapSize.y,a.shadowCameraNear=e.shadow.cameraNear,a.shadowCameraFar=e.shadow.cameraFar):a.shadow=!1,e.castShadow){var o=16*(this.pointsNum+1);if(this.pointShadowMatrix.length<o){var u=this.pointShadowMatrix;this.pointShadowMatrix=new Float32Array(o),this.pointShadowMatrix.set(u)}this.pointShadowMatrix.set(e.shadow.matrix.elements,16*this.pointsNum),this.pointShadowMap[this.pointsNum]=e.shadow.map}this.point[this.pointsNum]=a,this.pointsNum++},_doAddSpotLight:function(e){var t=e.intensity,n=e.color,i=e.distance,r=e.decay,a=p(e);a.color[0]=n.r*t,a.color[1]=n.g*t,a.color[2]=n.b*t,a.distance=i,a.decay=r;var s=d.setFromMatrixPosition(e.worldMatrix);a.position[0]=s.x,a.position[1]=s.y,a.position[2]=s.z;var o=d;e.getWorldDirection(d),a.direction[0]=o.x,a.direction[1]=o.y,a.direction[2]=o.z;var u=Math.cos(e.angle),c=Math.cos(e.angle*(1-e.penumbra));if(a.coneCos=u,a.penumbraCos=c,e.castShadow?(a.shadow=!0,a.shadowBias=e.shadow.bias,a.shadowRadius=e.shadow.radius,a.shadowMapSize[0]=e.shadow.mapSize.x,a.shadowMapSize[1]=e.shadow.mapSize.y):a.shadow=!1,e.castShadow){var h=16*(this.spotsNum+1);if(this.spotShadowMatrix.length<h){var l=this.spotShadowMatrix;this.spotShadowMatrix=new Float32Array(h),this.spotShadowMatrix.set(l)}this.spotShadowMatrix.set(e.shadow.matrix.elements,16*this.spotsNum),this.spotShadowMap[this.spotsNum]=e.shadow.map}this.spot[this.spotsNum]=a,this.spotsNum++}}),zen3d.LightCache=e}(),function(){var o=zen3d.OBJECT_TYPE,e=zen3d.Vector3,t=zen3d.Sphere,u=new e,c=new t,n=function(e,t){return e.z-t.z},i=function(e,t){return t.z-e.z};function r(){this.opaque=[],this.transparent=[],this.ui=[],this._opaqueCount=0,this._transparentCount=0,this._uiCount=0}r.prototype=Object.assign(r.prototype,{startCount:function(){this._opaqueCount=0,this._transparentCount=0,this._uiCount=0},add:function(e,t){if(e.frustumCulled&&t.frustumCulled&&(c.copy(e.geometry.boundingSphere).applyMatrix4(e.worldMatrix),!t.frustum.intersectsSphere(c)))return;if(u.setFromMatrixPosition(e.worldMatrix),u.applyMatrix4(t.viewMatrix).applyMatrix4(t.projectionMatrix),o.CANVAS2D!==e.type)if(Array.isArray(e.material))for(var n=e.geometry.groups,i=0;i<n.length;i++){var r=n[i],a=e.material[r.materialIndex];if(a){s={object:e,geometry:e.geometry,material:a,z:u.z,group:r};a.transparent?this.transparent[this._transparentCount++]=s:this.opaque[this._opaqueCount++]=s}}else{s={object:e,geometry:e.geometry,material:e.material,z:u.z};e.material.transparent?this.transparent[this._transparentCount++]=s:this.opaque[this._opaqueCount++]=s}else{var s={object:e,geometry:e.geometry,material:e.material,z:u.z};this.ui[this._uiCount++]=s}},endCount:function(){this.transparent.length=this._transparentCount,this.opaque.length=this._opaqueCount,this.ui.length=this._uiCount},sort:function(){this.opaque.sort(n),this.transparent.sort(i)}}),zen3d.RenderList=r}(),function(){var n=zen3d.generateUUID,i=zen3d.EventDispatcher;function e(e,t){i.call(this),this.uuid=n(),this.width=e,this.height=t,this.depthBuffer=!0,this.stencilBuffer=!0}e.prototype=Object.assign(Object.create(i.prototype),{constructor:e,resize:function(e,t){this.width===e&&this.height===t||this.dispose(),this.width=e,this.height=t},dispose:function(){this.dispatchEvent({type:"dispose"})}}),zen3d.RenderTargetBase=e}(),function(){var t=zen3d.RenderTargetBase;function e(e){t.call(this,e.width,e.height),this.view=e}e.prototype=Object.assign(Object.create(t.prototype),{constructor:e,resize:function(e,t){this.view.width=e,this.view.height=t,this.width=e,this.height=t},dispose:function(){}}),zen3d.RenderTargetBack=e}(),function(){var n=zen3d.RenderTargetBase,i=zen3d.Texture2D;function e(e,t){n.call(this,e,t),this.texture=new i,this.depthTexture=null}(e.prototype=Object.create(n.prototype)).constructor=e,zen3d.RenderTarget2D=e}(),function(){var n=zen3d.RenderTargetBase,i=zen3d.TextureCube;function e(e,t){n.call(this,e,t),this.texture=new i,this.activeCubeFace=0}(e.prototype=Object.create(n.prototype)).constructor=e,zen3d.RenderTargetCube=e}(),function(){var i=zen3d.generateUUID;function e(e,t,n){this.uuid=i(),this.array=e,this.size=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}e.prototype=Object.assign(e.prototype,{setArray:function(e){this.count=void 0!==e?e.length/this.size:0,this.array=e}}),zen3d.BufferAttribute=e}(),function(){var n=zen3d.generateUUID;function e(e,t){this.uuid=n(),this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}e.prototype=Object.assign(e.prototype,{setArray:function(e){this.count=void 0!==e?e.length/this.stride:0,this.array=e}}),zen3d.InterleavedBuffer=e}(),function(){var r=zen3d.generateUUID;function e(e,t,n,i){this.uuid=r(),this.data=e,this.size=t,this.offset=n,this.normalized=!0===i}e.prototype.isInterleavedBufferAttribute=!0,Object.defineProperties(e.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),zen3d.InterleavedBufferAttribute=e}(),function(){var e=zen3d.EventDispatcher,t=zen3d.generateUUID,n=zen3d.Box3,i=zen3d.Sphere,r=zen3d.WEBGL_BUFFER_USAGE,a=zen3d.BufferAttribute;function s(){e.call(this),this.uuid=t(),this.attributes={},this.index=null,this.usageType=r.STATIC_DRAW,this.boundingBox=new n,this.boundingSphere=new i,this.dirtyRange={enable:!1,start:0,count:0},this.groups=[]}s.prototype=Object.assign(Object.create(e.prototype),{constructor:s,addAttribute:function(e,t){this.attributes[e]=t},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){delete this.attributes[e]},setIndex:function(e){Array.isArray(e)?this.index=new a(new Uint16Array(e),1):this.index=e},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:void 0!==n?n:0})},clearGroups:function(){this.groups=[]},computeBoundingBox:function(){var e=this.attributes.a_Position||this.attributes.position;if(e.isInterleavedBufferAttribute){var t=e.data;this.boundingBox.setFromArray(t.array,t.stride)}else this.boundingBox.setFromArray(e.array,e.size)},computeBoundingSphere:function(){var e=this.attributes.a_Position||this.attributes.position;if(e.isInterleavedBufferAttribute){var t=e.data;this.boundingSphere.setFromArray(t.array,t.stride)}else this.boundingSphere.setFromArray(e.array,e.size)},dispose:function(){this.dispatchEvent({type:"dispose"})}}),zen3d.Geometry=s}(),function(){var i=zen3d.BufferAttribute;function e(e,t,n){i.call(this,e,t),this.meshPerAttribute=n||1}e.prototype=Object.assign(Object.create(i.prototype),{constructor:e,isInstancedBufferAttribute:!0}),zen3d.InstancedBufferAttribute=e}(),function(){var i=zen3d.InterleavedBuffer;function e(e,t,n){i.call(this,e,t),this.meshPerAttribute=n||1}e.prototype=Object.assign(Object.create(i.prototype),{constructor:e,isInstancedInterleavedBuffer:!0}),zen3d.InstancedInterleavedBuffer=e}(),function(){var e=zen3d.Geometry;function t(){e.call(this),this.maxInstancedCount=void 0}t.prototype=Object.assign(Object.create(e.prototype),{constructor:t,isInstancedGeometry:!0}),zen3d.InstancedGeometry=t}(),function(){var s=zen3d.Geometry,o=zen3d.BufferAttribute,U=zen3d.Vector3;function e(e,t,n,i,r,a){s.call(this),this.buildGeometry(e,t,n,i,r,a)}e.prototype=Object.assign(Object.create(s.prototype),{constructor:e,buildGeometry:function(e,t,n,i,r,a){var P=this;e=e||1,t=t||1,n=n||1,i=Math.floor(i)||1,r=Math.floor(r)||1,a=Math.floor(a)||1;var L=[],R=[],C=[],N=[],I=0,D=0;function s(e,t,n,i,r,a,s,o,u,c,h){var l,d,p=a/u,f=s/c,_=a/2,v=s/2,m=o/2,g=u+1,E=c+1,y=0,T=0,x=new U;for(d=0;d<E;d++){var M=d*f-v;for(l=0;l<g;l++){var S=l*p-_;x[e]=S*i,x[t]=M*r,x[n]=m,R.push(x.x,x.y,x.z),x[e]=0,x[t]=0,x[n]=0<o?1:-1,C.push(x.x,x.y,x.z),N.push(l/u),N.push(1-d/c),y+=1}}for(d=0;d<c;d++)for(l=0;l<u;l++){var b=I+l+g*d,w=I+l+g*(d+1),A=I+(l+1)+g*(d+1),z=I+(l+1)+g*d;L.push(b,w,z),L.push(w,A,z),T+=6}P.addGroup(D,T,h),D+=T,I+=y}s("z","y","x",-1,-1,n,t,e,a,r,0),s("z","y","x",1,-1,n,t,-e,a,r,1),s("x","z","y",1,1,e,n,t,i,a,2),s("x","z","y",1,-1,e,n,-t,i,a,3),s("x","y","z",1,-1,e,t,n,i,r,4),s("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(L),this.addAttribute("a_Position",new o(new Float32Array(R),3)),this.addAttribute("a_Normal",new o(new Float32Array(C),3)),this.addAttribute("a_Uv",new o(new Float32Array(N),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),zen3d.CubeGeometry=e}(),function(){var r=zen3d.Geometry,S=zen3d.BufferAttribute;function e(e,t,n,i){r.call(this),this.buildGeometry(e,t,n,i)}e.prototype=Object.assign(Object.create(r.prototype),{constructor:e,buildGeometry:function(e,t,n,i){var r,a,s=(e=e||1)/2,o=(t=t||1)/2,u=Math.floor(n)||1,c=Math.floor(i)||1,h=u+1,l=c+1,d=e/u,p=t/c,f=[],_=[],v=[],m=[];for(a=0;a<l;a++){var g=a*p-o;for(r=0;r<h;r++){var E=r*d-s;_.push(E,0,g),v.push(0,1,0),m.push(r/u),m.push(1-a/c)}}for(a=0;a<c;a++)for(r=0;r<u;r++){var y=r+h*a,T=r+h*(a+1),x=r+1+h*(a+1),M=r+1+h*a;f.push(y,T,M),f.push(T,x,M)}this.setIndex(f),this.addAttribute("a_Position",new S(new Float32Array(_),3)),this.addAttribute("a_Normal",new S(new Float32Array(v),3)),this.addAttribute("a_Uv",new S(new Float32Array(m),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),zen3d.PlaneGeometry=e}(),function(){var o=zen3d.Geometry,b=zen3d.BufferAttribute,w=zen3d.Vector3;function e(e,t,n,i,r,a,s){o.call(this),this.buildGeometry(e,t,n,i,r,a,s)}e.prototype=Object.assign(Object.create(o.prototype),{constructor:e,buildGeometry:function(e,t,n,i,r,a,s){e=e||1,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),i=void 0!==i?i:0,r=void 0!==r?r:2*Math.PI;var o,u,c=(a=void 0!==a?a:0)+(s=void 0!==s?s:Math.PI),h=0,l=[],d=new w,p=new w,f=[],_=[],v=[],m=[];for(u=0;u<=n;u++){var g=[],E=u/n;for(o=0;o<=t;o++){var y=o/t;d.x=-e*Math.cos(i+y*r)*Math.sin(a+E*s),d.y=e*Math.cos(a+E*s),d.z=e*Math.sin(i+y*r)*Math.sin(a+E*s),_.push(d.x,d.y,d.z),p.set(d.x,d.y,d.z).normalize(),v.push(p.x,p.y,p.z),m.push(y,1-E),g.push(h++)}l.push(g)}for(u=0;u<n;u++)for(o=0;o<t;o++){var T=l[u][o+1],x=l[u][o],M=l[u+1][o],S=l[u+1][o+1];(0!==u||0<a)&&f.push(T,x,S),(u!==n-1||c<Math.PI)&&f.push(x,M,S)}this.setIndex(f),this.addAttribute("a_Position",new b(new Float32Array(_),3)),this.addAttribute("a_Normal",new b(new Float32Array(v),3)),this.addAttribute("a_Uv",new b(new Float32Array(m),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),zen3d.SphereGeometry=e}(),function(){var u=zen3d.Geometry,n=zen3d.BufferAttribute,f=zen3d.Vector2,N=zen3d.Vector3;function e(e,t,n,i,r,a,s,o){u.call(this),this.buildGeometry(e,t,n,i,r,a,s,o)}e.prototype=Object.assign(Object.create(u.prototype),{constructor:e,buildGeometry:function(m,g,E,y,T,e,x,M){var S=this;m=void 0!==m?m:1,g=void 0!==g?g:1,E=E||1,y=Math.floor(y)||8,T=Math.floor(T)||1,e=void 0!==e&&e,x=void 0!==x?x:0,M=void 0!==M?M:2*Math.PI;var b=[],w=[],A=[],z=[],P=0,L=[],R=E/2,C=0;function t(e){var t,n,i,r=new f,a=new N,s=0,o=!0===e?m:g,u=!0===e?1:-1;for(n=P,t=1;t<=y;t++)w.push(0,R*u,0),A.push(0,u,0),z.push(.5,.5),P++;for(i=P,t=0;t<=y;t++){var c=t/y*M+x,h=Math.cos(c),l=Math.sin(c);a.x=o*l,a.y=R*u,a.z=o*h,w.push(a.x,a.y,a.z),A.push(0,u,0),r.x=.5*h+.5,r.y=.5*l*u+.5,z.push(r.x,r.y),P++}for(t=0;t<y;t++){var d=n+t,p=i+t;!0===e?b.push(p,p+1,d):b.push(p+1,p,d),s+=3}S.addGroup(C,s,!0===e?1:2),C+=s}!function(){var e,t,n=new N,i=new N,r=0,a=(g-m)/E;for(t=0;t<=T;t++){var s=[],o=t/T,u=o*(g-m)+m;for(e=0;e<=y;e++){var c=e/y,h=c*M+x,l=Math.sin(h),d=Math.cos(h);i.x=u*l,i.y=-o*E+R,i.z=u*d,w.push(i.x,i.y,i.z),n.set(l,a,d).normalize(),A.push(n.x,n.y,n.z),z.push(c,1-o),s.push(P++)}L.push(s)}for(e=0;e<y;e++)for(t=0;t<T;t++){var p=L[t][e],f=L[t+1][e],_=L[t+1][e+1],v=L[t][e+1];b.push(p,f,v),b.push(f,_,v),r+=6}S.addGroup(C,r,0),C+=r}(),!1===e&&(0<m&&t(!0),0<g&&t(!1)),this.setIndex(b),this.addAttribute("a_Position",new n(new Float32Array(w),3)),this.addAttribute("a_Normal",new n(new Float32Array(A),3)),this.addAttribute("a_Uv",new n(new Float32Array(z),2)),this.computeBoundingBox(),this.computeBoundingSphere()}}),zen3d.CylinderGeometry=e}(),function(){var e=zen3d.generateUUID,t=zen3d.WEBGL_PIXEL_FORMAT,n=zen3d.WEBGL_PIXEL_TYPE,i=zen3d.WEBGL_TEXTURE_FILTER,r=zen3d.WEBGL_TEXTURE_WRAP,a=zen3d.TEXEL_ENCODING_TYPE,s=zen3d.EventDispatcher;function o(){s.call(this),this.uuid=e(),this.textureType="",this.border=0,this.pixelFormat=t.RGBA,this.pixelType=n.UNSIGNED_BYTE,this.magFilter=i.LINEAR,this.minFilter=i.LINEAR_MIPMAP_LINEAR,this.wrapS=r.CLAMP_TO_EDGE,this.wrapT=r.CLAMP_TO_EDGE,this.anisotropy=1,this.generateMipmaps=!0,this.encoding=a.LINEAR,this.flipY=!0,this.version=0}o.prototype=Object.assign(o.prototype,{dispose:function(){this.dispatchEvent({type:"dispose"}),this.version=0}}),zen3d.TextureBase=o}(),function(){var e=zen3d.TextureBase,t=zen3d.Vector2,n=zen3d.Matrix3,i=zen3d.WEBGL_TEXTURE_TYPE;function r(){e.call(this),this.textureType=i.TEXTURE_2D,this.image=null,this.mipmaps=[],this.offset=new t,this.repeat=new t(1,1),this.center=new t,this.rotation=0,this.matrix=new n,this.matrixAutoUpdate=!0}r.prototype=Object.assign(Object.create(e.prototype),{constructor:r,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}}),r.fromImage=function(e){var t=new r;return t.image=e,t.version++,t},r.fromSrc=function(e){var t=new r,n=0<e.search(/\.(jpg|jpeg)$/)||0===e.search(/^data\:image\/jpeg/);return(0<e.search(/\.(tga)$/)||0===e.search(/^data\:image\/tga/)?new zen3d.TGALoader:new zen3d.ImageLoader).load(e,function(e){t.pixelFormat=n?zen3d.WEBGL_PIXEL_FORMAT.RGB:zen3d.WEBGL_PIXEL_FORMAT.RGBA,t.image=e,t.version++,t.dispatchEvent({type:"onload"})}),t},zen3d.Texture2D=r}(),function(){var e=zen3d.TextureBase,t=zen3d.WEBGL_TEXTURE_TYPE;function u(){e.call(this),this.textureType=t.TEXTURE_CUBE_MAP,this.images=[],this.flipY=!1}u.prototype=Object.assign(Object.create(e.prototype),{constructor:u}),u.fromImage=function(e){for(var t=new u,n=t.images,i=0;i<6;i++)n[i]=e[i];return t.version++,t},u.fromSrc=function(n){var i=new u,r=i.images,e=n[0],a=0<e.search(/\.(jpg|jpeg)$/)||0===e.search(/^data\:image\/jpeg/),s=0<e.search(/\.(tga)$/)||0===e.search(/^data\:image\/tga/),o=0;return function e(t){if(t&&(r.push(t),o++),6<=o)return i.pixelFormat=a?zen3d.WEBGL_PIXEL_FORMAT.RGB:zen3d.WEBGL_PIXEL_FORMAT.RGBA,i.version++,void i.dispatchEvent({type:"onload"});(s?new zen3d.TGALoader:new zen3d.ImageLoader).load(n[o],e)}(),i},zen3d.TextureCube=u}(),function(){var i=zen3d.Texture2D,r=zen3d.WEBGL_PIXEL_TYPE,a=zen3d.WEBGL_TEXTURE_FILTER;function e(e,t,n){i.call(this),this.image={data:e,width:t,height:n},this.pixelType=r.FLOAT,this.magFilter=a.NEAREST,this.minFilter=a.NEAREST,this.generateMipmaps=!1,this.flipY=!1}e.prototype=Object.assign(Object.create(i.prototype),{constructor:e,isDataTexture:!0}),zen3d.TextureData=e}(),function(){var n=zen3d.Texture2D,i=zen3d.WEBGL_PIXEL_TYPE,r=zen3d.WEBGL_PIXEL_FORMAT,a=zen3d.WEBGL_TEXTURE_FILTER;function e(e,t){n.call(this),this.image={width:e,height:t},this.pixelType=i.UNSIGNED_SHORT,this.pixelFormat=r.DEPTH_COMPONENT,this.magFilter=a.NEAREST,this.minFilter=a.NEAREST,this.generateMipmaps=!1,this.flipY=!1}e.prototype=Object.assign(Object.create(n.prototype),{constructor:e,isDepthTexture:!0}),zen3d.TextureDepth=e}(),function(){var e=zen3d.BLEND_TYPE,t=zen3d.BLEND_EQUATION,n=zen3d.BLEND_FACTOR,i=zen3d.ENVMAP_COMBINE_TYPE,r=zen3d.DRAW_SIDE,a=zen3d.SHADING_TYPE,s=zen3d.DRAW_MODE,o=zen3d.Color3;function u(){this.type="",this.opacity=1,this.transparent=!1,this.blending=e.NORMAL,this.blendSrc=n.SRC_ALPHA,this.blendDst=n.ONE_MINUS_SRC_ALPHA,this.blendEquation=t.ADD,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.premultipliedAlpha=!1,this.vertexColors=!1,this.diffuse=new o(16777215),this.diffuseMap=null,this.normalMap=null,this.aoMap=null,this.aoMapIntensity=1,this.bumpMap=null,this.bumpScale=1,this.envMap=null,this.envMapIntensity=1,this.envMapCombine=i.MULTIPLY,this.emissive=new o(0),this.emissiveMap=null,this.emissiveIntensity=1,this.depthTest=!0,this.depthWrite=!0,this.alphaTest=0,this.side=r.FRONT,this.shading=a.SMOOTH_SHADING,this.acceptLight=!1,this.drawMode=s.TRIANGLES}u.prototype=Object.assign(u.prototype,{copy:function(e){return this.type=e.type,this.opacity=e.opacity,this.transparent=e.transparent,this.premultipliedAlpha=e.premultipliedAlpha,this.vertexColors=e.vertexColors,this.diffuse.copy(e.diffuse),this.diffuseMap=e.diffuseMap,this.normalMap=e.normalMap,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.envMapCombine=e.envMapCombine,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.blending=e.blending,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.alphaTest=e.alphaTest,this.side=e.side,this.shading=e.shading,this.acceptLight=e.acceptLight,this.drawMode=e.drawMode,this},clone:function(){return(new this.constructor).copy(this)}}),zen3d.Material=u}(),function(){var e=zen3d.MATERIAL_TYPE,t=zen3d.Material;function n(){t.call(this),this.type=e.BASIC}n.prototype=Object.assign(Object.create(t.prototype),{constructor:n}),zen3d.BasicMaterial=n}(),function(){var e=zen3d.MATERIAL_TYPE,t=zen3d.Material;function n(){t.call(this),this.type=e.LAMBERT,this.acceptLight=!0}n.prototype=Object.assign(Object.create(t.prototype),{constructor:n}),zen3d.LambertMaterial=n}(),function(){var e=zen3d.MATERIAL_TYPE,t=zen3d.Material,n=zen3d.Color3;function i(){t.call(this),this.type=e.PHONG,this.shininess=30,this.specular=new n(6710886),this.specularMap=null,this.acceptLight=!0}i.prototype=Object.assign(Object.create(t.prototype),{constructor:i,copy:function(e){return t.copy.call(this,e),this.shininess=e.shininess,this.specular.copy(e.specular),this.specularMap=e.specularMap,this}}),zen3d.PhongMaterial=i}(),function(){var e=zen3d.MATERIAL_TYPE,t=zen3d.Material;function n(){t.call(this),this.type=e.PBR,this.roughness=.5,this.metalness=.5,this.roughnessMap=null,this.metalnessMap=null,this.acceptLight=!0}n.prototype=Object.assign(Object.create(t.prototype),{constructor:n,copy:function(e){return t.copy.call(this,e),this.roughness=e.roughness,this.metalness=e.metalness,this}}),zen3d.PBRMaterial=n}(),function(){var e=zen3d.MATERIAL_TYPE,t=zen3d.DRAW_SIDE,n=zen3d.Material;function i(){n.call(this),this.type=e.CUBE,this.side=t.BACK,this.cubeMap=null}i.prototype=Object.assign(Object.create(n.prototype),{constructor:i,copy:function(e){return n.copy.call(this,e),this.cubeMap=e.cubeMap,this}}),zen3d.CubeMaterial=i}(),function(){var e=zen3d.MATERIAL_TYPE,t=zen3d.DRAW_MODE,n=zen3d.Material;function i(){n.call(this),this.type=e.POINT,this.size=1,this.sizeAttenuation=!0,this.drawMode=t.POINTS}i.prototype=Object.assign(Object.create(n.prototype),{constructor:i,copy:function(e){return n.copy.call(this,e),this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}),zen3d.PointsMaterial=i}(),function(){var e=zen3d.MATERIAL_TYPE,t=zen3d.DRAW_MODE,n=zen3d.Material;function i(){n.call(this),this.type=e.LINE,this.lineWidth=1,this.drawMode=t.LINES}i.prototype=Object.assign(Object.create(n.prototype),{constructor:i,copy:function(e){return n.copy.call(this,e),this.lineWidth=e.lineWidth,this}}),zen3d.LineMaterial=i}(),function(){var e=zen3d.MATERIAL_TYPE,t=zen3d.DRAW_MODE,n=zen3d.Material;function i(){n.call(this),this.type=e.LINE_LOOP,this.lineWidth=1,this.drawMode=t.LINE_LOOP}i.prototype=Object.assign(Object.create(n.prototype),{constructor:i,copy:function(e){return n.copy.call(this,e),this.lineWidth=e.lineWidth,this}}),zen3d.LineLoopMaterial=i}(),function(){var e=zen3d.MATERIAL_TYPE,t=zen3d.DRAW_MODE,n=zen3d.Material;function i(){n.call(this),this.type=e.LINE_DASHED,this.lineWidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.drawMode=t.LINE_STRIP}i.prototype=Object.assign(Object.create(n.prototype),{constructor:i,copy:function(e){return n.copy.call(this,e),this.lineWidth=e.lineWidth,this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}),zen3d.LineDashedMaterial=i}(),function(){var e=zen3d.MATERIAL_TYPE,t=zen3d.Material;function n(){t.call(this),this.type=e.SPRITE,this.rotation=0,this.fog=!1}n.prototype=Object.assign(Object.create(t.prototype),{constructor:n,copy:function(e){return t.copy.call(this,e),this.rotation=e.rotation,this.fog=e.fog,this}}),zen3d.SpriteMaterial=n}(),function(){var i=zen3d.MATERIAL_TYPE,r=zen3d.Material;function e(e,t,n){r.call(this),this.type=i.SHADER,this.vertexShader=e||"",this.fragmentShader=t||"",this.defines={},this.uniforms=n||{}}e.prototype=Object.assign(Object.create(r.prototype),{constructor:e,copy:function(e){return r.copy.call(this,e),this.vertexShader=e.vertexShader,this.fragmentShader=e.fragmentShader,this}}),zen3d.ShaderMaterial=e}(),function(){var e=zen3d.MATERIAL_TYPE,t=zen3d.BLEND_TYPE,n=zen3d.Material;function i(){n.call(this),this.type=e.DEPTH,this.blending=t.NONE,this.packToRGBA=!1}i.prototype=Object.assign(Object.create(n.prototype),{constructor:i}),zen3d.DepthMaterial=i}(),function(){var e=zen3d.MATERIAL_TYPE,t=zen3d.BLEND_TYPE,n=zen3d.Material;function i(){n.call(this),this.type=e.DISTANCE,this.blending=t.NONE}i.prototype=Object.assign(Object.create(n.prototype),{constructor:i}),zen3d.DistanceMaterial=i}(),function(){var e=zen3d.MATERIAL_TYPE,t=zen3d.BLEND_TYPE,n=zen3d.DRAW_MODE,i=zen3d.Material;function r(){i.call(this),this.type=e.PARTICLE,this.transparent=!0,this.blending=t.ADD,this.depthTest=!0,this.depthWrite=!1,this.drawMode=n.POINTS}r.prototype=Object.assign(Object.create(i.prototype),{constructor:r}),zen3d.ParticleMaterial=r}(),function(){var n,i,r,a,s=zen3d.generateUUID,o=zen3d.Vector3,u=zen3d.Euler,c=zen3d.Quaternion,h=zen3d.Matrix4,l=zen3d.SHADOW_TYPE;function e(){this.uuid=s(),this.name="",this.type="",this.position=new o,this.scale=new o(1,1,1);var e=this.euler=new u,t=this.quaternion=new c;e.onChange(function(){t.setFromEuler(e,!1)}),t.onChange(function(){e.setFromQuaternion(t,void 0,!1)}),this.matrix=new h,this.worldMatrix=new h,this.children=new Array,this.parent=null,this.castShadow=!1,this.receiveShadow=!1,this.shadowType=l.PCF_SOFT,this.frustumCulled=!0,this.userData={}}Object.defineProperties(e.prototype,{rotation:{get:function(){return this.euler},set:function(e){this.euler.copyFrom(e),this.quaternion.setFromEuler(e)}}}),e.prototype=Object.assign(e.prototype,{add:function(e){this.children.push(e),e.parent=this},remove:function(e){var t=this.children.indexOf(e);-1!==t&&this.children.splice(t,1),e.parent=null},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var n=0,i=this.children.length;n<i;n++){var r=this.children[n].getObjectByProperty(e,t);if(void 0!==r)return r}},updateMatrix:function(){var e=this.matrix.transform(this.position,this.scale,this.quaternion);if(this.worldMatrix.copy(e),this.parent){var t=this.parent.worldMatrix;this.worldMatrix.premultiply(t)}for(var n=this.children,i=0,r=n.length;i<r;i++)n[i].updateMatrix()},getWorldDirection:(i=new o,r=new c,a=new o,function(e){var t=e||new o;return this.worldMatrix.decompose(i,r,a),t.set(0,0,1).applyQuaternion(r),t}),lookAt:(n=new h,function(e,t){n.lookAtRH(e,this.position,t),this.quaternion.setFromRotationMatrix(n)}),raycast:function(){},traverse:function(e){e(this);for(var t=this.children,n=0,i=t.length;n<i;n++)t[n].traverse(e)},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.type=e.type,this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.worldMatrix.copy(e.worldMatrix),this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var n=0;n<e.children.length;n++){var i=e.children[n];this.add(i.clone())}return this}}),zen3d.Object3D=e}(),function(){var e=zen3d.LightCache,i=zen3d.RenderList,s=zen3d.OBJECT_TYPE,t=zen3d.Object3D;function n(){t.call(this),this.type=s.SCENE,this.overrideMaterial=null,this.fog=null,this.clippingPlanes=[],this._renderLists={},this.lights=new e}n.prototype=Object.assign(Object.create(t.prototype),{constructor:n,updateRenderList:function(e){var t=e.uuid;this._renderLists[t]||(this._renderLists[t]=new i);var n=this._renderLists[t];return n.startCount(),this._doUpdateRenderList(this,e,n),n.endCount(),n.sort(),n},getRenderList:function(e){return this._renderLists[e.uuid]},updateLights:function(){this.lights;return this.lights.startCount(),this._doUpdateLights(this),this.lights.endCount(),this.lights},_doUpdateRenderList:function(e,t,n){if(e.geometry&&e.material&&n.add(e,t),s.CANVAS2D!==e.type)for(var i=e.children,r=0,a=i.length;r<a;r++)this._doUpdateRenderList(i[r],t,n)},_doUpdateLights:function(e){if(s.LIGHT===e.type&&this.lights.add(e),s.CANVAS2D!==e.type)for(var t=e.children,n=0,i=t.length;n<i;n++)this._doUpdateLights(t[n])}}),zen3d.Scene=n}(),function(){var i=zen3d.FOG_TYPE,r=zen3d.Color3;zen3d.Fog=function(e,t,n){this.fogType=i.NORMAL,this.color=new r(void 0!==e?e:0),this.near=void 0!==t?t:1,this.far=void 0!==n?n:1e3}}(),function(){var n=zen3d.FOG_TYPE,i=zen3d.Color3;zen3d.FogExp2=function(e,t){this.fogType=n.EXP2,this.color=new i(void 0!==e?e:0),this.density=void 0!==t?t:25e-5}}(),function(){var e=zen3d.Object3D,t=zen3d.OBJECT_TYPE;function n(){e.call(this),this.type=t.GROUP}(n.prototype=Object.create(e.prototype)).constructor=n,zen3d.Group=n}(),function(){var t=zen3d.Object3D,e=zen3d.OBJECT_TYPE,n=zen3d.Color3;function i(){t.call(this),this.type=e.LIGHT,this.lightType="",this.color=new n(16777215),this.intensity=1}i.prototype=Object.assign(Object.create(t.prototype),{constructor:i,copy:function(e){return t.prototype.copy.call(this,e),this.type=e.type,this.lightType=e.lightType,this.color.copy(e.color),this.intensity=e.intensity,this}}),zen3d.Light=i}(),function(){var e=zen3d.Light,t=zen3d.LIGHT_TYPE;function n(){e.call(this),this.lightType=t.AMBIENT}(n.prototype=Object.create(e.prototype)).constructor=n,zen3d.AmbientLight=n}(),function(){var t=zen3d.Light,e=zen3d.LIGHT_TYPE,n=zen3d.DirectionalLightShadow;function i(){t.call(this),this.lightType=e.DIRECT,this.shadow=new n}i.prototype=Object.assign(Object.create(t.prototype),{constructor:i,copy:function(e){return t.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),zen3d.DirectionalLight=i}(),function(){var t=zen3d.Light,e=zen3d.LIGHT_TYPE,n=zen3d.PointLightShadow;function i(){t.call(this),this.lightType=e.POINT,this.decay=2,this.distance=200,this.shadow=new n}i.prototype=Object.assign(Object.create(t.prototype),{constructor:i,copy:function(e){return t.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),zen3d.PointLight=i}(),function(){var t=zen3d.Light,e=zen3d.LIGHT_TYPE,n=zen3d.SpotLightShadow;function i(){t.call(this),this.lightType=e.SPOT,this.decay=2,this.distance=200,this.penumbra=0,this.angle=Math.PI/6,this.shadow=new n}i.prototype=Object.assign(Object.create(t.prototype),{constructor:i,copy:function(e){return t.prototype.copy.call(this,e),this.shadow.copy(e.shadow),this}}),zen3d.SpotLight=i}(),function(){var e=zen3d.Camera,t=zen3d.Matrix4,n=zen3d.Vector2;function i(){this.camera=new e,this.matrix=new t,this.bias=3e-4,this.radius=2,this.cameraNear=1,this.cameraFar=500,this.mapSize=new n(512,512),this.renderTarget=null,this.map=null}i.prototype=Object.assign(i.prototype,{update:function(e,t){},copy:function(e){return this.camera.copy(e.camera),this.matrix.copy(e.matrix),this.bias=e.bias,this.radius=e.radius,this.cameraNear=e.cameraNear,this.cameraFar=e.cameraFar,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)}}),zen3d.LightShadow=i}(),function(){var t=zen3d.LightShadow,n=zen3d.RenderTarget2D,i=zen3d.Vector3,r=zen3d.WEBGL_TEXTURE_FILTER;function e(){t.call(this),this.camera.frustumCulled=!1,this.renderTarget=new n(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=r.LINEAR,this.map=e,this.windowSize=500,this._lookTarget=new i,this._up=new i(0,1,0)}e.prototype=Object.assign(Object.create(t.prototype),{constructor:e,update:function(e){this._updateCamera(e),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e){var t=this.camera,n=this._lookTarget;e.getWorldDirection(this._lookTarget),t.position.setFromMatrixPosition(e.worldMatrix),n.set(n.x+t.position.x,n.y+t.position.y,n.z+t.position.z),t.lookAt(n,this._up),t.updateMatrix();var i=this.windowSize/2;t.setOrtho(-i,i,-i,i,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)},copy:function(e){return t.prototype.copy.call(this,e),this.windowSize=e.windowSize,this}}),zen3d.DirectionalLightShadow=e}(),function(){var t=zen3d.LightShadow,n=zen3d.RenderTarget2D,i=zen3d.WEBGL_TEXTURE_FILTER,r=zen3d.Vector3;function e(){t.call(this),this.renderTarget=new n(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=i.LINEAR,this.map=e,this._lookTarget=new r,this._up=new r(0,1,0)}e.prototype=Object.assign(Object.create(t.prototype),{constructor:e,update:function(e){this._updateCamera(e),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e){var t=this.camera,n=this._lookTarget;e.getWorldDirection(this._lookTarget),t.position.setFromMatrixPosition(e.worldMatrix),n.set(n.x+t.position.x,n.y+t.position.y,n.z+t.position.z),t.lookAt(n,this._up),t.updateMatrix(),t.setPerspective(2*e.angle,1,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)}}),zen3d.SpotLightShadow=e}(),function(){var t=zen3d.LightShadow,n=zen3d.RenderTargetCube,i=zen3d.Vector3,r=zen3d.WEBGL_TEXTURE_FILTER;function e(){t.call(this),this.renderTarget=new n(this.mapSize.x,this.mapSize.y);var e=this.renderTarget.texture;e.generateMipmaps=!1,e.minFilter=r.LINEAR,this.map=e,this._targets=[new i(1,0,0),new i(-1,0,0),new i(0,1,0),new i(0,-1,0),new i(0,0,1),new i(0,0,-1)],this._ups=[new i(0,-1,0),new i(0,-1,0),new i(0,0,1),new i(0,0,-1),new i(0,-1,0),new i(0,-1,0)],this._lookTarget=new i}e.prototype=Object.assign(Object.create(t.prototype),{constructor:e,update:function(e,t){this._updateCamera(e,t),this._updateMatrix(),this.mapSize.x===this.renderTarget.width&&this.mapSize.y===this.renderTarget.height||this.renderTarget.resize(this.mapSize.x,this.mapSize.y)},_updateCamera:function(e,t){var n=this.camera,i=this._lookTarget,r=this._targets,a=this._ups;n.position.setFromMatrixPosition(e.worldMatrix),i.set(r[t].x+n.position.x,r[t].y+n.position.y,r[t].z+n.position.z),n.lookAt(i,a[t]),n.updateMatrix(),n.setPerspective(.5*Math.PI,1,this.cameraNear,this.cameraFar)},_updateMatrix:function(){var e=this.matrix,t=this.camera;e.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),e.multiply(t.projectionMatrix),e.multiply(t.viewMatrix)}}),zen3d.PointLightShadow=e}(),function(){var e,n,i,r,a,t=zen3d.OBJECT_TYPE,s=zen3d.Object3D,o=zen3d.Matrix4,u=zen3d.Frustum,c=zen3d.Vector4,h=zen3d.Quaternion,l=zen3d.Vector3;function d(){s.call(this),this.type=t.CAMERA,this.viewMatrix=new o,this.projectionMatrix=new o,this.frustum=new u,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.rect=new c(0,0,1,1),this.frustumCulled=!0}d.prototype=Object.assign(Object.create(s.prototype),{constructor:d,lookAt:(a=new o,function(e,t){a.lookAtRH(this.position,e,t),this.quaternion.setFromRotationMatrix(a)}),setOrtho:function(e,t,n,i,r,a){this.projectionMatrix.set(2/(t-e),0,0,-(t+e)/(t-e),0,2/(i-n),0,-(i+n)/(i-n),0,0,-2/(a-r),-(a+r)/(a-r),0,0,0,1)},setPerspective:function(e,t,n,i){this.projectionMatrix.set(1/(t*Math.tan(e/2)),0,0,0,0,1/Math.tan(e/2),0,0,0,0,-(i+n)/(i-n),-2*i*n/(i-n),0,0,-1,0)},getWorldDirection:(n=new l,i=new h,r=new l,function(e){var t=e||new l;return this.worldMatrix.decompose(n,i,r),t.set(0,0,-1).applyQuaternion(i),t}),updateMatrix:(e=new o,function(){s.prototype.updateMatrix.call(this),this.viewMatrix.getInverse(this.worldMatrix),e.multiplyMatrices(this.projectionMatrix,this.viewMatrix),this.frustum.setFromMatrix(e)}),copy:function(e,t){return s.prototype.copy.call(this,e,t),this.viewMatrix.copy(e.viewMatrix),this.projectionMatrix.copy(e.projectionMatrix),this}}),zen3d.Camera=d}(),function(){var n=zen3d.Object3D,i=zen3d.OBJECT_TYPE,e=zen3d.Sphere,t=zen3d.box3,r=zen3d.Matrix4,a=zen3d.Ray,s=zen3d.Vector3,o=zen3d.Vector2;function u(e,t){n.call(this),this.geometry=e,this.material=t,this.type=i.MESH}u.prototype=Object.assign(Object.create(n.prototype),{constructor:u,raycast:function(){var E=new e,y=new t,T=new r,x=new a,M=new s,S=new s,b=new s,w=new s,A=new o,z=new o,P=new o,L=new s,u=new s;function R(e,t,n,i,r,a,s){e.material;if(null===n.intersectTriangle(a,r,i,!0,s))return null;u.copy(s),u.applyMatrix4(e.worldMatrix);var o=t.ray.origin.distanceTo(u);return o<t.near||o>t.far?null:{distance:o,point:u.clone(),object:e}}return function(e,t){var n=this.geometry,i=this.worldMatrix;if(E.copy(n.boundingSphere),E.applyMatrix4(i),e.ray.intersectsSphere(E)&&(y.copy(n.boundingBox),y.applyMatrix4(i),e.ray.intersectsBox(y))){T.getInverse(i),x.copy(e.ray).applyMatrix4(T);for(var r,a,s,o,u,c,h,l,d,p,f=n.index.array,_=n.getAttribute("a_Position"),v=n.getAttribute("a_Uv"),m=0;m<f.length;m+=3){r=f[m],a=f[m+1],s=f[m+2],S.fromArray(_.array,3*r),b.fromArray(_.array,3*a),w.fromArray(_.array,3*s);var g=R(this,e,x,S,b,w,L);g&&(A.fromArray(v.array,2*r),z.fromArray(v.array,2*a),P.fromArray(v.array,2*s),g.uv=(o=L,u=S,c=b,h=w,l=A,d=z,p=P,zen3d.Triangle.barycoordFromPoint(o,u,c,h,M),l.multiplyScalar(M.x),d.multiplyScalar(M.y),p.multiplyScalar(M.z),l.add(d).add(p),l.clone()),g.face=[r,a,s],g.faceIndex=r,t.push(g))}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),zen3d.Mesh=u}(),function(){var n=zen3d.OBJECT_TYPE,i=zen3d.Mesh;function e(e,t){i.call(this,e,t),this.type=n.SKINNED_MESH,this.skeleton=void 0}e.prototype=Object.assign(Object.create(i.prototype),{constructor:e,updateMatrix:function(){i.prototype.updateMatrix.call(this),this.skeleton&&this.skeleton.updateBones()},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),zen3d.SkinnedMesh=e}(),function(){var n=zen3d.OBJECT_TYPE,i=zen3d.Object3D;function e(e,t){i.call(this),this.geometry=e,this.material=t,this.type=n.POINT}(e.prototype=Object.create(i.prototype)).constructor=e,zen3d.Points=e}(),function(){var n=zen3d.OBJECT_TYPE,i=zen3d.Object3D;function e(e,t){i.call(this),this.geometry=e,this.material=t,this.type=n.LINE}e.prototype=Object.assign(Object.create(i.prototype),{constructor:e,raycast:function(){}}),zen3d.Line=e}(),function(){var t=zen3d.OBJECT_TYPE,n=zen3d.Object3D,e=zen3d.Geometry,i=zen3d.InterleavedBuffer,r=zen3d.InterleavedBufferAttribute,a=new e,s=new i(new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),4);function o(e){n.call(this),this.geometry=a,this.material=void 0!==e?e:new zen3d.SpriteMaterial,this.type=t.SPRITE}a.addAttribute("position",new r(s,2,0)),a.addAttribute("uv",new r(s,2,2)),a.setIndex([0,1,2,0,2,3]),a.computeBoundingBox(),a.computeBoundingSphere(),o.geometry=a,(o.prototype=Object.create(n.prototype)).constructor=o,zen3d.Sprite=o}(),function(){var d,p,f,_,v,m,g,E,y,a=zen3d.Object3D,s=zen3d.Geometry,o=zen3d.OBJECT_TYPE,u=zen3d.ParticleMaterial,c=zen3d.InterleavedBuffer,h=zen3d.InterleavedBufferAttribute,e=zen3d.Vector3,t=zen3d.Color3,r=new Uint8Array(4),l=new Float32Array(r.buffer);function T(e,t,n,i){return r[0]=Math.floor(i),r[1]=Math.floor(n),r[2]=Math.floor(t),r[3]=Math.floor(e),l[0]}function n(e){a.call(this);e=e||{};this.maxParticleCount=e.maxParticleCount||1e4,this.particleNoiseTex=e.particleNoiseTex||null,this.particleSpriteTex=e.particleSpriteTex||null,this.geometry=new s;for(var t=[],n=0;n<this.maxParticleCount;n++)t[8*n+0]=100,t[8*n+1]=0,t[8*n+2]=0,t[8*n+3]=0,t[8*n+4]=T(128,128,0,0),t[8*n+5]=T(0,254,0,254),t[8*n+6]=1,t[8*n+7]=0;var i,r=new c(new Float32Array(t),8);r.dynamic=!0,i=new h(r,3,0),this.geometry.addAttribute("a_Position",i),i=new h(r,4,0),this.geometry.addAttribute("particlePositionsStartTime",i),i=new h(r,4,4),this.geometry.addAttribute("particleVelColSizeLife",i),this.particleCursor=0,this.time=0,this.type=o.PARTICLE,this.material=new u,this.frustumCulled=!1}n.prototype=Object.assign(Object.create(a.prototype),{constructor:n,spawn:(d=new e,p=new e,f=0,_=0,v=new t,m=0,g=0,E=0,y=0,function(e){d=void 0!==(e=e||{}).position?d.copy(e.position):d.set(0,0,0),p=void 0!==e.velocity?p.copy(e.velocity):p.set(0,0,0),f=void 0!==e.positionRandomness?e.positionRandomness:0,_=void 0!==e.velocityRandomness?e.velocityRandomness:0,v=void 0!==e.color?v.copy(e.color):v.setRGB(1,1,1),m=void 0!==e.colorRandomness?e.colorRandomness:1,u=void 0!==e.turbulence?e.turbulence:1,g=void 0!==e.lifetime?e.lifetime:5,E=void 0!==e.size?e.size:10,y=void 0!==e.sizeRandomness?e.sizeRandomness:0;var t=this.particleCursor,n=this.geometry.getAttribute("particlePositionsStartTime").data,i=n.array,r=n.stride;i[t*r+0]=d.x+(Math.random()-.5)*f,i[t*r+1]=d.y+(Math.random()-.5)*f,i[t*r+2]=d.z+(Math.random()-.5)*f,i[t*r+3]=this.time+.02*(Math.random()-.5);var a=p.x+(Math.random()-.5)*_,s=p.y+(Math.random()-.5)*_,o=p.z+(Math.random()-.5)*_,u=Math.floor(254*u);a=Math.floor((a- -2)/4*250),s=Math.floor((s- -2)/4*250),o=Math.floor((o- -2)/4*250),i[t*r+4]=T(a,s,o,u);var c=254*v.r+(Math.random()-.5)*m*254,h=254*v.g+(Math.random()-.5)*m*254,l=254*v.b+(Math.random()-.5)*m*254;254<c&&(c=254),c<0&&(c=0),254<h&&(h=254),h<0&&(h=0),254<l&&(l=254),l<0&&(l=0),i[t*r+5]=T(c,h,l,254),i[t*r+6]=E+(Math.random()-.5)*y,i[t*r+7]=g,this.particleCursor++,this.particleCursor>=this.maxParticleCount?(this.particleCursor=0,n.version++,n.updateRange.offset=0,n.updateRange.count=-1):(n.version++,-1<n.updateRange.count?n.updateRange.count=this.particleCursor*r-n.updateRange.offset:(n.updateRange.offset=t*r,n.updateRange.count=r))}),update:function(e){this.time=e}}),zen3d.ParticleContainer=n}(),function(){var e=zen3d.Object3D,t=zen3d.Matrix4;function n(){e.call(this),this.type="bone",this.offsetMatrix=new t}(n.prototype=Object.create(e.prototype)).constructor=n,zen3d.Bone=n}(),function(){var n,t=zen3d.Object3D,e=zen3d.Matrix4;function i(e){t.call(this),this.type="skeleton",this.bones=e||[],this.boneMatrices=new Float32Array(16*this.bones.length),this.boneTexture=void 0,this.boneTextureSize=0}i.prototype=Object.assign(Object.create(t.prototype),{constructor:i,updateBones:(n=new e,function(){this.updateMatrix();for(var e=0;e<this.bones.length;e++){var t=this.bones[e];n.multiplyMatrices(t.worldMatrix,t.offsetMatrix),n.toArray(this.boneMatrices,16*e)}void 0!==this.boneTexture&&this.boneTexture.version++})}),zen3d.Skeleton=i}(),function(){function e(){this._keys=[],this._values=[]}e.prototype=Object.assign(e.prototype,{addFrame:function(e,t){this._keys.push(e),this._values.push(t)},removeFrame:function(e){var t=this.keys.indexOf(e);-1<t&&(this._keys.splice(t,1),this._values.splice(t,1))},clearFrame:function(){this._keys.length=0,this._values.length=0},sortFrame:function(){},getRange:function(e,t){var n=this._getLastKeyIndex(e),i=this._keys[n],r=this._keys[n+1],a=this._values[n],s=this._values[n+1];return(t=t||{key1:0,value1:0,key2:0,value2:0}).key1=i,t.key2=r,t.value1=a,t.value2=s,t},_getLastKeyIndex:function(e){var t,n=0,i=this._keys.length;for(t=0;t<i;t++)e>=this._keys[t]&&(n=t);return n}}),zen3d.KeyframeData=e}(),function(){var n=zen3d.KeyframeData,s={key1:0,value1:0,key2:0,value2:0};function e(e,t){this.target=void 0,this.path=void 0,this.bind(e,t),this.data=new n,this._frame=0,this.interpolant=!0}e.prototype=Object.assign(e.prototype,{bind:function(e,t){if(1<(t=t.split(".")).length){for(var n=e[t[0]],i=1;i<t.length-1;i++)n=n[t[i]];this.path=t[t.length-1],this.target=n}else this.path=t[0],this.target=e},_updateValue:function(e){this.data.getRange(e,s);var t=s.key1,n=s.key2,i=s.value1,r=s.value2;if(this.interpolant)if(void 0!==i&&void 0!==r){var a=(e-t)/(n-t);this.target[this.path]=(r-i)*a+i}else this.target[this.path]=i;else this.target[this.path]=i}}),Object.defineProperties(e.prototype,{frame:{get:function(){return this._frame},set:function(e){this._frame=e,this._updateValue(e)}}}),zen3d.KeyframeTrack=e}(),function(){var n=zen3d.KeyframeTrack,s={key1:0,value1:0,key2:0,value2:0},e=function(e,t){n.call(this,e,t)};e.prototype=Object.assign(Object.create(n.prototype),{constructor:e,_updateValue:function(e){this.data.getRange(e,s);var t=s.key1,n=s.key2,i=s.value1,r=s.value2;if(this.interpolant)if(void 0!==i&&void 0!==r){var a=(e-t)/(n-t);this.target[this.path].slerpQuaternions(i,r,a)}else this.target[this.path].copy(i);else this.target[this.path].copy(i)}}),zen3d.QuaternionKeyframeTrack=e}(),function(){var n=zen3d.KeyframeTrack,s={key1:0,value1:0,key2:0,value2:0},e=function(e,t){n.call(this,e,t)};e.prototype=Object.assign(Object.create(n.prototype),{constructor:e,_updateValue:function(e){this.data.getRange(e,s);var t=s.key1,n=s.key2,i=s.value1,r=s.value2;if(this.interpolant)if(void 0!==i&&void 0!==r){var a=(e-t)/(n-t);this.target[this.path].lerpVectors(i,r,a)}else this.target[this.path].copy(i);else this.target[this.path].copy(i)}}),zen3d.VectorKeyframeTrack=e}(),function(){var n=zen3d.KeyframeTrack,s={key1:0,value1:0,key2:0,value2:0};function e(e,t){n.call(this,e,t)}e.prototype=Object.assign(Object.create(n.prototype),{constructor:e,_updateValue:function(e){this.data.getRange(e,s);var t=s.key1,n=s.key2,i=s.value1,r=s.value2;if(this.interpolant)if(void 0!==i&&void 0!==r){var a=(e-t)/(n-t);this.target[this.path].lerpColors(i,r,a)}else this.target[this.path].copy(i);else this.target[this.path].copy(i)}}),zen3d.ColorKeyframeTrack=e}(),function(){function e(e){this.name=e||"",this.tracks=[],this.loop=!0,this.startFrame=0,this.endFrame=0,this.frame=0}e.prototype=Object.assign(e.prototype,{update:function(e){this.frame+=e,this.frame>this.endFrame&&(this.loop?this.frame=this.startFrame:this.frame=this.endFrame),this.setFrame(this.frame)},setFrame:function(e){for(var t=0,n=this.tracks.length;t<n;t++)this.tracks[t].frame=e;this.frame=e}}),zen3d.KeyframeClip=e}(),function(){function e(){this._clips={},this._currentClipName=""}Object.defineProperties(e.prototype,{currentClipName:{get:function(){return this._currentClipName}},currentClip:{get:function(){return this._clips[this._currentClipName]}}}),e.prototype=Object.assign(e.prototype,{add:function(e){this._clips[e.name]=e},remove:function(e){delete this._clips[e.name]},update:function(e){var t=this._clips[this._currentClipName];t&&t.update(e)},active:function(e){var t=this._clips[e];t?(this._currentClipName=e,t.setFrame(t.startFrame)):console.warn("KeyframeAnimation: try to active a undefind clip!")},getAllClipNames:function(){var e=[];for(var t in this._clips)e.push(t);return e}}),zen3d.KeyframeAnimation=e}(),function(){function e(){this.path=void 0,this.responseType=void 0,this.withCredentials=void 0,this.mimeType=void 0,this.requestHeader=void 0}e.prototype=Object.assign(e.prototype,{load:function(e,n,t,i){void 0===e&&(e=""),null!=this.path&&(e=this.path+e);var r=e.match(/^data:(.*?)(;base64)?,(.*)$/);if(r){var a=r[1],s=!!r[2],o=r[3];o=window.decodeURIComponent(o),s&&(o=window.atob(o));try{var u,c=(this.responseType||"").toLowerCase();switch(c){case"arraybuffer":case"blob":u=new ArrayBuffer(o.length);for(var h=new Uint8Array(u),l=0;l<o.length;l++)h[l]=o.charCodeAt(l);"blob"===c&&(u=new Blob([u],{type:a}));break;case"document":var d=new DOMParser;u=d.parseFromString(o,a);break;case"json":u=JSON.parse(o);break;default:u=o}window.setTimeout(function(){n&&n(u)},0)}catch(e){window.setTimeout(function(){i&&i(e)},0)}}else{var p=new XMLHttpRequest;for(var f in p.open("GET",e,!0),p.addEventListener("load",function(e){var t=e.target.response;200===this.status?n&&n(t):0===this.status?(console.warn("THREE.FileLoader: HTTP Status 0 received."),n&&n(t)):i&&i(e)},!1),void 0!==t&&p.addEventListener("progress",function(e){t(e)},!1),void 0!==i&&p.addEventListener("error",function(e){i(e)},!1),void 0!==this.responseType&&(p.responseType=this.responseType),void 0!==this.withCredentials&&(p.withCredentials=this.withCredentials),p.overrideMimeType&&p.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)p.setRequestHeader(f,this.requestHeader[f]);p.send(null)}},setPath:function(e){return this.path=e,this},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}}),zen3d.FileLoader=e}(),function(){function e(){this.crossOrigin=void 0,this.path=void 0}e.prototype=Object.assign(e.prototype,{load:function(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e);var r=document.createElementNS("http://www.w3.org/1999/xhtml","img");return r.addEventListener("load",function(){t&&t(this)},!1),r.addEventListener("error",function(e){i&&i(e)},!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(r.crossOrigin=this.crossOrigin),r.src=e,r},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),zen3d.ImageLoader=e}(),function(){var s=zen3d.FileLoader,e=function(){};e.prototype=Object.assign(e.prototype,{load:function(e,t,n,i){var r=this,a=new s;a.setResponseType("arraybuffer"),a.load(e,function(e){void 0!==t&&t(r.parse(e))},n,i)},parse:function(e){var t=0,n=1,i=2,r=3,a=9,s=10,o=11,l=48,d=4,p=0,f=1,_=2,v=3;e.length<19&&console.error("TGALoader.parse: Not enough data to contain header.");var u=new Uint8Array(e),c=0,m={id_length:u[c++],colormap_type:u[c++],image_type:u[c++],colormap_index:u[c++]|u[c++]<<8,colormap_length:u[c++]|u[c++]<<8,colormap_size:u[c++],origin:[u[c++]|u[c++]<<8,u[c++]|u[c++]<<8],width:u[c++]|u[c++]<<8,height:u[c++]|u[c++]<<8,pixel_size:u[c++],flags:u[c++]};!function(e){switch(e.image_type){case n:case a:(256<e.colormap_length||24!==e.colormap_size||1!==e.colormap_type)&&console.error("TGALoader.parse.tgaCheckHeader: Invalid type colormap data for indexed type");break;case i:case r:case s:case o:e.colormap_type&&console.error("TGALoader.parse.tgaCheckHeader: Invalid type colormap data for colormap type");break;case t:console.error("TGALoader.parse.tgaCheckHeader: No data");default:console.error('TGALoader.parse.tgaCheckHeader: Invalid type " '+e.image_type+'"')}(e.width<=0||e.height<=0)&&console.error("TGALoader.parse.tgaCheckHeader: Invalid image size"),8!==e.pixel_size&&16!==e.pixel_size&&24!==e.pixel_size&&32!==e.pixel_size&&console.error('TGALoader.parse.tgaCheckHeader: Invalid pixel size "'+e.pixel_size+'"')}(m),m.id_length+c>e.length&&console.error("TGALoader.parse: No data"),c+=m.id_length;var h=!1,g=!1,E=!1;switch(m.image_type){case a:g=h=!0;break;case n:g=!0;break;case s:h=!0;break;case i:break;case o:E=h=!0;break;case r:E=!0}var y=document.createElement("canvas");y.width=m.width,y.height=m.height;var T=y.getContext("2d"),x=T.createImageData(m.width,m.height),M=function(e,t,n,i,r){var a,s,o,u;if(s=n.pixel_size>>3,o=n.width*n.height*s,t&&(u=r.subarray(i,i+=n.colormap_length*(n.colormap_size>>3))),e){var c,h,l;a=new Uint8Array(o);for(var d=0,p=new Uint8Array(s);d<o;)if(h=1+(127&(c=r[i++])),128&c){for(l=0;l<s;++l)p[l]=r[i++];for(l=0;l<h;++l)a.set(p,d+l*s);d+=s*h}else{for(h*=s,l=0;l<h;++l)a[d+l]=r[i++];d+=h}}else a=r.subarray(i,i+=t?n.width*n.height:o);return{pixel_data:a,palettes:u}}(h,g,m,c,u);!function(e,t,n,i,r){var a,s,o,u,c,h;switch((m.flags&l)>>d){default:case _:c=t,s=a=0,u=o=1,h=n;break;case p:a=0,c=t,s=n-(o=1),h=u=-1;break;case v:a=t-1,c=o=-1,s=0,u=1,h=n;break;case f:a=t-1,s=n-1,h=u=c=o=-1}if(E)switch(m.pixel_size){case 8:!function(e,t,n,i,r,a,s,o){var u,c,h,l=0,d=m.width;for(h=t;h!==i;h+=n)for(c=r;c!==s;c+=a,l++)u=o[l],e[4*(c+d*h)+0]=u,e[4*(c+d*h)+1]=u,e[4*(c+d*h)+2]=u,e[4*(c+d*h)+3]=255}(e,s,u,h,a,o,c,i);break;case 16:!function(e,t,n,i,r,a,s,o){var u,c,h=0,l=m.width;for(c=t;c!==i;c+=n)for(u=r;u!==s;u+=a,h+=2)e[4*(u+l*c)+0]=o[h+0],e[4*(u+l*c)+1]=o[h+0],e[4*(u+l*c)+2]=o[h+0],e[4*(u+l*c)+3]=o[h+1]}(e,s,u,h,a,o,c,i);break;default:console.error("TGALoader.parse.getTgaRGBA: not support this format")}else switch(m.pixel_size){case 8:!function(e,t,n,i,r,a,s,o,u){var c,h,l,d=u,p=0,f=m.width;for(l=t;l!==i;l+=n)for(h=r;h!==s;h+=a,p++)c=o[p],e[4*(h+f*l)+3]=255,e[4*(h+f*l)+2]=d[3*c+0],e[4*(h+f*l)+1]=d[3*c+1],e[4*(h+f*l)+0]=d[3*c+2]}(e,s,u,h,a,o,c,i,r);break;case 16:!function(e,t,n,i,r,a,s,o){var u,c,h,l=0,d=m.width;for(h=t;h!==i;h+=n)for(c=r;c!==s;c+=a,l+=2)u=o[l+0]+(o[l+1]<<8),e[4*(c+d*h)+0]=(31744&u)>>7,e[4*(c+d*h)+1]=(992&u)>>2,e[4*(c+d*h)+2]=(31&u)>>3,e[4*(c+d*h)+3]=32768&u?0:255}(e,s,u,h,a,o,c,i);break;case 24:!function(e,t,n,i,r,a,s,o){var u,c,h=0,l=m.width;for(c=t;c!==i;c+=n)for(u=r;u!==s;u+=a,h+=3)e[4*(u+l*c)+3]=255,e[4*(u+l*c)+2]=o[h+0],e[4*(u+l*c)+1]=o[h+1],e[4*(u+l*c)+0]=o[h+2]}(e,s,u,h,a,o,c,i);break;case 32:!function(e,t,n,i,r,a,s,o){var u,c,h=0,l=m.width;for(c=t;c!==i;c+=n)for(u=r;u!==s;u+=a,h+=4)e[4*(u+l*c)+2]=o[h+0],e[4*(u+l*c)+1]=o[h+1],e[4*(u+l*c)+0]=o[h+2],e[4*(u+l*c)+3]=o[h+3]}(e,s,u,h,a,o,c,i);break;default:console.error("TGALoader.parse.getTgaRGBA: not support this format")}}(x.data,m.width,m.height,M.pixel_data,M.palettes);return T.putImageData(x,0,0),y}}),zen3d.TGALoader=e}(),function(){function e(){this._entities={},this.enableCounter=!1}e.prototype=Object.assign(e.prototype,{getEntity:function(e){return this._entities[e]},getFps:function(){var e=this.getEntity("fps");return e&&e.averageDelta?Math.floor(1e3/e.averageDelta):0},updateFps:function(){this.enableCounter&&(this.endCounter("fps"),this.startCounter("fps",60))},getNow:function(){return window.performance?window.performance.now():(new Date).getTime()},startCounter:function(e,t){if(this.enableCounter){var n=this._entities[e];n||(n={start:0,end:0,delta:0,_cache:[],averageRange:1,averageDelta:0},this._entities[e]=n),n.start=this.getNow(),n.averageRange=t||1}},endCounter:function(e){if(this.enableCounter){var t=this._entities[e];if(t&&(t.end=this.getNow(),t.delta=t.end-t.start,1<t.averageRange)){t._cache.push(t.delta);var n=t._cache.length;if(n>=t.averageRange){n>t.averageRange&&(t._cache.shift(),n--);for(var i=0,r=0;r<n;r++)i+=t._cache[r];t.averageDelta=i/n}}}}}),zen3d.Performance=e}();