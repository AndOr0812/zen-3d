!function(){var u=function(t){u.superClass.constructor.call(this,t),this.vrDisplay=void 0,navigator.getVRDisplays?navigator.getVRDisplays().then(function(t){0<t.length?this.vrDisplay=t[0]:console.warn("HMD not available")}.bind(this)).catch(function(){console.warn("RendererVR: Unable to get VR Displays")}):console.warn("getVRDisplays not exist in navigator"),this.frameData=null,"VRFrameData"in window?this.frameData=new window.VRFrameData:console.warn("VRFrameData not exist")};zen3d.inherit(u,zen3d.Renderer);var l=new zen3d.Matrix4;u.prototype.render=function(t,a,e,r){var i=this.vrDisplay,n=this.frameData,s=a.cameraL,o=a.cameraR;if(i){i.depthNear=a.near,i.depthFar=a.far,i.getFrameData(n),s.projectionMatrix.elements=n.leftProjectionMatrix,l.elements=n.leftViewMatrix,l.inverse().decompose(s.position,s.quaternion,s.scale),s.position.add(a.position),s.updateMatrix(),o.projectionMatrix.elements=n.leftProjectionMatrix,l.elements=n.rightViewMatrix,l.inverse().decompose(o.position,o.quaternion,o.scale),o.position.add(a.position),o.updateMatrix();var c=this.backRenderTarget.width/2,m=this.backRenderTarget.height;this.setViewport(0,0,c,m),u.superClass.render.call(this,t,s,e,r);var h=this.autoClear;this.autoClear=!1,this.setViewport(c,0,c,m),u.superClass.render.call(this,t,o,e,!1),this.autoClear=h,i.submitFrame()}},zen3d.RendererVR=u}(),function(){var t=function(){t.superClass.constructor.call(this),this.type=zen3d.OBJECT_TYPE.CAMERA,this.cameraL=new zen3d.Camera,this.cameraR=new zen3d.Camera,this.near=1,this.far=1e3};zen3d.inherit(t,zen3d.Object3D),Object.defineProperties(t.prototype,{gammaFactor:{get:function(){return this.cameraL.gammaFactor},set:function(t){this.cameraL.gammaFactor=t,this.cameraR.gammaFactor=t}},gammaInput:{get:function(){return this.cameraL.gammaInput},set:function(t){this.cameraL.gammaInput=t,this.cameraR.gammaInput=t}},gammaOutput:{get:function(){return this.cameraL.gammaOutput},set:function(t){this.cameraL.gammaOutput=t,this.cameraR.gammaOutput=t}}}),zen3d.CameraVR=t}();