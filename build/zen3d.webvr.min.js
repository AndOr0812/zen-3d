!function(){var m=function(a){m.superClass.constructor.call(this,a),this.vrDisplay=void 0,navigator.getVRDisplays?navigator.getVRDisplays().then(function(a){0<a.length?this.vrDisplay=a[0]:console.warn("HMD not available")}.bind(this)).catch(function(){console.warn("RendererVR: Unable to get VR Displays")}):console.warn("getVRDisplays not exist in navigator"),this.frameData=null,"VRFrameData"in window?this.frameData=new window.VRFrameData:console.warn("VRFrameData not exist")};zen3d.inherit(m,zen3d.Renderer);var u=new zen3d.Matrix4;m.prototype.render=function(a,t,e,r){var n=this.vrDisplay,i=this.frameData,s=t.cameraL,o=t.cameraR;if(n){n.depthNear=t.near,n.depthFar=t.far,n.getFrameData(i),s.projectionMatrix.elements=i.leftProjectionMatrix,u.elements=i.leftViewMatrix,u.inverse().decompose(s.position,s.quaternion,s.scale),s.position.add(t.position),s.updateMatrix(),o.projectionMatrix.elements=i.leftProjectionMatrix,u.elements=i.rightViewMatrix,u.inverse().decompose(o.position,o.quaternion,o.scale),o.position.add(t.position),o.updateMatrix(),m.superClass.render.call(this,a,s,e,r);var c=this.autoClear;this.autoClear=!1,m.superClass.render.call(this,a,o,e,!1),this.autoClear=c,n.submitFrame()}},zen3d.RendererVR=m}(),function(){var a=function(){a.superClass.constructor.call(this),this.type=zen3d.OBJECT_TYPE.CAMERA,this.cameraL=new zen3d.Camera,this.cameraR=new zen3d.Camera,this.cameraL.rect.set(0,0,.5,1),this.cameraR.rect.set(.5,0,1,1),this.near=1,this.far=1e3};zen3d.inherit(a,zen3d.Object3D),Object.defineProperties(a.prototype,{gammaFactor:{get:function(){return this.cameraL.gammaFactor},set:function(a){this.cameraL.gammaFactor=a,this.cameraR.gammaFactor=a}},gammaInput:{get:function(){return this.cameraL.gammaInput},set:function(a){this.cameraL.gammaInput=a,this.cameraR.gammaInput=a}},gammaOutput:{get:function(){return this.cameraL.gammaOutput},set:function(a){this.cameraL.gammaOutput=a,this.cameraR.gammaOutput=a}}}),zen3d.CameraVR=a}();