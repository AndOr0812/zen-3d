!function(){var d=function(e){d.superClass.constructor.call(this,e),this.vrDisplay=void 0,navigator.getVRDisplays?navigator.getVRDisplays().then(function(e){0<e.length?this.vrDisplay=e[0]:console.warn("HMD not available")}.bind(this)).catch(function(){console.warn("RendererVR: Unable to get VR Displays")}):console.warn("getVRDisplays not exist in navigator"),this.frameData=null,"VRFrameData"in window?this.frameData=new window.VRFrameData:console.warn("VRFrameData not exist")};zen3d.inherit(d,zen3d.Renderer);var p=new zen3d.Matrix4;d.prototype.render=function(e,t,a,i){var r=this.vrDisplay,n=this.frameData,s=t.cameraL,o=t.cameraR;if(r){r.depthNear=t.near,r.depthFar=t.far,r.getFrameData(n),s.projectionMatrix.elements=n.leftProjectionMatrix,p.elements=n.leftViewMatrix,p.inverse().decompose(s.position,s.quaternion,s.scale),s.position.add(t.position),s.updateMatrix(),o.projectionMatrix.elements=n.leftProjectionMatrix,p.elements=n.rightViewMatrix,p.inverse().decompose(o.position,o.quaternion,o.scale),o.position.add(t.position),o.updateMatrix();var l=this.backRenderTarget.width/2,c=this.backRenderTarget.height;this.setViewport(0,0,l,c),d.superClass.render.call(this,e,s,a,i);var h=this.autoClear;this.autoClear=!1,this.setViewport(l,0,l,c),d.superClass.render.call(this,e,o,a,!1),this.autoClear=h,r.submitFrame()}},zen3d.RendererVR=d}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.OBJECT_TYPE.CAMERA,this.cameraL=new zen3d.Camera,this.cameraR=new zen3d.Camera,this.near=1,this.far=1e3};zen3d.inherit(e,zen3d.Object3D),zen3d.CameraVR=e}();