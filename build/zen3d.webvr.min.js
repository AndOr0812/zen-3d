!function(){var e=function(t){e.superClass.constructor.call(this,t),this.vrDisplay=void 0,navigator.getVRDisplays?navigator.getVRDisplays().then(function(e){e.length>0?this.vrDisplay=e[0]:console.warn("HMD not available")}.bind(this)).catch(function(){console.warn("RendererVR: Unable to get VR Displays")}):console.warn("getVRDisplays not exist in navigator"),this.frameData=null,"VRFrameData"in window?this.frameData=new window.VRFrameData:console.warn("VRFrameData not exist")};zen3d.inherit(e,zen3d.Renderer);var t=new zen3d.Matrix4;e.prototype.render=function(a,i,n,r){var s=this.vrDisplay,o=this.frameData,h=i.cameraL,l=i.cameraR;if(s){s.depthNear=i.near,s.depthFar=i.far,s.getFrameData(o),h.projectionMatrix.elements=o.leftProjectionMatrix,t.elements=o.leftViewMatrix,t.inverse().decompose(h.position,h.quaternion,h.scale),h.position.add(i.position),h.updateMatrix(),l.projectionMatrix.elements=o.leftProjectionMatrix,t.elements=o.rightViewMatrix,t.inverse().decompose(l.position,l.quaternion,l.scale),l.position.add(i.position),l.updateMatrix(),this.setViewport(0,0,this.width/2,this.height),e.superClass.render.call(this,a,h,n,r);var c=this.autoClear;this.autoClear=!1,this.setViewport(this.width/2,0,this.width/2,this.height),e.superClass.render.call(this,a,l,n,!1),this.autoClear=c,s.submitFrame()}},zen3d.RendererVR=e}(),function(){var e=function(){e.superClass.constructor.call(this),this.type=zen3d.OBJECT_TYPE.CAMERA,this.cameraL=new zen3d.Camera,this.cameraR=new zen3d.Camera,this.near=1,this.far=1e3};zen3d.inherit(e,zen3d.Object3D),zen3d.CameraVR=e}();